
PowerManagementBoard.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004fcc  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002c4  0800508c  0800508c  0000608c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005350  08005350  00007020  2**0
                  CONTENTS
  4 .ARM          00000000  08005350  08005350  00007020  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005350  08005350  00007020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005350  08005350  00006350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08005354  08005354  00006354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000020  20000000  08005358  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000384  20000020  08005378  00007020  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003a4  08005378  000073a4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00007020  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c0e5  00000000  00000000  00007048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001e8e  00000000  00000000  0001312d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000008d8  00000000  00000000  00014fc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000006e7  00000000  00000000  00015898  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00014b43  00000000  00000000  00015f7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000bcd5  00000000  00000000  0002aac2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00080a17  00000000  00000000  00036797  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  000b71ae  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001e98  00000000  00000000  000b7234  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  000b90cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000020 	.word	0x20000020
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08005074 	.word	0x08005074

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000024 	.word	0x20000024
 8000104:	08005074 	.word	0x08005074

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	@ 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f8f0 	bl	80003f0 <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__divsi3>:
 800021c:	4603      	mov	r3, r0
 800021e:	430b      	orrs	r3, r1
 8000220:	d47f      	bmi.n	8000322 <__divsi3+0x106>
 8000222:	2200      	movs	r2, #0
 8000224:	0843      	lsrs	r3, r0, #1
 8000226:	428b      	cmp	r3, r1
 8000228:	d374      	bcc.n	8000314 <__divsi3+0xf8>
 800022a:	0903      	lsrs	r3, r0, #4
 800022c:	428b      	cmp	r3, r1
 800022e:	d35f      	bcc.n	80002f0 <__divsi3+0xd4>
 8000230:	0a03      	lsrs	r3, r0, #8
 8000232:	428b      	cmp	r3, r1
 8000234:	d344      	bcc.n	80002c0 <__divsi3+0xa4>
 8000236:	0b03      	lsrs	r3, r0, #12
 8000238:	428b      	cmp	r3, r1
 800023a:	d328      	bcc.n	800028e <__divsi3+0x72>
 800023c:	0c03      	lsrs	r3, r0, #16
 800023e:	428b      	cmp	r3, r1
 8000240:	d30d      	bcc.n	800025e <__divsi3+0x42>
 8000242:	22ff      	movs	r2, #255	@ 0xff
 8000244:	0209      	lsls	r1, r1, #8
 8000246:	ba12      	rev	r2, r2
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d302      	bcc.n	8000254 <__divsi3+0x38>
 800024e:	1212      	asrs	r2, r2, #8
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	d065      	beq.n	8000320 <__divsi3+0x104>
 8000254:	0b03      	lsrs	r3, r0, #12
 8000256:	428b      	cmp	r3, r1
 8000258:	d319      	bcc.n	800028e <__divsi3+0x72>
 800025a:	e000      	b.n	800025e <__divsi3+0x42>
 800025c:	0a09      	lsrs	r1, r1, #8
 800025e:	0bc3      	lsrs	r3, r0, #15
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__divsi3+0x4c>
 8000264:	03cb      	lsls	r3, r1, #15
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0b83      	lsrs	r3, r0, #14
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x58>
 8000270:	038b      	lsls	r3, r1, #14
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b43      	lsrs	r3, r0, #13
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x64>
 800027c:	034b      	lsls	r3, r1, #13
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x70>
 8000288:	030b      	lsls	r3, r1, #12
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0ac3      	lsrs	r3, r0, #11
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x7c>
 8000294:	02cb      	lsls	r3, r1, #11
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0a83      	lsrs	r3, r0, #10
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x88>
 80002a0:	028b      	lsls	r3, r1, #10
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a43      	lsrs	r3, r0, #9
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x94>
 80002ac:	024b      	lsls	r3, r1, #9
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a03      	lsrs	r3, r0, #8
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0xa0>
 80002b8:	020b      	lsls	r3, r1, #8
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	d2cd      	bcs.n	800025c <__divsi3+0x40>
 80002c0:	09c3      	lsrs	r3, r0, #7
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d301      	bcc.n	80002ca <__divsi3+0xae>
 80002c6:	01cb      	lsls	r3, r1, #7
 80002c8:	1ac0      	subs	r0, r0, r3
 80002ca:	4152      	adcs	r2, r2
 80002cc:	0983      	lsrs	r3, r0, #6
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xba>
 80002d2:	018b      	lsls	r3, r1, #6
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0943      	lsrs	r3, r0, #5
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xc6>
 80002de:	014b      	lsls	r3, r1, #5
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0903      	lsrs	r3, r0, #4
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xd2>
 80002ea:	010b      	lsls	r3, r1, #4
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	08c3      	lsrs	r3, r0, #3
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xde>
 80002f6:	00cb      	lsls	r3, r1, #3
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0883      	lsrs	r3, r0, #2
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xea>
 8000302:	008b      	lsls	r3, r1, #2
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0843      	lsrs	r3, r0, #1
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xf6>
 800030e:	004b      	lsls	r3, r1, #1
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	1a41      	subs	r1, r0, r1
 8000316:	d200      	bcs.n	800031a <__divsi3+0xfe>
 8000318:	4601      	mov	r1, r0
 800031a:	4152      	adcs	r2, r2
 800031c:	4610      	mov	r0, r2
 800031e:	4770      	bx	lr
 8000320:	e05d      	b.n	80003de <__divsi3+0x1c2>
 8000322:	0fca      	lsrs	r2, r1, #31
 8000324:	d000      	beq.n	8000328 <__divsi3+0x10c>
 8000326:	4249      	negs	r1, r1
 8000328:	1003      	asrs	r3, r0, #32
 800032a:	d300      	bcc.n	800032e <__divsi3+0x112>
 800032c:	4240      	negs	r0, r0
 800032e:	4053      	eors	r3, r2
 8000330:	2200      	movs	r2, #0
 8000332:	469c      	mov	ip, r3
 8000334:	0903      	lsrs	r3, r0, #4
 8000336:	428b      	cmp	r3, r1
 8000338:	d32d      	bcc.n	8000396 <__divsi3+0x17a>
 800033a:	0a03      	lsrs	r3, r0, #8
 800033c:	428b      	cmp	r3, r1
 800033e:	d312      	bcc.n	8000366 <__divsi3+0x14a>
 8000340:	22fc      	movs	r2, #252	@ 0xfc
 8000342:	0189      	lsls	r1, r1, #6
 8000344:	ba12      	rev	r2, r2
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d30c      	bcc.n	8000366 <__divsi3+0x14a>
 800034c:	0189      	lsls	r1, r1, #6
 800034e:	1192      	asrs	r2, r2, #6
 8000350:	428b      	cmp	r3, r1
 8000352:	d308      	bcc.n	8000366 <__divsi3+0x14a>
 8000354:	0189      	lsls	r1, r1, #6
 8000356:	1192      	asrs	r2, r2, #6
 8000358:	428b      	cmp	r3, r1
 800035a:	d304      	bcc.n	8000366 <__divsi3+0x14a>
 800035c:	0189      	lsls	r1, r1, #6
 800035e:	d03a      	beq.n	80003d6 <__divsi3+0x1ba>
 8000360:	1192      	asrs	r2, r2, #6
 8000362:	e000      	b.n	8000366 <__divsi3+0x14a>
 8000364:	0989      	lsrs	r1, r1, #6
 8000366:	09c3      	lsrs	r3, r0, #7
 8000368:	428b      	cmp	r3, r1
 800036a:	d301      	bcc.n	8000370 <__divsi3+0x154>
 800036c:	01cb      	lsls	r3, r1, #7
 800036e:	1ac0      	subs	r0, r0, r3
 8000370:	4152      	adcs	r2, r2
 8000372:	0983      	lsrs	r3, r0, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x160>
 8000378:	018b      	lsls	r3, r1, #6
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0943      	lsrs	r3, r0, #5
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x16c>
 8000384:	014b      	lsls	r3, r1, #5
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0903      	lsrs	r3, r0, #4
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x178>
 8000390:	010b      	lsls	r3, r1, #4
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	08c3      	lsrs	r3, r0, #3
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x184>
 800039c:	00cb      	lsls	r3, r1, #3
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0883      	lsrs	r3, r0, #2
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x190>
 80003a8:	008b      	lsls	r3, r1, #2
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	d2d9      	bcs.n	8000364 <__divsi3+0x148>
 80003b0:	0843      	lsrs	r3, r0, #1
 80003b2:	428b      	cmp	r3, r1
 80003b4:	d301      	bcc.n	80003ba <__divsi3+0x19e>
 80003b6:	004b      	lsls	r3, r1, #1
 80003b8:	1ac0      	subs	r0, r0, r3
 80003ba:	4152      	adcs	r2, r2
 80003bc:	1a41      	subs	r1, r0, r1
 80003be:	d200      	bcs.n	80003c2 <__divsi3+0x1a6>
 80003c0:	4601      	mov	r1, r0
 80003c2:	4663      	mov	r3, ip
 80003c4:	4152      	adcs	r2, r2
 80003c6:	105b      	asrs	r3, r3, #1
 80003c8:	4610      	mov	r0, r2
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x1b4>
 80003cc:	4240      	negs	r0, r0
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d500      	bpl.n	80003d4 <__divsi3+0x1b8>
 80003d2:	4249      	negs	r1, r1
 80003d4:	4770      	bx	lr
 80003d6:	4663      	mov	r3, ip
 80003d8:	105b      	asrs	r3, r3, #1
 80003da:	d300      	bcc.n	80003de <__divsi3+0x1c2>
 80003dc:	4240      	negs	r0, r0
 80003de:	b501      	push	{r0, lr}
 80003e0:	2000      	movs	r0, #0
 80003e2:	f000 f805 	bl	80003f0 <__aeabi_idiv0>
 80003e6:	bd02      	pop	{r1, pc}

080003e8 <__aeabi_idivmod>:
 80003e8:	2900      	cmp	r1, #0
 80003ea:	d0f8      	beq.n	80003de <__divsi3+0x1c2>
 80003ec:	e716      	b.n	800021c <__divsi3>
 80003ee:	4770      	bx	lr

080003f0 <__aeabi_idiv0>:
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			@ (mov r8, r8)

080003f4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80003f4:	b590      	push	{r4, r7, lr}
 80003f6:	b083      	sub	sp, #12
 80003f8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
	int8_t modbus_status = HAL_OK;
 80003fa:	1dfb      	adds	r3, r7, #7
 80003fc:	2200      	movs	r2, #0
 80003fe:	701a      	strb	r2, [r3, #0]
	uint8_t modbus_tx_len = 0;
 8000400:	1cbb      	adds	r3, r7, #2
 8000402:	2200      	movs	r2, #0
 8000404:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000406:	f001 fb2a 	bl	8001a5e <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800040a:	f000 fa21 	bl	8000850 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800040e:	f000 fad3 	bl	80009b8 <MX_GPIO_Init>
  MX_DMA_Init();
 8000412:	f000 faab 	bl	800096c <MX_DMA_Init>
  MX_USART1_UART_Init();
 8000416:	f000 fa59 	bl	80008cc <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */

  if(modbus_set_rx() != HAL_OK)
 800041a:	f000 ff0b 	bl	8001234 <modbus_set_rx>
 800041e:	1e03      	subs	r3, r0, #0
 8000420:	d001      	beq.n	8000426 <main+0x32>
  {
	  Error_Handler();
 8000422:	f000 fb47 	bl	8000ab4 <Error_Handler>
  }
  wdg_time = 0;
 8000426:	4bd2      	ldr	r3, [pc, #840]	@ (8000770 <main+0x37c>)
 8000428:	2200      	movs	r2, #0
 800042a:	601a      	str	r2, [r3, #0]
  shutdown = 0;
 800042c:	4bd1      	ldr	r3, [pc, #836]	@ (8000774 <main+0x380>)
 800042e:	2200      	movs	r2, #0
 8000430:	701a      	strb	r2, [r3, #0]

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(HAL_GPIO_ReadPin(MANUAL_GPIO_Port, MANUAL_Pin) == GPIO_PIN_SET)
 8000432:	4bd1      	ldr	r3, [pc, #836]	@ (8000778 <main+0x384>)
 8000434:	2140      	movs	r1, #64	@ 0x40
 8000436:	0018      	movs	r0, r3
 8000438:	f002 fabe 	bl	80029b8 <HAL_GPIO_ReadPin>
 800043c:	0003      	movs	r3, r0
 800043e:	2b01      	cmp	r3, #1
 8000440:	d000      	beq.n	8000444 <main+0x50>
 8000442:	e1db      	b.n	80007fc <main+0x408>
	  {
		  if(shutdown)
 8000444:	4bcb      	ldr	r3, [pc, #812]	@ (8000774 <main+0x380>)
 8000446:	781b      	ldrb	r3, [r3, #0]
 8000448:	2b00      	cmp	r3, #0
 800044a:	d044      	beq.n	80004d6 <main+0xe2>
		  {
			  // Set all GPIO pins low
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_RESET);
 800044c:	4bca      	ldr	r3, [pc, #808]	@ (8000778 <main+0x384>)
 800044e:	2200      	movs	r2, #0
 8000450:	2180      	movs	r1, #128	@ 0x80
 8000452:	0018      	movs	r0, r3
 8000454:	f002 facd 	bl	80029f2 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_RESET);
 8000458:	4bc7      	ldr	r3, [pc, #796]	@ (8000778 <main+0x384>)
 800045a:	2200      	movs	r2, #0
 800045c:	2180      	movs	r1, #128	@ 0x80
 800045e:	0018      	movs	r0, r3
 8000460:	f002 fac7 	bl	80029f2 <HAL_GPIO_WritePin>

			  // Carry the pin changes to the register database
			  holding_register_database[GPIO_WRITE] = 0;
 8000464:	4bc5      	ldr	r3, [pc, #788]	@ (800077c <main+0x388>)
 8000466:	2200      	movs	r2, #0
 8000468:	819a      	strh	r2, [r3, #12]
			  prev_gpio_write_register = 0;
 800046a:	4bc5      	ldr	r3, [pc, #788]	@ (8000780 <main+0x38c>)
 800046c:	2200      	movs	r2, #0
 800046e:	801a      	strh	r2, [r3, #0]

			  // Restart the Modbus
			  modbus_status = modbus_startup();
 8000470:	1dfc      	adds	r4, r7, #7
 8000472:	f000 ff67 	bl	8001344 <modbus_startup>
 8000476:	0003      	movs	r3, r0
 8000478:	7023      	strb	r3, [r4, #0]
			  if(modbus_status != 0)
 800047a:	1dfb      	adds	r3, r7, #7
 800047c:	781b      	ldrb	r3, [r3, #0]
 800047e:	b25b      	sxtb	r3, r3
 8000480:	2b00      	cmp	r3, #0
 8000482:	d00d      	beq.n	80004a0 <main+0xac>
			  {
				  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status) + (MB_FATAL_ERROR - RANGE_ERROR));
 8000484:	4bbd      	ldr	r3, [pc, #756]	@ (800077c <main+0x388>)
 8000486:	891a      	ldrh	r2, [r3, #8]
 8000488:	1dfb      	adds	r3, r7, #7
 800048a:	781b      	ldrb	r3, [r3, #0]
 800048c:	b25b      	sxtb	r3, r3
 800048e:	3307      	adds	r3, #7
 8000490:	2101      	movs	r1, #1
 8000492:	4099      	lsls	r1, r3
 8000494:	000b      	movs	r3, r1
 8000496:	b29b      	uxth	r3, r3
 8000498:	4313      	orrs	r3, r2
 800049a:	b29a      	uxth	r2, r3
 800049c:	4bb7      	ldr	r3, [pc, #732]	@ (800077c <main+0x388>)
 800049e:	811a      	strh	r2, [r3, #8]
			  }
			  modbus_status = modbus_set_rx();
 80004a0:	1dfc      	adds	r4, r7, #7
 80004a2:	f000 fec7 	bl	8001234 <modbus_set_rx>
 80004a6:	0003      	movs	r3, r0
 80004a8:	7023      	strb	r3, [r4, #0]
			  if(modbus_status != 0)
 80004aa:	1dfb      	adds	r3, r7, #7
 80004ac:	781b      	ldrb	r3, [r3, #0]
 80004ae:	b25b      	sxtb	r3, r3
 80004b0:	2b00      	cmp	r3, #0
 80004b2:	d00d      	beq.n	80004d0 <main+0xdc>
			  {
				  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status) + (MB_FATAL_ERROR - RANGE_ERROR));
 80004b4:	4bb1      	ldr	r3, [pc, #708]	@ (800077c <main+0x388>)
 80004b6:	891a      	ldrh	r2, [r3, #8]
 80004b8:	1dfb      	adds	r3, r7, #7
 80004ba:	781b      	ldrb	r3, [r3, #0]
 80004bc:	b25b      	sxtb	r3, r3
 80004be:	3307      	adds	r3, #7
 80004c0:	2101      	movs	r1, #1
 80004c2:	4099      	lsls	r1, r3
 80004c4:	000b      	movs	r3, r1
 80004c6:	b29b      	uxth	r3, r3
 80004c8:	4313      	orrs	r3, r2
 80004ca:	b29a      	uxth	r2, r3
 80004cc:	4bab      	ldr	r3, [pc, #684]	@ (800077c <main+0x388>)
 80004ce:	811a      	strh	r2, [r3, #8]
			  }

			  // Ensure this code only executes once
			  shutdown = 0;
 80004d0:	4ba8      	ldr	r3, [pc, #672]	@ (8000774 <main+0x380>)
 80004d2:	2200      	movs	r2, #0
 80004d4:	701a      	strb	r2, [r3, #0]
		  }
		  // Update the GPIO_READ register
		  GPIO_PinState estop_sense = HAL_GPIO_ReadPin(ESTOP_SENSE_GPIO_Port, ESTOP_SENSE_Pin);
 80004d6:	1d3c      	adds	r4, r7, #4
 80004d8:	2380      	movs	r3, #128	@ 0x80
 80004da:	009b      	lsls	r3, r3, #2
 80004dc:	4aa6      	ldr	r2, [pc, #664]	@ (8000778 <main+0x384>)
 80004de:	0019      	movs	r1, r3
 80004e0:	0010      	movs	r0, r2
 80004e2:	f002 fa69 	bl	80029b8 <HAL_GPIO_ReadPin>
 80004e6:	0003      	movs	r3, r0
 80004e8:	7023      	strb	r3, [r4, #0]
		  GPIO_PinState sense_120 = HAL_GPIO_ReadPin(SENSE_120_GPIO_Port, SENSE_120_Pin);
 80004ea:	1cfc      	adds	r4, r7, #3
 80004ec:	2380      	movs	r3, #128	@ 0x80
 80004ee:	021b      	lsls	r3, r3, #8
 80004f0:	4aa1      	ldr	r2, [pc, #644]	@ (8000778 <main+0x384>)
 80004f2:	0019      	movs	r1, r3
 80004f4:	0010      	movs	r0, r2
 80004f6:	f002 fa5f 	bl	80029b8 <HAL_GPIO_ReadPin>
 80004fa:	0003      	movs	r3, r0
 80004fc:	7023      	strb	r3, [r4, #0]

		  holding_register_database[GPIO_READ] = ((estop_sense << ESTOP_SENSE_POS) | (sense_120 << SENSE_120_POS));
 80004fe:	1d3b      	adds	r3, r7, #4
 8000500:	781b      	ldrb	r3, [r3, #0]
 8000502:	b21a      	sxth	r2, r3
 8000504:	1cfb      	adds	r3, r7, #3
 8000506:	781b      	ldrb	r3, [r3, #0]
 8000508:	005b      	lsls	r3, r3, #1
 800050a:	b21b      	sxth	r3, r3
 800050c:	4313      	orrs	r3, r2
 800050e:	b21b      	sxth	r3, r3
 8000510:	b29a      	uxth	r2, r3
 8000512:	4b9a      	ldr	r3, [pc, #616]	@ (800077c <main+0x388>)
 8000514:	815a      	strh	r2, [r3, #10]

		  // Handle adjustment of the GPIO_WRITE pins
		  if(prev_gpio_write_register != holding_register_database[GPIO_WRITE])
 8000516:	4b99      	ldr	r3, [pc, #612]	@ (800077c <main+0x388>)
 8000518:	899a      	ldrh	r2, [r3, #12]
 800051a:	4b99      	ldr	r3, [pc, #612]	@ (8000780 <main+0x38c>)
 800051c:	881b      	ldrh	r3, [r3, #0]
 800051e:	429a      	cmp	r2, r3
 8000520:	d033      	beq.n	800058a <main+0x196>
		  {
			  if((prev_gpio_write_register & RELAY_120_MASK) != (holding_register_database[GPIO_WRITE] & RELAY_120_MASK))
 8000522:	4b96      	ldr	r3, [pc, #600]	@ (800077c <main+0x388>)
 8000524:	899a      	ldrh	r2, [r3, #12]
 8000526:	4b96      	ldr	r3, [pc, #600]	@ (8000780 <main+0x38c>)
 8000528:	881b      	ldrh	r3, [r3, #0]
 800052a:	4053      	eors	r3, r2
 800052c:	b29b      	uxth	r3, r3
 800052e:	001a      	movs	r2, r3
 8000530:	2301      	movs	r3, #1
 8000532:	4013      	ands	r3, r2
 8000534:	d00b      	beq.n	800054e <main+0x15a>
			  {
				  HAL_GPIO_WritePin(RELAY_120_GPIO_Port, RELAY_120_Pin, (holding_register_database[GPIO_WRITE] & RELAY_120_MASK));
 8000536:	4b91      	ldr	r3, [pc, #580]	@ (800077c <main+0x388>)
 8000538:	899b      	ldrh	r3, [r3, #12]
 800053a:	b2db      	uxtb	r3, r3
 800053c:	2201      	movs	r2, #1
 800053e:	4013      	ands	r3, r2
 8000540:	b2da      	uxtb	r2, r3
 8000542:	2380      	movs	r3, #128	@ 0x80
 8000544:	005b      	lsls	r3, r3, #1
 8000546:	488c      	ldr	r0, [pc, #560]	@ (8000778 <main+0x384>)
 8000548:	0019      	movs	r1, r3
 800054a:	f002 fa52 	bl	80029f2 <HAL_GPIO_WritePin>
			  }
			  if((prev_gpio_write_register & RELAY_480_MASK) != (holding_register_database[GPIO_WRITE] & RELAY_480_MASK))
 800054e:	4b8b      	ldr	r3, [pc, #556]	@ (800077c <main+0x388>)
 8000550:	899a      	ldrh	r2, [r3, #12]
 8000552:	4b8b      	ldr	r3, [pc, #556]	@ (8000780 <main+0x38c>)
 8000554:	881b      	ldrh	r3, [r3, #0]
 8000556:	4053      	eors	r3, r2
 8000558:	b29b      	uxth	r3, r3
 800055a:	001a      	movs	r2, r3
 800055c:	2302      	movs	r3, #2
 800055e:	4013      	ands	r3, r2
 8000560:	d00a      	beq.n	8000578 <main+0x184>
			  {
				  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, (holding_register_database[GPIO_WRITE] & RELAY_480_MASK));
 8000562:	4b86      	ldr	r3, [pc, #536]	@ (800077c <main+0x388>)
 8000564:	899b      	ldrh	r3, [r3, #12]
 8000566:	b2db      	uxtb	r3, r3
 8000568:	2202      	movs	r2, #2
 800056a:	4013      	ands	r3, r2
 800056c:	b2db      	uxtb	r3, r3
 800056e:	4882      	ldr	r0, [pc, #520]	@ (8000778 <main+0x384>)
 8000570:	001a      	movs	r2, r3
 8000572:	2180      	movs	r1, #128	@ 0x80
 8000574:	f002 fa3d 	bl	80029f2 <HAL_GPIO_WritePin>
			  }
			  prev_gpio_write_register = holding_register_database[GPIO_WRITE];
 8000578:	4b80      	ldr	r3, [pc, #512]	@ (800077c <main+0x388>)
 800057a:	899a      	ldrh	r2, [r3, #12]
 800057c:	4b80      	ldr	r3, [pc, #512]	@ (8000780 <main+0x38c>)
 800057e:	801a      	strh	r2, [r3, #0]
			  wdg_time = HAL_GetTick();
 8000580:	f001 fae0 	bl	8001b44 <HAL_GetTick>
 8000584:	0002      	movs	r2, r0
 8000586:	4b7a      	ldr	r3, [pc, #488]	@ (8000770 <main+0x37c>)
 8000588:	601a      	str	r2, [r3, #0]
		  }

		  // Handle Watchdog Timeout
		  if(HAL_GetTick() - wdg_time > (uint32_t)(holding_register_database[WDG_TIMEOUT]))
 800058a:	f001 fadb 	bl	8001b44 <HAL_GetTick>
 800058e:	0002      	movs	r2, r0
 8000590:	4b77      	ldr	r3, [pc, #476]	@ (8000770 <main+0x37c>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	1ad3      	subs	r3, r2, r3
 8000596:	4a79      	ldr	r2, [pc, #484]	@ (800077c <main+0x388>)
 8000598:	89d2      	ldrh	r2, [r2, #14]
 800059a:	4293      	cmp	r3, r2
 800059c:	d912      	bls.n	80005c4 <main+0x1d0>
		  {
			  // Turn off the TBM
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_RESET);
 800059e:	4b76      	ldr	r3, [pc, #472]	@ (8000778 <main+0x384>)
 80005a0:	2200      	movs	r2, #0
 80005a2:	2180      	movs	r1, #128	@ 0x80
 80005a4:	0018      	movs	r0, r3
 80005a6:	f002 fa24 	bl	80029f2 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(RELAY_120_GPIO_Port, RELAY_120_Pin, GPIO_PIN_RESET);
 80005aa:	2380      	movs	r3, #128	@ 0x80
 80005ac:	005b      	lsls	r3, r3, #1
 80005ae:	4872      	ldr	r0, [pc, #456]	@ (8000778 <main+0x384>)
 80005b0:	2200      	movs	r2, #0
 80005b2:	0019      	movs	r1, r3
 80005b4:	f002 fa1d 	bl	80029f2 <HAL_GPIO_WritePin>

			  // Update the holding register database
			  holding_register_database[GPIO_WRITE] = 0;
 80005b8:	4b70      	ldr	r3, [pc, #448]	@ (800077c <main+0x388>)
 80005ba:	2200      	movs	r2, #0
 80005bc:	819a      	strh	r2, [r3, #12]
			  prev_gpio_write_register = 0;
 80005be:	4b70      	ldr	r3, [pc, #448]	@ (8000780 <main+0x38c>)
 80005c0:	2200      	movs	r2, #0
 80005c2:	801a      	strh	r2, [r3, #0]
		  }

		  // Handle Modbus Communication
		  if(modbus_rx())
 80005c4:	f000 fafe 	bl	8000bc4 <modbus_rx>
 80005c8:	1e03      	subs	r3, r0, #0
 80005ca:	d100      	bne.n	80005ce <main+0x1da>
 80005cc:	e07e      	b.n	80006cc <main+0x2d8>
		  {
			  if(get_rx_buffer(0) == holding_register_database[MODBUS_ID]) // Check Slave ID
 80005ce:	2000      	movs	r0, #0
 80005d0:	f000 ffb6 	bl	8001540 <get_rx_buffer>
 80005d4:	0003      	movs	r3, r0
 80005d6:	001a      	movs	r2, r3
 80005d8:	4b68      	ldr	r3, [pc, #416]	@ (800077c <main+0x388>)
 80005da:	881b      	ldrh	r3, [r3, #0]
 80005dc:	429a      	cmp	r2, r3
 80005de:	d138      	bne.n	8000652 <main+0x25e>
			  {
				  wdg_time = HAL_GetTick();
 80005e0:	f001 fab0 	bl	8001b44 <HAL_GetTick>
 80005e4:	0002      	movs	r2, r0
 80005e6:	4b62      	ldr	r3, [pc, #392]	@ (8000770 <main+0x37c>)
 80005e8:	601a      	str	r2, [r3, #0]
				  switch(get_rx_buffer(1))
 80005ea:	2001      	movs	r0, #1
 80005ec:	f000 ffa8 	bl	8001540 <get_rx_buffer>
 80005f0:	0003      	movs	r3, r0
 80005f2:	2b03      	cmp	r3, #3
 80005f4:	d002      	beq.n	80005fc <main+0x208>
 80005f6:	2b10      	cmp	r3, #16
 80005f8:	d008      	beq.n	800060c <main+0x218>
 80005fa:	e00f      	b.n	800061c <main+0x228>
				  {
					  case 0x03:
					  {
						  // Return holding registers
						  modbus_status = return_holding_registers(&modbus_tx_len);
 80005fc:	1dfc      	adds	r4, r7, #7
 80005fe:	1cbb      	adds	r3, r7, #2
 8000600:	0018      	movs	r0, r3
 8000602:	f000 faf1 	bl	8000be8 <return_holding_registers>
 8000606:	0003      	movs	r3, r0
 8000608:	7023      	strb	r3, [r4, #0]
						  break;
 800060a:	e00e      	b.n	800062a <main+0x236>
					  }
					  case 0x10:
					  {
						  // Write holding registers
						  modbus_status = edit_multiple_registers(&modbus_tx_len);
 800060c:	1dfc      	adds	r4, r7, #7
 800060e:	1cbb      	adds	r3, r7, #2
 8000610:	0018      	movs	r0, r3
 8000612:	f000 fb95 	bl	8000d40 <edit_multiple_registers>
 8000616:	0003      	movs	r3, r0
 8000618:	7023      	strb	r3, [r4, #0]
						  break;
 800061a:	e006      	b.n	800062a <main+0x236>
					  }
					  default:
					  {
						  modbus_status = modbus_exception(MB_ILLEGAL_FUNCTION);
 800061c:	1dfc      	adds	r4, r7, #7
 800061e:	2004      	movs	r0, #4
 8000620:	f000 fc90 	bl	8000f44 <modbus_exception>
 8000624:	0003      	movs	r3, r0
 8000626:	7023      	strb	r3, [r4, #0]
						  break;
 8000628:	46c0      	nop			@ (mov r8, r8)
					  }
				  }
				  if(modbus_status != 0)
 800062a:	1dfb      	adds	r3, r7, #7
 800062c:	781b      	ldrb	r3, [r3, #0]
 800062e:	b25b      	sxtb	r3, r3
 8000630:	2b00      	cmp	r3, #0
 8000632:	d04b      	beq.n	80006cc <main+0x2d8>
				  {
					  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status) + (MB_FATAL_ERROR - RANGE_ERROR));
 8000634:	4b51      	ldr	r3, [pc, #324]	@ (800077c <main+0x388>)
 8000636:	891a      	ldrh	r2, [r3, #8]
 8000638:	1dfb      	adds	r3, r7, #7
 800063a:	781b      	ldrb	r3, [r3, #0]
 800063c:	b25b      	sxtb	r3, r3
 800063e:	3307      	adds	r3, #7
 8000640:	2101      	movs	r1, #1
 8000642:	4099      	lsls	r1, r3
 8000644:	000b      	movs	r3, r1
 8000646:	b29b      	uxth	r3, r3
 8000648:	4313      	orrs	r3, r2
 800064a:	b29a      	uxth	r2, r3
 800064c:	4b4b      	ldr	r3, [pc, #300]	@ (800077c <main+0x388>)
 800064e:	811a      	strh	r2, [r3, #8]
 8000650:	e03c      	b.n	80006cc <main+0x2d8>
				  }
			  }
			  // Special case where you retrieve the modbus ID
			  else if((get_rx_buffer(0) == 0xFF) && // modbus_id = 0xFF = 255
 8000652:	2000      	movs	r0, #0
 8000654:	f000 ff74 	bl	8001540 <get_rx_buffer>
 8000658:	0003      	movs	r3, r0
 800065a:	2bff      	cmp	r3, #255	@ 0xff
 800065c:	d136      	bne.n	80006cc <main+0x2d8>
				(get_rx_buffer(1) == 0x03) && // Function code = read_holding_registers
 800065e:	2001      	movs	r0, #1
 8000660:	f000 ff6e 	bl	8001540 <get_rx_buffer>
 8000664:	0003      	movs	r3, r0
			  else if((get_rx_buffer(0) == 0xFF) && // modbus_id = 0xFF = 255
 8000666:	2b03      	cmp	r3, #3
 8000668:	d130      	bne.n	80006cc <main+0x2d8>
				(((get_rx_buffer(2) << 8) | get_rx_buffer(3)) == 0x00) && // Address to read = 0
 800066a:	2002      	movs	r0, #2
 800066c:	f000 ff68 	bl	8001540 <get_rx_buffer>
 8000670:	0003      	movs	r3, r0
 8000672:	021c      	lsls	r4, r3, #8
 8000674:	2003      	movs	r0, #3
 8000676:	f000 ff63 	bl	8001540 <get_rx_buffer>
 800067a:	0003      	movs	r3, r0
 800067c:	4323      	orrs	r3, r4
				(get_rx_buffer(1) == 0x03) && // Function code = read_holding_registers
 800067e:	d125      	bne.n	80006cc <main+0x2d8>
				(((get_rx_buffer(4) << 8) | get_rx_buffer(5)) == 1)) // # of registers to read = 1
 8000680:	2004      	movs	r0, #4
 8000682:	f000 ff5d 	bl	8001540 <get_rx_buffer>
 8000686:	0003      	movs	r3, r0
 8000688:	021c      	lsls	r4, r3, #8
 800068a:	2005      	movs	r0, #5
 800068c:	f000 ff58 	bl	8001540 <get_rx_buffer>
 8000690:	0003      	movs	r3, r0
 8000692:	4323      	orrs	r3, r4
				(((get_rx_buffer(2) << 8) | get_rx_buffer(3)) == 0x00) && // Address to read = 0
 8000694:	2b01      	cmp	r3, #1
 8000696:	d119      	bne.n	80006cc <main+0x2d8>
			  {
				  modbus_status = return_holding_registers(&modbus_tx_len);
 8000698:	1dfc      	adds	r4, r7, #7
 800069a:	1cbb      	adds	r3, r7, #2
 800069c:	0018      	movs	r0, r3
 800069e:	f000 faa3 	bl	8000be8 <return_holding_registers>
 80006a2:	0003      	movs	r3, r0
 80006a4:	7023      	strb	r3, [r4, #0]
				  if(modbus_status != 0)
 80006a6:	1dfb      	adds	r3, r7, #7
 80006a8:	781b      	ldrb	r3, [r3, #0]
 80006aa:	b25b      	sxtb	r3, r3
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	d00d      	beq.n	80006cc <main+0x2d8>
				  {
					  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status) + (MB_FATAL_ERROR - RANGE_ERROR));
 80006b0:	4b32      	ldr	r3, [pc, #200]	@ (800077c <main+0x388>)
 80006b2:	891a      	ldrh	r2, [r3, #8]
 80006b4:	1dfb      	adds	r3, r7, #7
 80006b6:	781b      	ldrb	r3, [r3, #0]
 80006b8:	b25b      	sxtb	r3, r3
 80006ba:	3307      	adds	r3, #7
 80006bc:	2101      	movs	r1, #1
 80006be:	4099      	lsls	r1, r3
 80006c0:	000b      	movs	r3, r1
 80006c2:	b29b      	uxth	r3, r3
 80006c4:	4313      	orrs	r3, r2
 80006c6:	b29a      	uxth	r2, r3
 80006c8:	4b2c      	ldr	r3, [pc, #176]	@ (800077c <main+0x388>)
 80006ca:	811a      	strh	r2, [r3, #8]
				  }
			  }
		  }
		  modbus_status = monitor_modbus();
 80006cc:	1dfc      	adds	r4, r7, #7
 80006ce:	f000 fdd5 	bl	800127c <monitor_modbus>
 80006d2:	0003      	movs	r3, r0
 80006d4:	7023      	strb	r3, [r4, #0]
		  if(modbus_status != HAL_OK && modbus_status != HAL_BUSY)
 80006d6:	1dfb      	adds	r3, r7, #7
 80006d8:	781b      	ldrb	r3, [r3, #0]
 80006da:	b25b      	sxtb	r3, r3
 80006dc:	2b00      	cmp	r3, #0
 80006de:	d100      	bne.n	80006e2 <main+0x2ee>
 80006e0:	e0a7      	b.n	8000832 <main+0x43e>
 80006e2:	1dfb      	adds	r3, r7, #7
 80006e4:	781b      	ldrb	r3, [r3, #0]
 80006e6:	b25b      	sxtb	r3, r3
 80006e8:	2b02      	cmp	r3, #2
 80006ea:	d100      	bne.n	80006ee <main+0x2fa>
 80006ec:	e0a1      	b.n	8000832 <main+0x43e>
		  {
			  switch(modbus_status)
 80006ee:	1dfb      	adds	r3, r7, #7
 80006f0:	781b      	ldrb	r3, [r3, #0]
 80006f2:	b25b      	sxtb	r3, r3
 80006f4:	2b15      	cmp	r3, #21
 80006f6:	d063      	beq.n	80007c0 <main+0x3cc>
 80006f8:	dd00      	ble.n	80006fc <main+0x308>
 80006fa:	e69a      	b.n	8000432 <main+0x3e>
 80006fc:	2b14      	cmp	r3, #20
 80006fe:	d041      	beq.n	8000784 <main+0x390>
 8000700:	dd00      	ble.n	8000704 <main+0x310>
 8000702:	e696      	b.n	8000432 <main+0x3e>
 8000704:	2b12      	cmp	r3, #18
 8000706:	d000      	beq.n	800070a <main+0x316>
 8000708:	e095      	b.n	8000836 <main+0x442>
			  {
				  case MB_TX_TIMEOUT:
				  {
					  for(uint8_t i = 0; i < holding_register_database[MB_TRANSMIT_RETRIES]; i++)
 800070a:	1dbb      	adds	r3, r7, #6
 800070c:	2200      	movs	r2, #0
 800070e:	701a      	strb	r2, [r3, #0]
 8000710:	e025      	b.n	800075e <main+0x36a>
					  {
						  modbus_status = modbus_send(modbus_tx_len);
 8000712:	1cbb      	adds	r3, r7, #2
 8000714:	781b      	ldrb	r3, [r3, #0]
 8000716:	1dfc      	adds	r4, r7, #7
 8000718:	0018      	movs	r0, r3
 800071a:	f000 fcc7 	bl	80010ac <modbus_send>
 800071e:	0003      	movs	r3, r0
 8000720:	7023      	strb	r3, [r4, #0]
						  while(monitor_modbus() == HAL_BUSY);
 8000722:	46c0      	nop			@ (mov r8, r8)
 8000724:	f000 fdaa 	bl	800127c <monitor_modbus>
 8000728:	0003      	movs	r3, r0
 800072a:	2b02      	cmp	r3, #2
 800072c:	d0fa      	beq.n	8000724 <main+0x330>
						  if(modbus_status != HAL_OK)
 800072e:	1dfb      	adds	r3, r7, #7
 8000730:	781b      	ldrb	r3, [r3, #0]
 8000732:	b25b      	sxtb	r3, r3
 8000734:	2b00      	cmp	r3, #0
 8000736:	d00d      	beq.n	8000754 <main+0x360>
						  {
							  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status) + (MB_FATAL_ERROR - RANGE_ERROR));
 8000738:	4b10      	ldr	r3, [pc, #64]	@ (800077c <main+0x388>)
 800073a:	891a      	ldrh	r2, [r3, #8]
 800073c:	1dfb      	adds	r3, r7, #7
 800073e:	781b      	ldrb	r3, [r3, #0]
 8000740:	b25b      	sxtb	r3, r3
 8000742:	3307      	adds	r3, #7
 8000744:	2101      	movs	r1, #1
 8000746:	4099      	lsls	r1, r3
 8000748:	000b      	movs	r3, r1
 800074a:	b29b      	uxth	r3, r3
 800074c:	4313      	orrs	r3, r2
 800074e:	b29a      	uxth	r2, r3
 8000750:	4b0a      	ldr	r3, [pc, #40]	@ (800077c <main+0x388>)
 8000752:	811a      	strh	r2, [r3, #8]
					  for(uint8_t i = 0; i < holding_register_database[MB_TRANSMIT_RETRIES]; i++)
 8000754:	1dbb      	adds	r3, r7, #6
 8000756:	781a      	ldrb	r2, [r3, #0]
 8000758:	1dbb      	adds	r3, r7, #6
 800075a:	3201      	adds	r2, #1
 800075c:	701a      	strb	r2, [r3, #0]
 800075e:	1dbb      	adds	r3, r7, #6
 8000760:	781b      	ldrb	r3, [r3, #0]
 8000762:	b29a      	uxth	r2, r3
 8000764:	4b05      	ldr	r3, [pc, #20]	@ (800077c <main+0x388>)
 8000766:	88db      	ldrh	r3, [r3, #6]
 8000768:	429a      	cmp	r2, r3
 800076a:	d3d2      	bcc.n	8000712 <main+0x31e>
						  }
					  }
					  break;
 800076c:	e068      	b.n	8000840 <main+0x44c>
 800076e:	46c0      	nop			@ (mov r8, r8)
 8000770:	2000018c 	.word	0x2000018c
 8000774:	20000190 	.word	0x20000190
 8000778:	50000400 	.word	0x50000400
 800077c:	20000000 	.word	0x20000000
 8000780:	20000188 	.word	0x20000188
					  // Error only relates to Modbus Master Nodes
					  break;
				  }
				  case MB_UART_ERROR:
				  {
					  modbus_status = modbus_set_rx();
 8000784:	1dfc      	adds	r4, r7, #7
 8000786:	f000 fd55 	bl	8001234 <modbus_set_rx>
 800078a:	0003      	movs	r3, r0
 800078c:	7023      	strb	r3, [r4, #0]
					  if(modbus_status != 0)
 800078e:	1dfb      	adds	r3, r7, #7
 8000790:	781b      	ldrb	r3, [r3, #0]
 8000792:	b25b      	sxtb	r3, r3
 8000794:	2b00      	cmp	r3, #0
 8000796:	d050      	beq.n	800083a <main+0x446>
					  {
						  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status) + (MB_FATAL_ERROR - RANGE_ERROR));
 8000798:	4b2a      	ldr	r3, [pc, #168]	@ (8000844 <main+0x450>)
 800079a:	891a      	ldrh	r2, [r3, #8]
 800079c:	1dfb      	adds	r3, r7, #7
 800079e:	781b      	ldrb	r3, [r3, #0]
 80007a0:	b25b      	sxtb	r3, r3
 80007a2:	3307      	adds	r3, #7
 80007a4:	2101      	movs	r1, #1
 80007a6:	4099      	lsls	r1, r3
 80007a8:	000b      	movs	r3, r1
 80007aa:	b29b      	uxth	r3, r3
 80007ac:	4313      	orrs	r3, r2
 80007ae:	b29a      	uxth	r2, r3
 80007b0:	4b24      	ldr	r3, [pc, #144]	@ (8000844 <main+0x450>)
 80007b2:	811a      	strh	r2, [r3, #8]
					  }
					  break;
 80007b4:	e041      	b.n	800083a <main+0x446>
				  }
				  case MB_FATAL_ERROR:
				  {
					  while(modbus_status != HAL_OK)
					  {
						  modbus_status = modbus_reset();
 80007b6:	1dfc      	adds	r4, r7, #7
 80007b8:	f000 fcce 	bl	8001158 <modbus_reset>
 80007bc:	0003      	movs	r3, r0
 80007be:	7023      	strb	r3, [r4, #0]
					  while(modbus_status != HAL_OK)
 80007c0:	1dfb      	adds	r3, r7, #7
 80007c2:	781b      	ldrb	r3, [r3, #0]
 80007c4:	b25b      	sxtb	r3, r3
 80007c6:	2b00      	cmp	r3, #0
 80007c8:	d1f5      	bne.n	80007b6 <main+0x3c2>
					  }
					  modbus_status = modbus_set_rx();
 80007ca:	1dfc      	adds	r4, r7, #7
 80007cc:	f000 fd32 	bl	8001234 <modbus_set_rx>
 80007d0:	0003      	movs	r3, r0
 80007d2:	7023      	strb	r3, [r4, #0]
					  if(modbus_status != 0)
 80007d4:	1dfb      	adds	r3, r7, #7
 80007d6:	781b      	ldrb	r3, [r3, #0]
 80007d8:	b25b      	sxtb	r3, r3
 80007da:	2b00      	cmp	r3, #0
 80007dc:	d02f      	beq.n	800083e <main+0x44a>
					  {
						  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status) + (MB_FATAL_ERROR - RANGE_ERROR));
 80007de:	4b19      	ldr	r3, [pc, #100]	@ (8000844 <main+0x450>)
 80007e0:	891a      	ldrh	r2, [r3, #8]
 80007e2:	1dfb      	adds	r3, r7, #7
 80007e4:	781b      	ldrb	r3, [r3, #0]
 80007e6:	b25b      	sxtb	r3, r3
 80007e8:	3307      	adds	r3, #7
 80007ea:	2101      	movs	r1, #1
 80007ec:	4099      	lsls	r1, r3
 80007ee:	000b      	movs	r3, r1
 80007f0:	b29b      	uxth	r3, r3
 80007f2:	4313      	orrs	r3, r2
 80007f4:	b29a      	uxth	r2, r3
 80007f6:	4b13      	ldr	r3, [pc, #76]	@ (8000844 <main+0x450>)
 80007f8:	811a      	strh	r2, [r3, #8]
					  }
					  break;
 80007fa:	e020      	b.n	800083e <main+0x44a>
			  }
		  }
	  }
	  else
	  {
		  if(!shutdown)
 80007fc:	4b12      	ldr	r3, [pc, #72]	@ (8000848 <main+0x454>)
 80007fe:	781b      	ldrb	r3, [r3, #0]
 8000800:	2b00      	cmp	r3, #0
 8000802:	d000      	beq.n	8000806 <main+0x412>
 8000804:	e615      	b.n	8000432 <main+0x3e>
		  {
			  // Shutdown the Modbus
			  int8_t status = modbus_shutdown();
 8000806:	1d7c      	adds	r4, r7, #5
 8000808:	f000 fde8 	bl	80013dc <modbus_shutdown>
 800080c:	0003      	movs	r3, r0
 800080e:	7023      	strb	r3, [r4, #0]
			  {
				  // log error in a queue
			  }

			  // Set all GPIO pins high
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_SET);
 8000810:	4b0e      	ldr	r3, [pc, #56]	@ (800084c <main+0x458>)
 8000812:	2201      	movs	r2, #1
 8000814:	2180      	movs	r1, #128	@ 0x80
 8000816:	0018      	movs	r0, r3
 8000818:	f002 f8eb 	bl	80029f2 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(RELAY_120_GPIO_Port, RELAY_120_Pin, GPIO_PIN_SET);
 800081c:	2380      	movs	r3, #128	@ 0x80
 800081e:	005b      	lsls	r3, r3, #1
 8000820:	480a      	ldr	r0, [pc, #40]	@ (800084c <main+0x458>)
 8000822:	2201      	movs	r2, #1
 8000824:	0019      	movs	r1, r3
 8000826:	f002 f8e4 	bl	80029f2 <HAL_GPIO_WritePin>

			  // Ensure this code only executes once
			  shutdown = 1;
 800082a:	4b07      	ldr	r3, [pc, #28]	@ (8000848 <main+0x454>)
 800082c:	2201      	movs	r2, #1
 800082e:	701a      	strb	r2, [r3, #0]
 8000830:	e5ff      	b.n	8000432 <main+0x3e>
				  default:
 8000832:	46c0      	nop			@ (mov r8, r8)
 8000834:	e5fd      	b.n	8000432 <main+0x3e>
					  break;
 8000836:	46c0      	nop			@ (mov r8, r8)
 8000838:	e5fb      	b.n	8000432 <main+0x3e>
					  break;
 800083a:	46c0      	nop			@ (mov r8, r8)
 800083c:	e5f9      	b.n	8000432 <main+0x3e>
					  break;
 800083e:	46c0      	nop			@ (mov r8, r8)
	  if(HAL_GPIO_ReadPin(MANUAL_GPIO_Port, MANUAL_Pin) == GPIO_PIN_SET)
 8000840:	e5f7      	b.n	8000432 <main+0x3e>
 8000842:	46c0      	nop			@ (mov r8, r8)
 8000844:	20000000 	.word	0x20000000
 8000848:	20000190 	.word	0x20000190
 800084c:	50000400 	.word	0x50000400

08000850 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000850:	b590      	push	{r4, r7, lr}
 8000852:	b08f      	sub	sp, #60	@ 0x3c
 8000854:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000856:	2418      	movs	r4, #24
 8000858:	193b      	adds	r3, r7, r4
 800085a:	0018      	movs	r0, r3
 800085c:	2320      	movs	r3, #32
 800085e:	001a      	movs	r2, r3
 8000860:	2100      	movs	r1, #0
 8000862:	f004 fbdb 	bl	800501c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000866:	1d3b      	adds	r3, r7, #4
 8000868:	0018      	movs	r0, r3
 800086a:	2314      	movs	r3, #20
 800086c:	001a      	movs	r2, r3
 800086e:	2100      	movs	r1, #0
 8000870:	f004 fbd4 	bl	800501c <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000874:	193b      	adds	r3, r7, r4
 8000876:	2201      	movs	r2, #1
 8000878:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800087a:	193b      	adds	r3, r7, r4
 800087c:	2280      	movs	r2, #128	@ 0x80
 800087e:	0252      	lsls	r2, r2, #9
 8000880:	605a      	str	r2, [r3, #4]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000882:	193b      	adds	r3, r7, r4
 8000884:	0018      	movs	r0, r3
 8000886:	f002 f8d1 	bl	8002a2c <HAL_RCC_OscConfig>
 800088a:	1e03      	subs	r3, r0, #0
 800088c:	d001      	beq.n	8000892 <SystemClock_Config+0x42>
  {
    Error_Handler();
 800088e:	f000 f911 	bl	8000ab4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000892:	1d3b      	adds	r3, r7, #4
 8000894:	2207      	movs	r2, #7
 8000896:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 8000898:	1d3b      	adds	r3, r7, #4
 800089a:	2201      	movs	r2, #1
 800089c:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 800089e:	1d3b      	adds	r3, r7, #4
 80008a0:	2200      	movs	r2, #0
 80008a2:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 80008a4:	1d3b      	adds	r3, r7, #4
 80008a6:	2200      	movs	r2, #0
 80008a8:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 80008aa:	1d3b      	adds	r3, r7, #4
 80008ac:	2200      	movs	r2, #0
 80008ae:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80008b0:	1d3b      	adds	r3, r7, #4
 80008b2:	2100      	movs	r1, #0
 80008b4:	0018      	movs	r0, r3
 80008b6:	f002 fadf 	bl	8002e78 <HAL_RCC_ClockConfig>
 80008ba:	1e03      	subs	r3, r0, #0
 80008bc:	d001      	beq.n	80008c2 <SystemClock_Config+0x72>
  {
    Error_Handler();
 80008be:	f000 f8f9 	bl	8000ab4 <Error_Handler>
  }
}
 80008c2:	46c0      	nop			@ (mov r8, r8)
 80008c4:	46bd      	mov	sp, r7
 80008c6:	b00f      	add	sp, #60	@ 0x3c
 80008c8:	bd90      	pop	{r4, r7, pc}
	...

080008cc <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80008cc:	b580      	push	{r7, lr}
 80008ce:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80008d0:	4b24      	ldr	r3, [pc, #144]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008d2:	4a25      	ldr	r2, [pc, #148]	@ (8000968 <MX_USART1_UART_Init+0x9c>)
 80008d4:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 80008d6:	4b23      	ldr	r3, [pc, #140]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008d8:	2296      	movs	r2, #150	@ 0x96
 80008da:	0192      	lsls	r2, r2, #6
 80008dc:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80008de:	4b21      	ldr	r3, [pc, #132]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008e0:	2200      	movs	r2, #0
 80008e2:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80008e4:	4b1f      	ldr	r3, [pc, #124]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008e6:	2200      	movs	r2, #0
 80008e8:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80008ea:	4b1e      	ldr	r3, [pc, #120]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008ec:	2200      	movs	r2, #0
 80008ee:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80008f0:	4b1c      	ldr	r3, [pc, #112]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008f2:	220c      	movs	r2, #12
 80008f4:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80008f6:	4b1b      	ldr	r3, [pc, #108]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008f8:	2200      	movs	r2, #0
 80008fa:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80008fc:	4b19      	ldr	r3, [pc, #100]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 80008fe:	2200      	movs	r2, #0
 8000900:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000902:	4b18      	ldr	r3, [pc, #96]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 8000904:	2200      	movs	r2, #0
 8000906:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8000908:	4b16      	ldr	r3, [pc, #88]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 800090a:	2200      	movs	r2, #0
 800090c:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800090e:	4b15      	ldr	r3, [pc, #84]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 8000910:	2200      	movs	r2, #0
 8000912:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_RS485Ex_Init(&huart1, UART_DE_POLARITY_HIGH, 0, 0) != HAL_OK)
 8000914:	4813      	ldr	r0, [pc, #76]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 8000916:	2300      	movs	r3, #0
 8000918:	2200      	movs	r2, #0
 800091a:	2100      	movs	r1, #0
 800091c:	f004 f972 	bl	8004c04 <HAL_RS485Ex_Init>
 8000920:	1e03      	subs	r3, r0, #0
 8000922:	d001      	beq.n	8000928 <MX_USART1_UART_Init+0x5c>
  {
    Error_Handler();
 8000924:	f000 f8c6 	bl	8000ab4 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8000928:	4b0e      	ldr	r3, [pc, #56]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 800092a:	2100      	movs	r1, #0
 800092c:	0018      	movs	r0, r3
 800092e:	f004 fa2d 	bl	8004d8c <HAL_UARTEx_SetTxFifoThreshold>
 8000932:	1e03      	subs	r3, r0, #0
 8000934:	d001      	beq.n	800093a <MX_USART1_UART_Init+0x6e>
  {
    Error_Handler();
 8000936:	f000 f8bd 	bl	8000ab4 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800093a:	4b0a      	ldr	r3, [pc, #40]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 800093c:	2100      	movs	r1, #0
 800093e:	0018      	movs	r0, r3
 8000940:	f004 fa64 	bl	8004e0c <HAL_UARTEx_SetRxFifoThreshold>
 8000944:	1e03      	subs	r3, r0, #0
 8000946:	d001      	beq.n	800094c <MX_USART1_UART_Init+0x80>
  {
    Error_Handler();
 8000948:	f000 f8b4 	bl	8000ab4 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 800094c:	4b05      	ldr	r3, [pc, #20]	@ (8000964 <MX_USART1_UART_Init+0x98>)
 800094e:	0018      	movs	r0, r3
 8000950:	f004 f9e2 	bl	8004d18 <HAL_UARTEx_DisableFifoMode>
 8000954:	1e03      	subs	r3, r0, #0
 8000956:	d001      	beq.n	800095c <MX_USART1_UART_Init+0x90>
  {
    Error_Handler();
 8000958:	f000 f8ac 	bl	8000ab4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800095c:	46c0      	nop			@ (mov r8, r8)
 800095e:	46bd      	mov	sp, r7
 8000960:	bd80      	pop	{r7, pc}
 8000962:	46c0      	nop			@ (mov r8, r8)
 8000964:	2000003c 	.word	0x2000003c
 8000968:	40013800 	.word	0x40013800

0800096c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800096c:	b580      	push	{r7, lr}
 800096e:	b082      	sub	sp, #8
 8000970:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8000972:	4b10      	ldr	r3, [pc, #64]	@ (80009b4 <MX_DMA_Init+0x48>)
 8000974:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8000976:	4b0f      	ldr	r3, [pc, #60]	@ (80009b4 <MX_DMA_Init+0x48>)
 8000978:	2101      	movs	r1, #1
 800097a:	430a      	orrs	r2, r1
 800097c:	639a      	str	r2, [r3, #56]	@ 0x38
 800097e:	4b0d      	ldr	r3, [pc, #52]	@ (80009b4 <MX_DMA_Init+0x48>)
 8000980:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000982:	2201      	movs	r2, #1
 8000984:	4013      	ands	r3, r2
 8000986:	607b      	str	r3, [r7, #4]
 8000988:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 800098a:	2200      	movs	r2, #0
 800098c:	2100      	movs	r1, #0
 800098e:	2009      	movs	r0, #9
 8000990:	f001 f9d4 	bl	8001d3c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8000994:	2009      	movs	r0, #9
 8000996:	f001 f9e6 	bl	8001d66 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel2_3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 800099a:	2200      	movs	r2, #0
 800099c:	2100      	movs	r1, #0
 800099e:	200a      	movs	r0, #10
 80009a0:	f001 f9cc 	bl	8001d3c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 80009a4:	200a      	movs	r0, #10
 80009a6:	f001 f9de 	bl	8001d66 <HAL_NVIC_EnableIRQ>

}
 80009aa:	46c0      	nop			@ (mov r8, r8)
 80009ac:	46bd      	mov	sp, r7
 80009ae:	b002      	add	sp, #8
 80009b0:	bd80      	pop	{r7, pc}
 80009b2:	46c0      	nop			@ (mov r8, r8)
 80009b4:	40021000 	.word	0x40021000

080009b8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80009b8:	b590      	push	{r4, r7, lr}
 80009ba:	b08b      	sub	sp, #44	@ 0x2c
 80009bc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80009be:	2414      	movs	r4, #20
 80009c0:	193b      	adds	r3, r7, r4
 80009c2:	0018      	movs	r0, r3
 80009c4:	2314      	movs	r3, #20
 80009c6:	001a      	movs	r2, r3
 80009c8:	2100      	movs	r1, #0
 80009ca:	f004 fb27 	bl	800501c <memset>
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80009ce:	4b37      	ldr	r3, [pc, #220]	@ (8000aac <MX_GPIO_Init+0xf4>)
 80009d0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80009d2:	4b36      	ldr	r3, [pc, #216]	@ (8000aac <MX_GPIO_Init+0xf4>)
 80009d4:	2104      	movs	r1, #4
 80009d6:	430a      	orrs	r2, r1
 80009d8:	635a      	str	r2, [r3, #52]	@ 0x34
 80009da:	4b34      	ldr	r3, [pc, #208]	@ (8000aac <MX_GPIO_Init+0xf4>)
 80009dc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80009de:	2204      	movs	r2, #4
 80009e0:	4013      	ands	r3, r2
 80009e2:	613b      	str	r3, [r7, #16]
 80009e4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80009e6:	4b31      	ldr	r3, [pc, #196]	@ (8000aac <MX_GPIO_Init+0xf4>)
 80009e8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80009ea:	4b30      	ldr	r3, [pc, #192]	@ (8000aac <MX_GPIO_Init+0xf4>)
 80009ec:	2120      	movs	r1, #32
 80009ee:	430a      	orrs	r2, r1
 80009f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80009f2:	4b2e      	ldr	r3, [pc, #184]	@ (8000aac <MX_GPIO_Init+0xf4>)
 80009f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80009f6:	2220      	movs	r2, #32
 80009f8:	4013      	ands	r3, r2
 80009fa:	60fb      	str	r3, [r7, #12]
 80009fc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009fe:	4b2b      	ldr	r3, [pc, #172]	@ (8000aac <MX_GPIO_Init+0xf4>)
 8000a00:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000a02:	4b2a      	ldr	r3, [pc, #168]	@ (8000aac <MX_GPIO_Init+0xf4>)
 8000a04:	2102      	movs	r1, #2
 8000a06:	430a      	orrs	r2, r1
 8000a08:	635a      	str	r2, [r3, #52]	@ 0x34
 8000a0a:	4b28      	ldr	r3, [pc, #160]	@ (8000aac <MX_GPIO_Init+0xf4>)
 8000a0c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000a0e:	2202      	movs	r2, #2
 8000a10:	4013      	ands	r3, r2
 8000a12:	60bb      	str	r3, [r7, #8]
 8000a14:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000a16:	4b25      	ldr	r3, [pc, #148]	@ (8000aac <MX_GPIO_Init+0xf4>)
 8000a18:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000a1a:	4b24      	ldr	r3, [pc, #144]	@ (8000aac <MX_GPIO_Init+0xf4>)
 8000a1c:	2101      	movs	r1, #1
 8000a1e:	430a      	orrs	r2, r1
 8000a20:	635a      	str	r2, [r3, #52]	@ 0x34
 8000a22:	4b22      	ldr	r3, [pc, #136]	@ (8000aac <MX_GPIO_Init+0xf4>)
 8000a24:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000a26:	2201      	movs	r2, #1
 8000a28:	4013      	ands	r3, r2
 8000a2a:	607b      	str	r3, [r7, #4]
 8000a2c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, RELAY_480_Pin|RELAY_120_Pin, GPIO_PIN_RESET);
 8000a2e:	23c0      	movs	r3, #192	@ 0xc0
 8000a30:	005b      	lsls	r3, r3, #1
 8000a32:	481f      	ldr	r0, [pc, #124]	@ (8000ab0 <MX_GPIO_Init+0xf8>)
 8000a34:	2200      	movs	r2, #0
 8000a36:	0019      	movs	r1, r3
 8000a38:	f001 ffdb 	bl	80029f2 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : SENSE_120_Pin ESTOP_SENSE_Pin */
  GPIO_InitStruct.Pin = SENSE_120_Pin|ESTOP_SENSE_Pin;
 8000a3c:	193b      	adds	r3, r7, r4
 8000a3e:	2282      	movs	r2, #130	@ 0x82
 8000a40:	0212      	lsls	r2, r2, #8
 8000a42:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000a44:	193b      	adds	r3, r7, r4
 8000a46:	2200      	movs	r2, #0
 8000a48:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a4a:	193b      	adds	r3, r7, r4
 8000a4c:	2200      	movs	r2, #0
 8000a4e:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a50:	193b      	adds	r3, r7, r4
 8000a52:	4a17      	ldr	r2, [pc, #92]	@ (8000ab0 <MX_GPIO_Init+0xf8>)
 8000a54:	0019      	movs	r1, r3
 8000a56:	0010      	movs	r0, r2
 8000a58:	f001 fd64 	bl	8002524 <HAL_GPIO_Init>

  /*Configure GPIO pin : MANUAL_Pin */
  GPIO_InitStruct.Pin = MANUAL_Pin;
 8000a5c:	193b      	adds	r3, r7, r4
 8000a5e:	2240      	movs	r2, #64	@ 0x40
 8000a60:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000a62:	193b      	adds	r3, r7, r4
 8000a64:	2200      	movs	r2, #0
 8000a66:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000a68:	193b      	adds	r3, r7, r4
 8000a6a:	2201      	movs	r2, #1
 8000a6c:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(MANUAL_GPIO_Port, &GPIO_InitStruct);
 8000a6e:	193b      	adds	r3, r7, r4
 8000a70:	4a0f      	ldr	r2, [pc, #60]	@ (8000ab0 <MX_GPIO_Init+0xf8>)
 8000a72:	0019      	movs	r1, r3
 8000a74:	0010      	movs	r0, r2
 8000a76:	f001 fd55 	bl	8002524 <HAL_GPIO_Init>

  /*Configure GPIO pins : RELAY_480_Pin RELAY_120_Pin */
  GPIO_InitStruct.Pin = RELAY_480_Pin|RELAY_120_Pin;
 8000a7a:	0021      	movs	r1, r4
 8000a7c:	187b      	adds	r3, r7, r1
 8000a7e:	22c0      	movs	r2, #192	@ 0xc0
 8000a80:	0052      	lsls	r2, r2, #1
 8000a82:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a84:	187b      	adds	r3, r7, r1
 8000a86:	2201      	movs	r2, #1
 8000a88:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a8a:	187b      	adds	r3, r7, r1
 8000a8c:	2200      	movs	r2, #0
 8000a8e:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a90:	187b      	adds	r3, r7, r1
 8000a92:	2200      	movs	r2, #0
 8000a94:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a96:	187b      	adds	r3, r7, r1
 8000a98:	4a05      	ldr	r2, [pc, #20]	@ (8000ab0 <MX_GPIO_Init+0xf8>)
 8000a9a:	0019      	movs	r1, r3
 8000a9c:	0010      	movs	r0, r2
 8000a9e:	f001 fd41 	bl	8002524 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000aa2:	46c0      	nop			@ (mov r8, r8)
 8000aa4:	46bd      	mov	sp, r7
 8000aa6:	b00b      	add	sp, #44	@ 0x2c
 8000aa8:	bd90      	pop	{r4, r7, pc}
 8000aaa:	46c0      	nop			@ (mov r8, r8)
 8000aac:	40021000 	.word	0x40021000
 8000ab0:	50000400 	.word	0x50000400

08000ab4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000ab4:	b580      	push	{r7, lr}
 8000ab6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000ab8:	b672      	cpsid	i
}
 8000aba:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000abc:	46c0      	nop			@ (mov r8, r8)
 8000abe:	e7fd      	b.n	8000abc <Error_Handler+0x8>

08000ac0 <HAL_UARTEx_RxEventCallback>:

/*
 * Modbus reception handler function
 */
void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	b082      	sub	sp, #8
 8000ac4:	af00      	add	r7, sp, #0
 8000ac6:	6078      	str	r0, [r7, #4]
 8000ac8:	000a      	movs	r2, r1
 8000aca:	1cbb      	adds	r3, r7, #2
 8000acc:	801a      	strh	r2, [r3, #0]
	if(modbus_header)
 8000ace:	4b24      	ldr	r3, [pc, #144]	@ (8000b60 <HAL_UARTEx_RxEventCallback+0xa0>)
 8000ad0:	881b      	ldrh	r3, [r3, #0]
 8000ad2:	b29b      	uxth	r3, r3
 8000ad4:	2b00      	cmp	r3, #0
 8000ad6:	d026      	beq.n	8000b26 <HAL_UARTEx_RxEventCallback+0x66>
	{
		// Log the time for chunk miss error handling
		chunk_time = HAL_GetTick();
 8000ad8:	f001 f834 	bl	8001b44 <HAL_GetTick>
 8000adc:	0002      	movs	r2, r0
 8000ade:	4b21      	ldr	r3, [pc, #132]	@ (8000b64 <HAL_UARTEx_RxEventCallback+0xa4>)
 8000ae0:	601a      	str	r2, [r3, #0]
		modbus_header = 0;
 8000ae2:	4b1f      	ldr	r3, [pc, #124]	@ (8000b60 <HAL_UARTEx_RxEventCallback+0xa0>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	801a      	strh	r2, [r3, #0]

		// Setup the DMA to receive the # message bytes + crc + 1 in the event that the # bytes is in the message
		HAL_UARTEx_ReceiveToIdle_DMA(&huart1, &modbus_rx_buffer[6], (uint16_t)(((modbus_rx_buffer[4] << 8) | modbus_rx_buffer[5])*2 + 2 + 1));
 8000ae8:	4b1f      	ldr	r3, [pc, #124]	@ (8000b68 <HAL_UARTEx_RxEventCallback+0xa8>)
 8000aea:	791b      	ldrb	r3, [r3, #4]
 8000aec:	021b      	lsls	r3, r3, #8
 8000aee:	4a1e      	ldr	r2, [pc, #120]	@ (8000b68 <HAL_UARTEx_RxEventCallback+0xa8>)
 8000af0:	7952      	ldrb	r2, [r2, #5]
 8000af2:	4313      	orrs	r3, r2
 8000af4:	b29b      	uxth	r3, r3
 8000af6:	3301      	adds	r3, #1
 8000af8:	b29b      	uxth	r3, r3
 8000afa:	18db      	adds	r3, r3, r3
 8000afc:	b29b      	uxth	r3, r3
 8000afe:	3301      	adds	r3, #1
 8000b00:	b29a      	uxth	r2, r3
 8000b02:	491a      	ldr	r1, [pc, #104]	@ (8000b6c <HAL_UARTEx_RxEventCallback+0xac>)
 8000b04:	4b1a      	ldr	r3, [pc, #104]	@ (8000b70 <HAL_UARTEx_RxEventCallback+0xb0>)
 8000b06:	0018      	movs	r0, r3
 8000b08:	f004 f9c2 	bl	8004e90 <HAL_UARTEx_ReceiveToIdle_DMA>
		__HAL_DMA_DISABLE_IT(huart1.hdmarx, DMA_IT_HT);
 8000b0c:	4b18      	ldr	r3, [pc, #96]	@ (8000b70 <HAL_UARTEx_RxEventCallback+0xb0>)
 8000b0e:	2280      	movs	r2, #128	@ 0x80
 8000b10:	589b      	ldr	r3, [r3, r2]
 8000b12:	681b      	ldr	r3, [r3, #0]
 8000b14:	681a      	ldr	r2, [r3, #0]
 8000b16:	4b16      	ldr	r3, [pc, #88]	@ (8000b70 <HAL_UARTEx_RxEventCallback+0xb0>)
 8000b18:	2180      	movs	r1, #128	@ 0x80
 8000b1a:	585b      	ldr	r3, [r3, r1]
 8000b1c:	681b      	ldr	r3, [r3, #0]
 8000b1e:	2104      	movs	r1, #4
 8000b20:	438a      	bics	r2, r1
 8000b22:	601a      	str	r2, [r3, #0]
#ifdef MB_SLAVE
		HAL_UARTEx_ReceiveToIdle_DMA(&huart1, modbus_rx_buffer, 6);
		__HAL_DMA_DISABLE_IT(huart1.hdmarx, DMA_IT_HT);
#endif
	}
}
 8000b24:	e017      	b.n	8000b56 <HAL_UARTEx_RxEventCallback+0x96>
		modbus_header = 1;
 8000b26:	4b0e      	ldr	r3, [pc, #56]	@ (8000b60 <HAL_UARTEx_RxEventCallback+0xa0>)
 8000b28:	2201      	movs	r2, #1
 8000b2a:	801a      	strh	r2, [r3, #0]
		uart_rx_int = 1;
 8000b2c:	4b11      	ldr	r3, [pc, #68]	@ (8000b74 <HAL_UARTEx_RxEventCallback+0xb4>)
 8000b2e:	2201      	movs	r2, #1
 8000b30:	701a      	strb	r2, [r3, #0]
		HAL_UARTEx_ReceiveToIdle_DMA(&huart1, modbus_rx_buffer, 6);
 8000b32:	490d      	ldr	r1, [pc, #52]	@ (8000b68 <HAL_UARTEx_RxEventCallback+0xa8>)
 8000b34:	4b0e      	ldr	r3, [pc, #56]	@ (8000b70 <HAL_UARTEx_RxEventCallback+0xb0>)
 8000b36:	2206      	movs	r2, #6
 8000b38:	0018      	movs	r0, r3
 8000b3a:	f004 f9a9 	bl	8004e90 <HAL_UARTEx_ReceiveToIdle_DMA>
		__HAL_DMA_DISABLE_IT(huart1.hdmarx, DMA_IT_HT);
 8000b3e:	4b0c      	ldr	r3, [pc, #48]	@ (8000b70 <HAL_UARTEx_RxEventCallback+0xb0>)
 8000b40:	2280      	movs	r2, #128	@ 0x80
 8000b42:	589b      	ldr	r3, [r3, r2]
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	681a      	ldr	r2, [r3, #0]
 8000b48:	4b09      	ldr	r3, [pc, #36]	@ (8000b70 <HAL_UARTEx_RxEventCallback+0xb0>)
 8000b4a:	2180      	movs	r1, #128	@ 0x80
 8000b4c:	585b      	ldr	r3, [r3, r1]
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	2104      	movs	r1, #4
 8000b52:	438a      	bics	r2, r1
 8000b54:	601a      	str	r2, [r3, #0]
}
 8000b56:	46c0      	nop			@ (mov r8, r8)
 8000b58:	46bd      	mov	sp, r7
 8000b5a:	b002      	add	sp, #8
 8000b5c:	bd80      	pop	{r7, pc}
 8000b5e:	46c0      	nop			@ (mov r8, r8)
 8000b60:	20000010 	.word	0x20000010
 8000b64:	20000398 	.word	0x20000398
 8000b68:	20000194 	.word	0x20000194
 8000b6c:	2000019a 	.word	0x2000019a
 8000b70:	2000003c 	.word	0x2000003c
 8000b74:	2000039c 	.word	0x2000039c

08000b78 <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8000b78:	b580      	push	{r7, lr}
 8000b7a:	b082      	sub	sp, #8
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	6078      	str	r0, [r7, #4]
	uart_tx_int = 1;
 8000b80:	4b03      	ldr	r3, [pc, #12]	@ (8000b90 <HAL_UART_TxCpltCallback+0x18>)
 8000b82:	2201      	movs	r2, #1
 8000b84:	701a      	strb	r2, [r3, #0]
}
 8000b86:	46c0      	nop			@ (mov r8, r8)
 8000b88:	46bd      	mov	sp, r7
 8000b8a:	b002      	add	sp, #8
 8000b8c:	bd80      	pop	{r7, pc}
 8000b8e:	46c0      	nop			@ (mov r8, r8)
 8000b90:	20000012 	.word	0x20000012

08000b94 <HAL_UART_ErrorCallback>:

void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8000b94:	b580      	push	{r7, lr}
 8000b96:	b082      	sub	sp, #8
 8000b98:	af00      	add	r7, sp, #0
 8000b9a:	6078      	str	r0, [r7, #4]
	uart_err_int = 1;
 8000b9c:	4b07      	ldr	r3, [pc, #28]	@ (8000bbc <HAL_UART_ErrorCallback+0x28>)
 8000b9e:	2201      	movs	r2, #1
 8000ba0:	701a      	strb	r2, [r3, #0]
	__HAL_UART_DISABLE_IT(&huart1, UART_IT_MASK);
 8000ba2:	4b07      	ldr	r3, [pc, #28]	@ (8000bc0 <HAL_UART_ErrorCallback+0x2c>)
 8000ba4:	681b      	ldr	r3, [r3, #0]
 8000ba6:	689a      	ldr	r2, [r3, #8]
 8000ba8:	4b05      	ldr	r3, [pc, #20]	@ (8000bc0 <HAL_UART_ErrorCallback+0x2c>)
 8000baa:	681b      	ldr	r3, [r3, #0]
 8000bac:	0052      	lsls	r2, r2, #1
 8000bae:	0852      	lsrs	r2, r2, #1
 8000bb0:	609a      	str	r2, [r3, #8]
}
 8000bb2:	46c0      	nop			@ (mov r8, r8)
 8000bb4:	46bd      	mov	sp, r7
 8000bb6:	b002      	add	sp, #8
 8000bb8:	bd80      	pop	{r7, pc}
 8000bba:	46c0      	nop			@ (mov r8, r8)
 8000bbc:	2000039d 	.word	0x2000039d
 8000bc0:	2000003c 	.word	0x2000003c

08000bc4 <modbus_rx>:

// Modbus Slave Functions ---------------------------------------------------------------------

#ifdef MB_SLAVE
uint8_t modbus_rx()
{
 8000bc4:	b580      	push	{r7, lr}
 8000bc6:	af00      	add	r7, sp, #0
	if(uart_rx_int)
 8000bc8:	4b06      	ldr	r3, [pc, #24]	@ (8000be4 <modbus_rx+0x20>)
 8000bca:	781b      	ldrb	r3, [r3, #0]
 8000bcc:	b2db      	uxtb	r3, r3
 8000bce:	2b00      	cmp	r3, #0
 8000bd0:	d004      	beq.n	8000bdc <modbus_rx+0x18>
	{
		uart_rx_int = 0;
 8000bd2:	4b04      	ldr	r3, [pc, #16]	@ (8000be4 <modbus_rx+0x20>)
 8000bd4:	2200      	movs	r2, #0
 8000bd6:	701a      	strb	r2, [r3, #0]
		return 1;
 8000bd8:	2301      	movs	r3, #1
 8000bda:	e000      	b.n	8000bde <modbus_rx+0x1a>
	}
	return 0;
 8000bdc:	2300      	movs	r3, #0
}
 8000bde:	0018      	movs	r0, r3
 8000be0:	46bd      	mov	sp, r7
 8000be2:	bd80      	pop	{r7, pc}
 8000be4:	2000039c 	.word	0x2000039c

08000be8 <return_holding_registers>:

int8_t return_holding_registers(uint8_t* tx_len)
{
 8000be8:	b5b0      	push	{r4, r5, r7, lr}
 8000bea:	b084      	sub	sp, #16
 8000bec:	af00      	add	r7, sp, #0
 8000bee:	6078      	str	r0, [r7, #4]
	(*tx_len) = 0;
 8000bf0:	687b      	ldr	r3, [r7, #4]
 8000bf2:	2200      	movs	r2, #0
 8000bf4:	701a      	strb	r2, [r3, #0]
	// Handle Error Checking
	uint16_t first_register_address = (get_rx_buffer(2) << 8) | get_rx_buffer(3);
 8000bf6:	2002      	movs	r0, #2
 8000bf8:	f000 fca2 	bl	8001540 <get_rx_buffer>
 8000bfc:	0003      	movs	r3, r0
 8000bfe:	021b      	lsls	r3, r3, #8
 8000c00:	b21c      	sxth	r4, r3
 8000c02:	2003      	movs	r0, #3
 8000c04:	f000 fc9c 	bl	8001540 <get_rx_buffer>
 8000c08:	0003      	movs	r3, r0
 8000c0a:	b21b      	sxth	r3, r3
 8000c0c:	4323      	orrs	r3, r4
 8000c0e:	b21a      	sxth	r2, r3
 8000c10:	230c      	movs	r3, #12
 8000c12:	18fb      	adds	r3, r7, r3
 8000c14:	801a      	strh	r2, [r3, #0]

	// Get the number of registers requested by the master
	uint16_t num_registers = (get_rx_buffer(4) << 8) | get_rx_buffer(5);
 8000c16:	2004      	movs	r0, #4
 8000c18:	f000 fc92 	bl	8001540 <get_rx_buffer>
 8000c1c:	0003      	movs	r3, r0
 8000c1e:	021b      	lsls	r3, r3, #8
 8000c20:	b21c      	sxth	r4, r3
 8000c22:	2005      	movs	r0, #5
 8000c24:	f000 fc8c 	bl	8001540 <get_rx_buffer>
 8000c28:	0003      	movs	r3, r0
 8000c2a:	b21b      	sxth	r3, r3
 8000c2c:	4323      	orrs	r3, r4
 8000c2e:	b21a      	sxth	r2, r3
 8000c30:	210a      	movs	r1, #10
 8000c32:	187b      	adds	r3, r7, r1
 8000c34:	801a      	strh	r2, [r3, #0]

	if(num_registers > RX_BUFFER_SIZE || num_registers < 1) // 125 is the limit according to modbus protocol
 8000c36:	000a      	movs	r2, r1
 8000c38:	18bb      	adds	r3, r7, r2
 8000c3a:	881b      	ldrh	r3, [r3, #0]
 8000c3c:	2b7d      	cmp	r3, #125	@ 0x7d
 8000c3e:	d803      	bhi.n	8000c48 <return_holding_registers+0x60>
 8000c40:	18bb      	adds	r3, r7, r2
 8000c42:	881b      	ldrh	r3, [r3, #0]
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	d104      	bne.n	8000c52 <return_holding_registers+0x6a>
	{
		return modbus_exception(MB_ILLEGAL_DATA_VALUE);
 8000c48:	2006      	movs	r0, #6
 8000c4a:	f000 f97b 	bl	8000f44 <modbus_exception>
 8000c4e:	0003      	movs	r3, r0
 8000c50:	e06e      	b.n	8000d30 <return_holding_registers+0x148>
	}

	uint16_t last_register_address = first_register_address + (num_registers - 1);
 8000c52:	230a      	movs	r3, #10
 8000c54:	18fa      	adds	r2, r7, r3
 8000c56:	230c      	movs	r3, #12
 8000c58:	18fb      	adds	r3, r7, r3
 8000c5a:	8812      	ldrh	r2, [r2, #0]
 8000c5c:	881b      	ldrh	r3, [r3, #0]
 8000c5e:	18d3      	adds	r3, r2, r3
 8000c60:	b29a      	uxth	r2, r3
 8000c62:	2108      	movs	r1, #8
 8000c64:	187b      	adds	r3, r7, r1
 8000c66:	3a01      	subs	r2, #1
 8000c68:	801a      	strh	r2, [r3, #0]

	if(last_register_address > NUM_HOLDING_REGISTERS)
 8000c6a:	187b      	adds	r3, r7, r1
 8000c6c:	881b      	ldrh	r3, [r3, #0]
 8000c6e:	2b08      	cmp	r3, #8
 8000c70:	d904      	bls.n	8000c7c <return_holding_registers+0x94>
	{
		return modbus_exception(MB_ILLEGAL_DATA_ADDRESS);
 8000c72:	2005      	movs	r0, #5
 8000c74:	f000 f966 	bl	8000f44 <modbus_exception>
 8000c78:	0003      	movs	r3, r0
 8000c7a:	e059      	b.n	8000d30 <return_holding_registers+0x148>
	}

	// Return register values
	modbus_tx_buffer[0] = get_rx_buffer(0); // Append Slave id
 8000c7c:	2000      	movs	r0, #0
 8000c7e:	f000 fc5f 	bl	8001540 <get_rx_buffer>
 8000c82:	0003      	movs	r3, r0
 8000c84:	001a      	movs	r2, r3
 8000c86:	4b2c      	ldr	r3, [pc, #176]	@ (8000d38 <return_holding_registers+0x150>)
 8000c88:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[1] = get_rx_buffer(1); // Append Function Code
 8000c8a:	2001      	movs	r0, #1
 8000c8c:	f000 fc58 	bl	8001540 <get_rx_buffer>
 8000c90:	0003      	movs	r3, r0
 8000c92:	001a      	movs	r2, r3
 8000c94:	4b28      	ldr	r3, [pc, #160]	@ (8000d38 <return_holding_registers+0x150>)
 8000c96:	705a      	strb	r2, [r3, #1]
	modbus_tx_buffer[2] = num_registers * 2; // Append number of bytes
 8000c98:	230a      	movs	r3, #10
 8000c9a:	18fb      	adds	r3, r7, r3
 8000c9c:	881b      	ldrh	r3, [r3, #0]
 8000c9e:	b2db      	uxtb	r3, r3
 8000ca0:	18db      	adds	r3, r3, r3
 8000ca2:	b2da      	uxtb	r2, r3
 8000ca4:	4b24      	ldr	r3, [pc, #144]	@ (8000d38 <return_holding_registers+0x150>)
 8000ca6:	709a      	strb	r2, [r3, #2]
	(*tx_len) = 3;
 8000ca8:	687b      	ldr	r3, [r7, #4]
 8000caa:	2203      	movs	r2, #3
 8000cac:	701a      	strb	r2, [r3, #0]

	// Append the Register Values
	for(uint8_t i = 0; i < num_registers; i++)
 8000cae:	230f      	movs	r3, #15
 8000cb0:	18fb      	adds	r3, r7, r3
 8000cb2:	2200      	movs	r2, #0
 8000cb4:	701a      	strb	r2, [r3, #0]
 8000cb6:	e02c      	b.n	8000d12 <return_holding_registers+0x12a>
	{
		modbus_tx_buffer[(*tx_len)++] = high_byte(holding_register_database[first_register_address + i]);
 8000cb8:	250c      	movs	r5, #12
 8000cba:	197b      	adds	r3, r7, r5
 8000cbc:	881a      	ldrh	r2, [r3, #0]
 8000cbe:	240f      	movs	r4, #15
 8000cc0:	193b      	adds	r3, r7, r4
 8000cc2:	781b      	ldrb	r3, [r3, #0]
 8000cc4:	18d2      	adds	r2, r2, r3
 8000cc6:	4b1d      	ldr	r3, [pc, #116]	@ (8000d3c <return_holding_registers+0x154>)
 8000cc8:	0052      	lsls	r2, r2, #1
 8000cca:	5ad3      	ldrh	r3, [r2, r3]
 8000ccc:	0a1b      	lsrs	r3, r3, #8
 8000cce:	b299      	uxth	r1, r3
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	781b      	ldrb	r3, [r3, #0]
 8000cd4:	1c5a      	adds	r2, r3, #1
 8000cd6:	b2d0      	uxtb	r0, r2
 8000cd8:	687a      	ldr	r2, [r7, #4]
 8000cda:	7010      	strb	r0, [r2, #0]
 8000cdc:	001a      	movs	r2, r3
 8000cde:	b2c9      	uxtb	r1, r1
 8000ce0:	4b15      	ldr	r3, [pc, #84]	@ (8000d38 <return_holding_registers+0x150>)
 8000ce2:	5499      	strb	r1, [r3, r2]
		modbus_tx_buffer[(*tx_len)++] = low_byte(holding_register_database[first_register_address + i]);
 8000ce4:	197b      	adds	r3, r7, r5
 8000ce6:	881a      	ldrh	r2, [r3, #0]
 8000ce8:	193b      	adds	r3, r7, r4
 8000cea:	781b      	ldrb	r3, [r3, #0]
 8000cec:	18d2      	adds	r2, r2, r3
 8000cee:	4b13      	ldr	r3, [pc, #76]	@ (8000d3c <return_holding_registers+0x154>)
 8000cf0:	0052      	lsls	r2, r2, #1
 8000cf2:	5ad1      	ldrh	r1, [r2, r3]
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	781b      	ldrb	r3, [r3, #0]
 8000cf8:	1c5a      	adds	r2, r3, #1
 8000cfa:	b2d0      	uxtb	r0, r2
 8000cfc:	687a      	ldr	r2, [r7, #4]
 8000cfe:	7010      	strb	r0, [r2, #0]
 8000d00:	001a      	movs	r2, r3
 8000d02:	b2c9      	uxtb	r1, r1
 8000d04:	4b0c      	ldr	r3, [pc, #48]	@ (8000d38 <return_holding_registers+0x150>)
 8000d06:	5499      	strb	r1, [r3, r2]
	for(uint8_t i = 0; i < num_registers; i++)
 8000d08:	193b      	adds	r3, r7, r4
 8000d0a:	781a      	ldrb	r2, [r3, #0]
 8000d0c:	193b      	adds	r3, r7, r4
 8000d0e:	3201      	adds	r2, #1
 8000d10:	701a      	strb	r2, [r3, #0]
 8000d12:	230f      	movs	r3, #15
 8000d14:	18fb      	adds	r3, r7, r3
 8000d16:	781b      	ldrb	r3, [r3, #0]
 8000d18:	b29b      	uxth	r3, r3
 8000d1a:	220a      	movs	r2, #10
 8000d1c:	18ba      	adds	r2, r7, r2
 8000d1e:	8812      	ldrh	r2, [r2, #0]
 8000d20:	429a      	cmp	r2, r3
 8000d22:	d8c9      	bhi.n	8000cb8 <return_holding_registers+0xd0>
	}

	return modbus_send((*tx_len));
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	781b      	ldrb	r3, [r3, #0]
 8000d28:	0018      	movs	r0, r3
 8000d2a:	f000 f9bf 	bl	80010ac <modbus_send>
 8000d2e:	0003      	movs	r3, r0
}
 8000d30:	0018      	movs	r0, r3
 8000d32:	46bd      	mov	sp, r7
 8000d34:	b004      	add	sp, #16
 8000d36:	bdb0      	pop	{r4, r5, r7, pc}
 8000d38:	20000294 	.word	0x20000294
 8000d3c:	20000000 	.word	0x20000000

08000d40 <edit_multiple_registers>:

int8_t edit_multiple_registers(uint8_t *tx_len)
{
 8000d40:	b5b0      	push	{r4, r5, r7, lr}
 8000d42:	b086      	sub	sp, #24
 8000d44:	af00      	add	r7, sp, #0
 8000d46:	6078      	str	r0, [r7, #4]
	(*tx_len) = 0;
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	2200      	movs	r2, #0
 8000d4c:	701a      	strb	r2, [r3, #0]

	// Handle Error Checking
	uint16_t first_register_address = (get_rx_buffer(2) << 8) | get_rx_buffer(3);
 8000d4e:	2002      	movs	r0, #2
 8000d50:	f000 fbf6 	bl	8001540 <get_rx_buffer>
 8000d54:	0003      	movs	r3, r0
 8000d56:	021b      	lsls	r3, r3, #8
 8000d58:	b21c      	sxth	r4, r3
 8000d5a:	2003      	movs	r0, #3
 8000d5c:	f000 fbf0 	bl	8001540 <get_rx_buffer>
 8000d60:	0003      	movs	r3, r0
 8000d62:	b21b      	sxth	r3, r3
 8000d64:	4323      	orrs	r3, r4
 8000d66:	b21a      	sxth	r2, r3
 8000d68:	2314      	movs	r3, #20
 8000d6a:	18fb      	adds	r3, r7, r3
 8000d6c:	801a      	strh	r2, [r3, #0]

	uint16_t num_registers = (get_rx_buffer(4) << 8) | get_rx_buffer(5);
 8000d6e:	2004      	movs	r0, #4
 8000d70:	f000 fbe6 	bl	8001540 <get_rx_buffer>
 8000d74:	0003      	movs	r3, r0
 8000d76:	021b      	lsls	r3, r3, #8
 8000d78:	b21c      	sxth	r4, r3
 8000d7a:	2005      	movs	r0, #5
 8000d7c:	f000 fbe0 	bl	8001540 <get_rx_buffer>
 8000d80:	0003      	movs	r3, r0
 8000d82:	b21b      	sxth	r3, r3
 8000d84:	4323      	orrs	r3, r4
 8000d86:	b21a      	sxth	r2, r3
 8000d88:	2112      	movs	r1, #18
 8000d8a:	187b      	adds	r3, r7, r1
 8000d8c:	801a      	strh	r2, [r3, #0]

	if(num_registers > 125 || num_registers < 1) // 125 is the limit according to modbus protocol
 8000d8e:	000a      	movs	r2, r1
 8000d90:	18bb      	adds	r3, r7, r2
 8000d92:	881b      	ldrh	r3, [r3, #0]
 8000d94:	2b7d      	cmp	r3, #125	@ 0x7d
 8000d96:	d803      	bhi.n	8000da0 <edit_multiple_registers+0x60>
 8000d98:	18bb      	adds	r3, r7, r2
 8000d9a:	881b      	ldrh	r3, [r3, #0]
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	d104      	bne.n	8000daa <edit_multiple_registers+0x6a>
	{
		return modbus_exception(MB_ILLEGAL_DATA_VALUE);
 8000da0:	2006      	movs	r0, #6
 8000da2:	f000 f8cf 	bl	8000f44 <modbus_exception>
 8000da6:	0003      	movs	r3, r0
 8000da8:	e0c3      	b.n	8000f32 <edit_multiple_registers+0x1f2>
	}

	uint16_t last_register_address = first_register_address + (num_registers - 1);
 8000daa:	2312      	movs	r3, #18
 8000dac:	18fa      	adds	r2, r7, r3
 8000dae:	2314      	movs	r3, #20
 8000db0:	18fb      	adds	r3, r7, r3
 8000db2:	8812      	ldrh	r2, [r2, #0]
 8000db4:	881b      	ldrh	r3, [r3, #0]
 8000db6:	18d3      	adds	r3, r2, r3
 8000db8:	b29a      	uxth	r2, r3
 8000dba:	2110      	movs	r1, #16
 8000dbc:	187b      	adds	r3, r7, r1
 8000dbe:	3a01      	subs	r2, #1
 8000dc0:	801a      	strh	r2, [r3, #0]

	if(last_register_address > NUM_HOLDING_REGISTERS)
 8000dc2:	187b      	adds	r3, r7, r1
 8000dc4:	881b      	ldrh	r3, [r3, #0]
 8000dc6:	2b08      	cmp	r3, #8
 8000dc8:	d904      	bls.n	8000dd4 <edit_multiple_registers+0x94>
	{
		return modbus_exception(MB_ILLEGAL_DATA_ADDRESS);
 8000dca:	2005      	movs	r0, #5
 8000dcc:	f000 f8ba 	bl	8000f44 <modbus_exception>
 8000dd0:	0003      	movs	r3, r0
 8000dd2:	e0ae      	b.n	8000f32 <edit_multiple_registers+0x1f2>
	}

	// Protect Read only values
	if(((first_register_address >= GPIO_READ) && (first_register_address <= GPIO_READ)) ||
 8000dd4:	2214      	movs	r2, #20
 8000dd6:	18bb      	adds	r3, r7, r2
 8000dd8:	881b      	ldrh	r3, [r3, #0]
 8000dda:	2b04      	cmp	r3, #4
 8000ddc:	d903      	bls.n	8000de6 <edit_multiple_registers+0xa6>
 8000dde:	18bb      	adds	r3, r7, r2
 8000de0:	881b      	ldrh	r3, [r3, #0]
 8000de2:	2b05      	cmp	r3, #5
 8000de4:	d912      	bls.n	8000e0c <edit_multiple_registers+0xcc>
 8000de6:	2210      	movs	r2, #16
 8000de8:	18bb      	adds	r3, r7, r2
 8000dea:	881b      	ldrh	r3, [r3, #0]
 8000dec:	2b04      	cmp	r3, #4
 8000dee:	d903      	bls.n	8000df8 <edit_multiple_registers+0xb8>
		 ((last_register_address >= GPIO_READ) && (last_register_address <= GPIO_READ)) ||
 8000df0:	18bb      	adds	r3, r7, r2
 8000df2:	881b      	ldrh	r3, [r3, #0]
 8000df4:	2b05      	cmp	r3, #5
 8000df6:	d909      	bls.n	8000e0c <edit_multiple_registers+0xcc>
 8000df8:	2314      	movs	r3, #20
 8000dfa:	18fb      	adds	r3, r7, r3
 8000dfc:	881b      	ldrh	r3, [r3, #0]
 8000dfe:	2b04      	cmp	r3, #4
 8000e00:	d809      	bhi.n	8000e16 <edit_multiple_registers+0xd6>
		 ((first_register_address < GPIO_READ  && last_register_address > GPIO_READ)))
 8000e02:	2310      	movs	r3, #16
 8000e04:	18fb      	adds	r3, r7, r3
 8000e06:	881b      	ldrh	r3, [r3, #0]
 8000e08:	2b05      	cmp	r3, #5
 8000e0a:	d904      	bls.n	8000e16 <edit_multiple_registers+0xd6>
	{
		// Ensure that sensor values are restricted to read-only
		return modbus_exception(MB_ILLEGAL_FUNCTION);
 8000e0c:	2004      	movs	r0, #4
 8000e0e:	f000 f899 	bl	8000f44 <modbus_exception>
 8000e12:	0003      	movs	r3, r0
 8000e14:	e08d      	b.n	8000f32 <edit_multiple_registers+0x1f2>
	}

	// Edit holding registers
	modbus_tx_buffer[0] = get_rx_buffer(0); // Append Slave id
 8000e16:	2000      	movs	r0, #0
 8000e18:	f000 fb92 	bl	8001540 <get_rx_buffer>
 8000e1c:	0003      	movs	r3, r0
 8000e1e:	001a      	movs	r2, r3
 8000e20:	4b46      	ldr	r3, [pc, #280]	@ (8000f3c <edit_multiple_registers+0x1fc>)
 8000e22:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[1] = get_rx_buffer(1); // Append Function Code
 8000e24:	2001      	movs	r0, #1
 8000e26:	f000 fb8b 	bl	8001540 <get_rx_buffer>
 8000e2a:	0003      	movs	r3, r0
 8000e2c:	001a      	movs	r2, r3
 8000e2e:	4b43      	ldr	r3, [pc, #268]	@ (8000f3c <edit_multiple_registers+0x1fc>)
 8000e30:	705a      	strb	r2, [r3, #1]
	// Append the Write Address (high byte then low byte)
	modbus_tx_buffer[2] = get_rx_buffer(2);
 8000e32:	2002      	movs	r0, #2
 8000e34:	f000 fb84 	bl	8001540 <get_rx_buffer>
 8000e38:	0003      	movs	r3, r0
 8000e3a:	001a      	movs	r2, r3
 8000e3c:	4b3f      	ldr	r3, [pc, #252]	@ (8000f3c <edit_multiple_registers+0x1fc>)
 8000e3e:	709a      	strb	r2, [r3, #2]
	modbus_tx_buffer[3] = get_rx_buffer(3);
 8000e40:	2003      	movs	r0, #3
 8000e42:	f000 fb7d 	bl	8001540 <get_rx_buffer>
 8000e46:	0003      	movs	r3, r0
 8000e48:	001a      	movs	r2, r3
 8000e4a:	4b3c      	ldr	r3, [pc, #240]	@ (8000f3c <edit_multiple_registers+0x1fc>)
 8000e4c:	70da      	strb	r2, [r3, #3]
	// Append the quantity of registers to be written (high byte then low byte)
	modbus_tx_buffer[4] = get_rx_buffer(4);
 8000e4e:	2004      	movs	r0, #4
 8000e50:	f000 fb76 	bl	8001540 <get_rx_buffer>
 8000e54:	0003      	movs	r3, r0
 8000e56:	001a      	movs	r2, r3
 8000e58:	4b38      	ldr	r3, [pc, #224]	@ (8000f3c <edit_multiple_registers+0x1fc>)
 8000e5a:	711a      	strb	r2, [r3, #4]
	modbus_tx_buffer[5] = get_rx_buffer(5);
 8000e5c:	2005      	movs	r0, #5
 8000e5e:	f000 fb6f 	bl	8001540 <get_rx_buffer>
 8000e62:	0003      	movs	r3, r0
 8000e64:	001a      	movs	r2, r3
 8000e66:	4b35      	ldr	r3, [pc, #212]	@ (8000f3c <edit_multiple_registers+0x1fc>)
 8000e68:	715a      	strb	r2, [r3, #5]
	(*tx_len) = 6;
 8000e6a:	687b      	ldr	r3, [r7, #4]
 8000e6c:	2206      	movs	r2, #6
 8000e6e:	701a      	strb	r2, [r3, #0]

	for(uint8_t i = 0; i < num_registers; i++)
 8000e70:	2317      	movs	r3, #23
 8000e72:	18fb      	adds	r3, r7, r3
 8000e74:	2200      	movs	r2, #0
 8000e76:	701a      	strb	r2, [r3, #0]
 8000e78:	e032      	b.n	8000ee0 <edit_multiple_registers+0x1a0>
	{
		holding_register_database[first_register_address + i] = (get_rx_buffer(2 * i + 7) << 8) | get_rx_buffer(2 * i + 8);
 8000e7a:	2517      	movs	r5, #23
 8000e7c:	197b      	adds	r3, r7, r5
 8000e7e:	781b      	ldrb	r3, [r3, #0]
 8000e80:	18db      	adds	r3, r3, r3
 8000e82:	b2db      	uxtb	r3, r3
 8000e84:	3307      	adds	r3, #7
 8000e86:	b2db      	uxtb	r3, r3
 8000e88:	0018      	movs	r0, r3
 8000e8a:	f000 fb59 	bl	8001540 <get_rx_buffer>
 8000e8e:	0003      	movs	r3, r0
 8000e90:	021b      	lsls	r3, r3, #8
 8000e92:	b21c      	sxth	r4, r3
 8000e94:	197b      	adds	r3, r7, r5
 8000e96:	781b      	ldrb	r3, [r3, #0]
 8000e98:	3304      	adds	r3, #4
 8000e9a:	b2db      	uxtb	r3, r3
 8000e9c:	18db      	adds	r3, r3, r3
 8000e9e:	b2db      	uxtb	r3, r3
 8000ea0:	0018      	movs	r0, r3
 8000ea2:	f000 fb4d 	bl	8001540 <get_rx_buffer>
 8000ea6:	0003      	movs	r3, r0
 8000ea8:	b21b      	sxth	r3, r3
 8000eaa:	4323      	orrs	r3, r4
 8000eac:	b219      	sxth	r1, r3
 8000eae:	2014      	movs	r0, #20
 8000eb0:	183b      	adds	r3, r7, r0
 8000eb2:	881a      	ldrh	r2, [r3, #0]
 8000eb4:	197b      	adds	r3, r7, r5
 8000eb6:	781b      	ldrb	r3, [r3, #0]
 8000eb8:	18d2      	adds	r2, r2, r3
 8000eba:	b289      	uxth	r1, r1
 8000ebc:	4b20      	ldr	r3, [pc, #128]	@ (8000f40 <edit_multiple_registers+0x200>)
 8000ebe:	0052      	lsls	r2, r2, #1
 8000ec0:	52d1      	strh	r1, [r2, r3]

		// Handle the range boundaries of each writable register
		handle_range(first_register_address + i);
 8000ec2:	197b      	adds	r3, r7, r5
 8000ec4:	781b      	ldrb	r3, [r3, #0]
 8000ec6:	b29a      	uxth	r2, r3
 8000ec8:	183b      	adds	r3, r7, r0
 8000eca:	881b      	ldrh	r3, [r3, #0]
 8000ecc:	18d3      	adds	r3, r2, r3
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	0018      	movs	r0, r3
 8000ed2:	f000 f85f 	bl	8000f94 <handle_range>
	for(uint8_t i = 0; i < num_registers; i++)
 8000ed6:	197b      	adds	r3, r7, r5
 8000ed8:	781a      	ldrb	r2, [r3, #0]
 8000eda:	197b      	adds	r3, r7, r5
 8000edc:	3201      	adds	r2, #1
 8000ede:	701a      	strb	r2, [r3, #0]
 8000ee0:	2317      	movs	r3, #23
 8000ee2:	18fb      	adds	r3, r7, r3
 8000ee4:	781b      	ldrb	r3, [r3, #0]
 8000ee6:	b29b      	uxth	r3, r3
 8000ee8:	2212      	movs	r2, #18
 8000eea:	18ba      	adds	r2, r7, r2
 8000eec:	8812      	ldrh	r2, [r2, #0]
 8000eee:	429a      	cmp	r2, r3
 8000ef0:	d8c3      	bhi.n	8000e7a <edit_multiple_registers+0x13a>

	// TIMING WORKAROUND START
//	HAL_Delay(1);
	// TIMING WORKAROUND END

	int8_t status = modbus_send((*tx_len));
 8000ef2:	687b      	ldr	r3, [r7, #4]
 8000ef4:	781b      	ldrb	r3, [r3, #0]
 8000ef6:	250f      	movs	r5, #15
 8000ef8:	197c      	adds	r4, r7, r5
 8000efa:	0018      	movs	r0, r3
 8000efc:	f000 f8d6 	bl	80010ac <modbus_send>
 8000f00:	0003      	movs	r3, r0
 8000f02:	7023      	strb	r3, [r4, #0]

	if(status == MB_SUCCESS)
 8000f04:	197b      	adds	r3, r7, r5
 8000f06:	781b      	ldrb	r3, [r3, #0]
 8000f08:	b25b      	sxtb	r3, r3
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	d10d      	bne.n	8000f2a <edit_multiple_registers+0x1ea>
	{
		// Special Case Modbus Baud Rate Modification
		if((first_register_address <= 1) && last_register_address >= 1)
 8000f0e:	2314      	movs	r3, #20
 8000f10:	18fb      	adds	r3, r7, r3
 8000f12:	881b      	ldrh	r3, [r3, #0]
 8000f14:	2b01      	cmp	r3, #1
 8000f16:	d808      	bhi.n	8000f2a <edit_multiple_registers+0x1ea>
 8000f18:	2310      	movs	r3, #16
 8000f1a:	18fb      	adds	r3, r7, r3
 8000f1c:	881b      	ldrh	r3, [r3, #0]
 8000f1e:	2b00      	cmp	r3, #0
 8000f20:	d003      	beq.n	8000f2a <edit_multiple_registers+0x1ea>
		{
			return modbus_change_baud_rate();
 8000f22:	f000 fa81 	bl	8001428 <modbus_change_baud_rate>
 8000f26:	0003      	movs	r3, r0
 8000f28:	e003      	b.n	8000f32 <edit_multiple_registers+0x1f2>
		}
	}
	return status;
 8000f2a:	230f      	movs	r3, #15
 8000f2c:	18fb      	adds	r3, r7, r3
 8000f2e:	781b      	ldrb	r3, [r3, #0]
 8000f30:	b25b      	sxtb	r3, r3
}
 8000f32:	0018      	movs	r0, r3
 8000f34:	46bd      	mov	sp, r7
 8000f36:	b006      	add	sp, #24
 8000f38:	bdb0      	pop	{r4, r5, r7, pc}
 8000f3a:	46c0      	nop			@ (mov r8, r8)
 8000f3c:	20000294 	.word	0x20000294
 8000f40:	20000000 	.word	0x20000000

08000f44 <modbus_exception>:

int8_t modbus_exception(int8_t exception_code)
{
 8000f44:	b580      	push	{r7, lr}
 8000f46:	b082      	sub	sp, #8
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	0002      	movs	r2, r0
 8000f4c:	1dfb      	adds	r3, r7, #7
 8000f4e:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[0] = get_rx_buffer(0);
 8000f50:	2000      	movs	r0, #0
 8000f52:	f000 faf5 	bl	8001540 <get_rx_buffer>
 8000f56:	0003      	movs	r3, r0
 8000f58:	001a      	movs	r2, r3
 8000f5a:	4b0d      	ldr	r3, [pc, #52]	@ (8000f90 <modbus_exception+0x4c>)
 8000f5c:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[1] = get_rx_buffer(1) | 0x80;
 8000f5e:	2001      	movs	r0, #1
 8000f60:	f000 faee 	bl	8001540 <get_rx_buffer>
 8000f64:	0003      	movs	r3, r0
 8000f66:	001a      	movs	r2, r3
 8000f68:	2380      	movs	r3, #128	@ 0x80
 8000f6a:	425b      	negs	r3, r3
 8000f6c:	4313      	orrs	r3, r2
 8000f6e:	b2da      	uxtb	r2, r3
 8000f70:	4b07      	ldr	r3, [pc, #28]	@ (8000f90 <modbus_exception+0x4c>)
 8000f72:	705a      	strb	r2, [r3, #1]
	modbus_tx_buffer[2] = exception_code - 3; // Subtract 3 to match the modbus defined error code value
 8000f74:	1dfb      	adds	r3, r7, #7
 8000f76:	781b      	ldrb	r3, [r3, #0]
 8000f78:	3b03      	subs	r3, #3
 8000f7a:	b2da      	uxtb	r2, r3
 8000f7c:	4b04      	ldr	r3, [pc, #16]	@ (8000f90 <modbus_exception+0x4c>)
 8000f7e:	709a      	strb	r2, [r3, #2]

	return modbus_send(3);
 8000f80:	2003      	movs	r0, #3
 8000f82:	f000 f893 	bl	80010ac <modbus_send>
 8000f86:	0003      	movs	r3, r0
}
 8000f88:	0018      	movs	r0, r3
 8000f8a:	46bd      	mov	sp, r7
 8000f8c:	b002      	add	sp, #8
 8000f8e:	bd80      	pop	{r7, pc}
 8000f90:	20000294 	.word	0x20000294

08000f94 <handle_range>:

void handle_range(uint16_t holding_register)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b082      	sub	sp, #8
 8000f98:	af00      	add	r7, sp, #0
 8000f9a:	0002      	movs	r2, r0
 8000f9c:	1dbb      	adds	r3, r7, #6
 8000f9e:	801a      	strh	r2, [r3, #0]
	switch(holding_register)
 8000fa0:	1dbb      	adds	r3, r7, #6
 8000fa2:	881b      	ldrh	r3, [r3, #0]
 8000fa4:	2b04      	cmp	r3, #4
 8000fa6:	d900      	bls.n	8000faa <handle_range+0x16>
 8000fa8:	e075      	b.n	8001096 <handle_range+0x102>
 8000faa:	009a      	lsls	r2, r3, #2
 8000fac:	4b3c      	ldr	r3, [pc, #240]	@ (80010a0 <handle_range+0x10c>)
 8000fae:	18d3      	adds	r3, r2, r3
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	469f      	mov	pc, r3
	{
		case MODBUS_ID:
		{
			if(holding_register_database[holding_register] > 0xFF)
 8000fb4:	1dbb      	adds	r3, r7, #6
 8000fb6:	881a      	ldrh	r2, [r3, #0]
 8000fb8:	4b3a      	ldr	r3, [pc, #232]	@ (80010a4 <handle_range+0x110>)
 8000fba:	0052      	lsls	r2, r2, #1
 8000fbc:	5ad3      	ldrh	r3, [r2, r3]
 8000fbe:	2bff      	cmp	r3, #255	@ 0xff
 8000fc0:	d800      	bhi.n	8000fc4 <handle_range+0x30>
 8000fc2:	e05f      	b.n	8001084 <handle_range+0xf0>
			{
				holding_register_database[holding_register] = 0xFF;
 8000fc4:	1dbb      	adds	r3, r7, #6
 8000fc6:	881a      	ldrh	r2, [r3, #0]
 8000fc8:	4b36      	ldr	r3, [pc, #216]	@ (80010a4 <handle_range+0x110>)
 8000fca:	0052      	lsls	r2, r2, #1
 8000fcc:	21ff      	movs	r1, #255	@ 0xff
 8000fce:	52d1      	strh	r1, [r2, r3]
			}
			break;
 8000fd0:	e058      	b.n	8001084 <handle_range+0xf0>
		}
		case MB_BAUD_RATE:
		{
			if(holding_register_database[holding_register] < BAUD_RATE_4800)
 8000fd2:	1dbb      	adds	r3, r7, #6
 8000fd4:	881a      	ldrh	r2, [r3, #0]
 8000fd6:	4b33      	ldr	r3, [pc, #204]	@ (80010a4 <handle_range+0x110>)
 8000fd8:	0052      	lsls	r2, r2, #1
 8000fda:	5ad3      	ldrh	r3, [r2, r3]
 8000fdc:	2b01      	cmp	r3, #1
 8000fde:	d806      	bhi.n	8000fee <handle_range+0x5a>
			{
				holding_register_database[holding_register] = BAUD_RATE_4800;
 8000fe0:	1dbb      	adds	r3, r7, #6
 8000fe2:	881a      	ldrh	r2, [r3, #0]
 8000fe4:	4b2f      	ldr	r3, [pc, #188]	@ (80010a4 <handle_range+0x110>)
 8000fe6:	0052      	lsls	r2, r2, #1
 8000fe8:	2102      	movs	r1, #2
 8000fea:	52d1      	strh	r1, [r2, r3]
			}
			else if(holding_register_database[holding_register] > BAUD_RATE_256000)
			{
				holding_register_database[holding_register] = BAUD_RATE_256000;
			}
			break;
 8000fec:	e04c      	b.n	8001088 <handle_range+0xf4>
			else if(holding_register_database[holding_register] > BAUD_RATE_256000)
 8000fee:	1dbb      	adds	r3, r7, #6
 8000ff0:	881a      	ldrh	r2, [r3, #0]
 8000ff2:	4b2c      	ldr	r3, [pc, #176]	@ (80010a4 <handle_range+0x110>)
 8000ff4:	0052      	lsls	r2, r2, #1
 8000ff6:	5ad3      	ldrh	r3, [r2, r3]
 8000ff8:	2b09      	cmp	r3, #9
 8000ffa:	d945      	bls.n	8001088 <handle_range+0xf4>
				holding_register_database[holding_register] = BAUD_RATE_256000;
 8000ffc:	1dbb      	adds	r3, r7, #6
 8000ffe:	881a      	ldrh	r2, [r3, #0]
 8001000:	4b28      	ldr	r3, [pc, #160]	@ (80010a4 <handle_range+0x110>)
 8001002:	0052      	lsls	r2, r2, #1
 8001004:	2109      	movs	r1, #9
 8001006:	52d1      	strh	r1, [r2, r3]
			break;
 8001008:	e03e      	b.n	8001088 <handle_range+0xf4>
		}
		case MB_TRANSMIT_TIMEOUT:
		{
			if(holding_register_database[holding_register] < 5)
 800100a:	1dbb      	adds	r3, r7, #6
 800100c:	881a      	ldrh	r2, [r3, #0]
 800100e:	4b25      	ldr	r3, [pc, #148]	@ (80010a4 <handle_range+0x110>)
 8001010:	0052      	lsls	r2, r2, #1
 8001012:	5ad3      	ldrh	r3, [r2, r3]
 8001014:	2b04      	cmp	r3, #4
 8001016:	d806      	bhi.n	8001026 <handle_range+0x92>
			{
				holding_register_database[holding_register] = 5;
 8001018:	1dbb      	adds	r3, r7, #6
 800101a:	881a      	ldrh	r2, [r3, #0]
 800101c:	4b21      	ldr	r3, [pc, #132]	@ (80010a4 <handle_range+0x110>)
 800101e:	0052      	lsls	r2, r2, #1
 8001020:	2105      	movs	r1, #5
 8001022:	52d1      	strh	r1, [r2, r3]
			}
			else if(holding_register_database[holding_register] > 1000)
			{
				holding_register_database[holding_register] = 1000;
			}
			break;
 8001024:	e032      	b.n	800108c <handle_range+0xf8>
			else if(holding_register_database[holding_register] > 1000)
 8001026:	1dbb      	adds	r3, r7, #6
 8001028:	881a      	ldrh	r2, [r3, #0]
 800102a:	4b1e      	ldr	r3, [pc, #120]	@ (80010a4 <handle_range+0x110>)
 800102c:	0052      	lsls	r2, r2, #1
 800102e:	5ad2      	ldrh	r2, [r2, r3]
 8001030:	23fa      	movs	r3, #250	@ 0xfa
 8001032:	009b      	lsls	r3, r3, #2
 8001034:	429a      	cmp	r2, r3
 8001036:	d929      	bls.n	800108c <handle_range+0xf8>
				holding_register_database[holding_register] = 1000;
 8001038:	1dbb      	adds	r3, r7, #6
 800103a:	881a      	ldrh	r2, [r3, #0]
 800103c:	4b19      	ldr	r3, [pc, #100]	@ (80010a4 <handle_range+0x110>)
 800103e:	0052      	lsls	r2, r2, #1
 8001040:	21fa      	movs	r1, #250	@ 0xfa
 8001042:	0089      	lsls	r1, r1, #2
 8001044:	52d1      	strh	r1, [r2, r3]
			break;
 8001046:	e021      	b.n	800108c <handle_range+0xf8>
		}
		case MB_TRANSMIT_RETRIES:
		{
			if(holding_register_database[holding_register] > 5)
 8001048:	1dbb      	adds	r3, r7, #6
 800104a:	881a      	ldrh	r2, [r3, #0]
 800104c:	4b15      	ldr	r3, [pc, #84]	@ (80010a4 <handle_range+0x110>)
 800104e:	0052      	lsls	r2, r2, #1
 8001050:	5ad3      	ldrh	r3, [r2, r3]
 8001052:	2b05      	cmp	r3, #5
 8001054:	d91c      	bls.n	8001090 <handle_range+0xfc>
			{
				holding_register_database[holding_register] = 5;
 8001056:	1dbb      	adds	r3, r7, #6
 8001058:	881a      	ldrh	r2, [r3, #0]
 800105a:	4b12      	ldr	r3, [pc, #72]	@ (80010a4 <handle_range+0x110>)
 800105c:	0052      	lsls	r2, r2, #1
 800105e:	2105      	movs	r1, #5
 8001060:	52d1      	strh	r1, [r2, r3]
			}
			break;
 8001062:	e015      	b.n	8001090 <handle_range+0xfc>
		}
		case MB_ERRORS:
		{
			if(holding_register_database[holding_register] > 0x3FF)
 8001064:	1dbb      	adds	r3, r7, #6
 8001066:	881a      	ldrh	r2, [r3, #0]
 8001068:	4b0e      	ldr	r3, [pc, #56]	@ (80010a4 <handle_range+0x110>)
 800106a:	0052      	lsls	r2, r2, #1
 800106c:	5ad2      	ldrh	r2, [r2, r3]
 800106e:	2380      	movs	r3, #128	@ 0x80
 8001070:	00db      	lsls	r3, r3, #3
 8001072:	429a      	cmp	r2, r3
 8001074:	d30e      	bcc.n	8001094 <handle_range+0x100>
			{
				holding_register_database[holding_register] = 0x3FF;
 8001076:	1dbb      	adds	r3, r7, #6
 8001078:	881a      	ldrh	r2, [r3, #0]
 800107a:	4b0a      	ldr	r3, [pc, #40]	@ (80010a4 <handle_range+0x110>)
 800107c:	0052      	lsls	r2, r2, #1
 800107e:	490a      	ldr	r1, [pc, #40]	@ (80010a8 <handle_range+0x114>)
 8001080:	52d1      	strh	r1, [r2, r3]
			}
			break;
 8001082:	e007      	b.n	8001094 <handle_range+0x100>
			break;
 8001084:	46c0      	nop			@ (mov r8, r8)
 8001086:	e006      	b.n	8001096 <handle_range+0x102>
			break;
 8001088:	46c0      	nop			@ (mov r8, r8)
 800108a:	e004      	b.n	8001096 <handle_range+0x102>
			break;
 800108c:	46c0      	nop			@ (mov r8, r8)
 800108e:	e002      	b.n	8001096 <handle_range+0x102>
			break;
 8001090:	46c0      	nop			@ (mov r8, r8)
 8001092:	e000      	b.n	8001096 <handle_range+0x102>
			break;
 8001094:	46c0      	nop			@ (mov r8, r8)
		}
	}
}
 8001096:	46c0      	nop			@ (mov r8, r8)
 8001098:	46bd      	mov	sp, r7
 800109a:	b002      	add	sp, #8
 800109c:	bd80      	pop	{r7, pc}
 800109e:	46c0      	nop			@ (mov r8, r8)
 80010a0:	0800528c 	.word	0x0800528c
 80010a4:	20000000 	.word	0x20000000
 80010a8:	000003ff 	.word	0x000003ff

080010ac <modbus_send>:
#endif // MB_SLAVE

// General Modbus Functions -------------------------------------------------------------------

int8_t modbus_send(uint8_t size)
{
 80010ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80010ae:	b085      	sub	sp, #20
 80010b0:	af00      	add	r7, sp, #0
 80010b2:	0002      	movs	r2, r0
 80010b4:	1dfb      	adds	r3, r7, #7
 80010b6:	701a      	strb	r2, [r3, #0]
	int8_t status = HAL_OK;
 80010b8:	250f      	movs	r5, #15
 80010ba:	197b      	adds	r3, r7, r5
 80010bc:	2200      	movs	r2, #0
 80010be:	701a      	strb	r2, [r3, #0]
	// Append CRC (low byte then high byte)
	uint16_t crc = crc_16(modbus_tx_buffer, size);
 80010c0:	260c      	movs	r6, #12
 80010c2:	19bc      	adds	r4, r7, r6
 80010c4:	1dfb      	adds	r3, r7, #7
 80010c6:	781a      	ldrb	r2, [r3, #0]
 80010c8:	4b1f      	ldr	r3, [pc, #124]	@ (8001148 <modbus_send+0x9c>)
 80010ca:	0011      	movs	r1, r2
 80010cc:	0018      	movs	r0, r3
 80010ce:	f000 fa65 	bl	800159c <crc_16>
 80010d2:	0003      	movs	r3, r0
 80010d4:	8023      	strh	r3, [r4, #0]
	modbus_tx_buffer[size] = low_byte(crc);
 80010d6:	1dfb      	adds	r3, r7, #7
 80010d8:	781b      	ldrb	r3, [r3, #0]
 80010da:	19ba      	adds	r2, r7, r6
 80010dc:	8812      	ldrh	r2, [r2, #0]
 80010de:	b2d1      	uxtb	r1, r2
 80010e0:	4a19      	ldr	r2, [pc, #100]	@ (8001148 <modbus_send+0x9c>)
 80010e2:	54d1      	strb	r1, [r2, r3]
	modbus_tx_buffer[size + 1] = high_byte(crc);
 80010e4:	19bb      	adds	r3, r7, r6
 80010e6:	881b      	ldrh	r3, [r3, #0]
 80010e8:	0a1b      	lsrs	r3, r3, #8
 80010ea:	b29a      	uxth	r2, r3
 80010ec:	1dfb      	adds	r3, r7, #7
 80010ee:	781b      	ldrb	r3, [r3, #0]
 80010f0:	3301      	adds	r3, #1
 80010f2:	b2d1      	uxtb	r1, r2
 80010f4:	4a14      	ldr	r2, [pc, #80]	@ (8001148 <modbus_send+0x9c>)
 80010f6:	54d1      	strb	r1, [r2, r3]

	uart_tx_int = 0; // This will enable tx timeout monitoring
 80010f8:	4b14      	ldr	r3, [pc, #80]	@ (800114c <modbus_send+0xa0>)
 80010fa:	2200      	movs	r2, #0
 80010fc:	701a      	strb	r2, [r3, #0]
	tx_time = HAL_GetTick();
 80010fe:	f000 fd21 	bl	8001b44 <HAL_GetTick>
 8001102:	0002      	movs	r2, r0
 8001104:	4b12      	ldr	r3, [pc, #72]	@ (8001150 <modbus_send+0xa4>)
 8001106:	601a      	str	r2, [r3, #0]
	status = HAL_UART_Transmit_DMA(&huart1, modbus_tx_buffer, size + 2);
 8001108:	1dfb      	adds	r3, r7, #7
 800110a:	781b      	ldrb	r3, [r3, #0]
 800110c:	b29b      	uxth	r3, r3
 800110e:	3302      	adds	r3, #2
 8001110:	b29a      	uxth	r2, r3
 8001112:	490d      	ldr	r1, [pc, #52]	@ (8001148 <modbus_send+0x9c>)
 8001114:	4b0f      	ldr	r3, [pc, #60]	@ (8001154 <modbus_send+0xa8>)
 8001116:	0018      	movs	r0, r3
 8001118:	f002 f990 	bl	800343c <HAL_UART_Transmit_DMA>
 800111c:	0003      	movs	r3, r0
 800111e:	001a      	movs	r2, r3
 8001120:	197b      	adds	r3, r7, r5
 8001122:	701a      	strb	r2, [r3, #0]
	__HAL_DMA_DISABLE_IT(huart1.hdmatx, DMA_IT_HT);
 8001124:	4b0b      	ldr	r3, [pc, #44]	@ (8001154 <modbus_send+0xa8>)
 8001126:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8001128:	681b      	ldr	r3, [r3, #0]
 800112a:	681a      	ldr	r2, [r3, #0]
 800112c:	4b09      	ldr	r3, [pc, #36]	@ (8001154 <modbus_send+0xa8>)
 800112e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	2104      	movs	r1, #4
 8001134:	438a      	bics	r2, r1
 8001136:	601a      	str	r2, [r3, #0]
	return status;
 8001138:	197b      	adds	r3, r7, r5
 800113a:	781b      	ldrb	r3, [r3, #0]
 800113c:	b25b      	sxtb	r3, r3
}
 800113e:	0018      	movs	r0, r3
 8001140:	46bd      	mov	sp, r7
 8001142:	b005      	add	sp, #20
 8001144:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001146:	46c0      	nop			@ (mov r8, r8)
 8001148:	20000294 	.word	0x20000294
 800114c:	20000012 	.word	0x20000012
 8001150:	20000394 	.word	0x20000394
 8001154:	2000003c 	.word	0x2000003c

08001158 <modbus_reset>:

int8_t modbus_reset()
{
 8001158:	b580      	push	{r7, lr}
 800115a:	b082      	sub	sp, #8
 800115c:	af00      	add	r7, sp, #0
	int8_t status = 0;
 800115e:	1dfb      	adds	r3, r7, #7
 8001160:	2200      	movs	r2, #0
 8001162:	701a      	strb	r2, [r3, #0]
	status = HAL_UART_Abort(&huart1);
 8001164:	4b30      	ldr	r3, [pc, #192]	@ (8001228 <modbus_reset+0xd0>)
 8001166:	0018      	movs	r0, r3
 8001168:	f002 f9fa 	bl	8003560 <HAL_UART_Abort>
 800116c:	0003      	movs	r3, r0
 800116e:	001a      	movs	r2, r3
 8001170:	1dfb      	adds	r3, r7, #7
 8001172:	701a      	strb	r2, [r3, #0]
	status |= HAL_UART_DeInit(&huart1);
 8001174:	4b2c      	ldr	r3, [pc, #176]	@ (8001228 <modbus_reset+0xd0>)
 8001176:	0018      	movs	r0, r3
 8001178:	f002 f920 	bl	80033bc <HAL_UART_DeInit>
 800117c:	0003      	movs	r3, r0
 800117e:	b259      	sxtb	r1, r3
 8001180:	1dfb      	adds	r3, r7, #7
 8001182:	1dfa      	adds	r2, r7, #7
 8001184:	7812      	ldrb	r2, [r2, #0]
 8001186:	430a      	orrs	r2, r1
 8001188:	701a      	strb	r2, [r3, #0]
	__USART1_FORCE_RESET();
 800118a:	4b28      	ldr	r3, [pc, #160]	@ (800122c <modbus_reset+0xd4>)
 800118c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800118e:	4b27      	ldr	r3, [pc, #156]	@ (800122c <modbus_reset+0xd4>)
 8001190:	2180      	movs	r1, #128	@ 0x80
 8001192:	01c9      	lsls	r1, r1, #7
 8001194:	430a      	orrs	r2, r1
 8001196:	631a      	str	r2, [r3, #48]	@ 0x30
	HAL_Delay(100);
 8001198:	2064      	movs	r0, #100	@ 0x64
 800119a:	f000 fcdd 	bl	8001b58 <HAL_Delay>
	__USART1_RELEASE_RESET();
 800119e:	4b23      	ldr	r3, [pc, #140]	@ (800122c <modbus_reset+0xd4>)
 80011a0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011a2:	4b22      	ldr	r3, [pc, #136]	@ (800122c <modbus_reset+0xd4>)
 80011a4:	4922      	ldr	r1, [pc, #136]	@ (8001230 <modbus_reset+0xd8>)
 80011a6:	400a      	ands	r2, r1
 80011a8:	631a      	str	r2, [r3, #48]	@ 0x30
	status = HAL_RS485Ex_Init(&huart1, UART_DE_POLARITY_HIGH, 0, 0);
 80011aa:	481f      	ldr	r0, [pc, #124]	@ (8001228 <modbus_reset+0xd0>)
 80011ac:	2300      	movs	r3, #0
 80011ae:	2200      	movs	r2, #0
 80011b0:	2100      	movs	r1, #0
 80011b2:	f003 fd27 	bl	8004c04 <HAL_RS485Ex_Init>
 80011b6:	0003      	movs	r3, r0
 80011b8:	001a      	movs	r2, r3
 80011ba:	1dfb      	adds	r3, r7, #7
 80011bc:	701a      	strb	r2, [r3, #0]
	status |= HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8);
 80011be:	4b1a      	ldr	r3, [pc, #104]	@ (8001228 <modbus_reset+0xd0>)
 80011c0:	2100      	movs	r1, #0
 80011c2:	0018      	movs	r0, r3
 80011c4:	f003 fde2 	bl	8004d8c <HAL_UARTEx_SetTxFifoThreshold>
 80011c8:	0003      	movs	r3, r0
 80011ca:	b259      	sxtb	r1, r3
 80011cc:	1dfb      	adds	r3, r7, #7
 80011ce:	1dfa      	adds	r2, r7, #7
 80011d0:	7812      	ldrb	r2, [r2, #0]
 80011d2:	430a      	orrs	r2, r1
 80011d4:	701a      	strb	r2, [r3, #0]
	status |= HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8);
 80011d6:	4b14      	ldr	r3, [pc, #80]	@ (8001228 <modbus_reset+0xd0>)
 80011d8:	2100      	movs	r1, #0
 80011da:	0018      	movs	r0, r3
 80011dc:	f003 fe16 	bl	8004e0c <HAL_UARTEx_SetRxFifoThreshold>
 80011e0:	0003      	movs	r3, r0
 80011e2:	b259      	sxtb	r1, r3
 80011e4:	1dfb      	adds	r3, r7, #7
 80011e6:	1dfa      	adds	r2, r7, #7
 80011e8:	7812      	ldrb	r2, [r2, #0]
 80011ea:	430a      	orrs	r2, r1
 80011ec:	701a      	strb	r2, [r3, #0]
	status |= HAL_UARTEx_DisableFifoMode(&huart1);
 80011ee:	4b0e      	ldr	r3, [pc, #56]	@ (8001228 <modbus_reset+0xd0>)
 80011f0:	0018      	movs	r0, r3
 80011f2:	f003 fd91 	bl	8004d18 <HAL_UARTEx_DisableFifoMode>
 80011f6:	0003      	movs	r3, r0
 80011f8:	b259      	sxtb	r1, r3
 80011fa:	1dfb      	adds	r3, r7, #7
 80011fc:	1dfa      	adds	r2, r7, #7
 80011fe:	7812      	ldrb	r2, [r2, #0]
 8001200:	430a      	orrs	r2, r1
 8001202:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 8001204:	1dfb      	adds	r3, r7, #7
 8001206:	781b      	ldrb	r3, [r3, #0]
 8001208:	b25b      	sxtb	r3, r3
 800120a:	2b00      	cmp	r3, #0
 800120c:	d004      	beq.n	8001218 <modbus_reset+0xc0>
	{
		return handle_modbus_error(MB_FATAL_ERROR);
 800120e:	2015      	movs	r0, #21
 8001210:	f000 f9a6 	bl	8001560 <handle_modbus_error>
 8001214:	0003      	movs	r3, r0
 8001216:	e002      	b.n	800121e <modbus_reset+0xc6>
	}
	return status;
 8001218:	1dfb      	adds	r3, r7, #7
 800121a:	781b      	ldrb	r3, [r3, #0]
 800121c:	b25b      	sxtb	r3, r3
}
 800121e:	0018      	movs	r0, r3
 8001220:	46bd      	mov	sp, r7
 8001222:	b002      	add	sp, #8
 8001224:	bd80      	pop	{r7, pc}
 8001226:	46c0      	nop			@ (mov r8, r8)
 8001228:	2000003c 	.word	0x2000003c
 800122c:	40021000 	.word	0x40021000
 8001230:	ffffbfff 	.word	0xffffbfff

08001234 <modbus_set_rx>:

int8_t modbus_set_rx()
{
 8001234:	b580      	push	{r7, lr}
 8001236:	b082      	sub	sp, #8
 8001238:	af00      	add	r7, sp, #0
	int8_t status = HAL_UARTEx_ReceiveToIdle_DMA(&huart1, modbus_rx_buffer, 6);
 800123a:	490e      	ldr	r1, [pc, #56]	@ (8001274 <modbus_set_rx+0x40>)
 800123c:	4b0e      	ldr	r3, [pc, #56]	@ (8001278 <modbus_set_rx+0x44>)
 800123e:	2206      	movs	r2, #6
 8001240:	0018      	movs	r0, r3
 8001242:	f003 fe25 	bl	8004e90 <HAL_UARTEx_ReceiveToIdle_DMA>
 8001246:	0003      	movs	r3, r0
 8001248:	001a      	movs	r2, r3
 800124a:	1dfb      	adds	r3, r7, #7
 800124c:	701a      	strb	r2, [r3, #0]
	__HAL_DMA_DISABLE_IT(huart1.hdmarx, DMA_IT_HT);
 800124e:	4b0a      	ldr	r3, [pc, #40]	@ (8001278 <modbus_set_rx+0x44>)
 8001250:	2280      	movs	r2, #128	@ 0x80
 8001252:	589b      	ldr	r3, [r3, r2]
 8001254:	681b      	ldr	r3, [r3, #0]
 8001256:	681a      	ldr	r2, [r3, #0]
 8001258:	4b07      	ldr	r3, [pc, #28]	@ (8001278 <modbus_set_rx+0x44>)
 800125a:	2180      	movs	r1, #128	@ 0x80
 800125c:	585b      	ldr	r3, [r3, r1]
 800125e:	681b      	ldr	r3, [r3, #0]
 8001260:	2104      	movs	r1, #4
 8001262:	438a      	bics	r2, r1
 8001264:	601a      	str	r2, [r3, #0]

	return status;
 8001266:	1dfb      	adds	r3, r7, #7
 8001268:	781b      	ldrb	r3, [r3, #0]
 800126a:	b25b      	sxtb	r3, r3
}
 800126c:	0018      	movs	r0, r3
 800126e:	46bd      	mov	sp, r7
 8001270:	b002      	add	sp, #8
 8001272:	bd80      	pop	{r7, pc}
 8001274:	20000194 	.word	0x20000194
 8001278:	2000003c 	.word	0x2000003c

0800127c <monitor_modbus>:

int8_t monitor_modbus()
{
 800127c:	b590      	push	{r4, r7, lr}
 800127e:	b083      	sub	sp, #12
 8001280:	af00      	add	r7, sp, #0
	int8_t status = MB_SUCCESS;
 8001282:	1dfb      	adds	r3, r7, #7
 8001284:	2200      	movs	r2, #0
 8001286:	701a      	strb	r2, [r3, #0]

	// Chunk miss handling
	status = handle_chunk_miss();
 8001288:	1dfc      	adds	r4, r7, #7
 800128a:	f000 f9cd 	bl	8001628 <handle_chunk_miss>
 800128e:	0003      	movs	r3, r0
 8001290:	7023      	strb	r3, [r4, #0]
	if(status != MB_SUCCESS)
 8001292:	1dfb      	adds	r3, r7, #7
 8001294:	781b      	ldrb	r3, [r3, #0]
 8001296:	b25b      	sxtb	r3, r3
 8001298:	2b00      	cmp	r3, #0
 800129a:	d012      	beq.n	80012c2 <monitor_modbus+0x46>
	{
		status = modbus_reset();
 800129c:	1dfc      	adds	r4, r7, #7
 800129e:	f7ff ff5b 	bl	8001158 <modbus_reset>
 80012a2:	0003      	movs	r3, r0
 80012a4:	7023      	strb	r3, [r4, #0]
		if(status != MB_SUCCESS)
 80012a6:	1dfb      	adds	r3, r7, #7
 80012a8:	781b      	ldrb	r3, [r3, #0]
 80012aa:	b25b      	sxtb	r3, r3
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	d003      	beq.n	80012b8 <monitor_modbus+0x3c>
		{
			return status;
 80012b0:	1dfb      	adds	r3, r7, #7
 80012b2:	781b      	ldrb	r3, [r3, #0]
 80012b4:	b25b      	sxtb	r3, r3
 80012b6:	e039      	b.n	800132c <monitor_modbus+0xb0>
		}
		return handle_modbus_error(MB_UART_ERROR);
 80012b8:	2014      	movs	r0, #20
 80012ba:	f000 f951 	bl	8001560 <handle_modbus_error>
 80012be:	0003      	movs	r3, r0
 80012c0:	e034      	b.n	800132c <monitor_modbus+0xb0>
	}

	// Uart error handling
	if(uart_err_int)
 80012c2:	4b1c      	ldr	r3, [pc, #112]	@ (8001334 <monitor_modbus+0xb8>)
 80012c4:	781b      	ldrb	r3, [r3, #0]
 80012c6:	b2db      	uxtb	r3, r3
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d015      	beq.n	80012f8 <monitor_modbus+0x7c>
	{
		uart_err_int = 0;
 80012cc:	4b19      	ldr	r3, [pc, #100]	@ (8001334 <monitor_modbus+0xb8>)
 80012ce:	2200      	movs	r2, #0
 80012d0:	701a      	strb	r2, [r3, #0]
		status = modbus_reset();
 80012d2:	1dfc      	adds	r4, r7, #7
 80012d4:	f7ff ff40 	bl	8001158 <modbus_reset>
 80012d8:	0003      	movs	r3, r0
 80012da:	7023      	strb	r3, [r4, #0]
		if(status != MB_SUCCESS)
 80012dc:	1dfb      	adds	r3, r7, #7
 80012de:	781b      	ldrb	r3, [r3, #0]
 80012e0:	b25b      	sxtb	r3, r3
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d003      	beq.n	80012ee <monitor_modbus+0x72>
		{
			return status;
 80012e6:	1dfb      	adds	r3, r7, #7
 80012e8:	781b      	ldrb	r3, [r3, #0]
 80012ea:	b25b      	sxtb	r3, r3
 80012ec:	e01e      	b.n	800132c <monitor_modbus+0xb0>
		}
		return handle_modbus_error(MB_UART_ERROR);
 80012ee:	2014      	movs	r0, #20
 80012f0:	f000 f936 	bl	8001560 <handle_modbus_error>
 80012f4:	0003      	movs	r3, r0
 80012f6:	e019      	b.n	800132c <monitor_modbus+0xb0>
	}

	// TX timeout handling
	if(!uart_tx_int)
 80012f8:	4b0f      	ldr	r3, [pc, #60]	@ (8001338 <monitor_modbus+0xbc>)
 80012fa:	781b      	ldrb	r3, [r3, #0]
 80012fc:	b2db      	uxtb	r3, r3
 80012fe:	2b00      	cmp	r3, #0
 8001300:	d111      	bne.n	8001326 <monitor_modbus+0xaa>
	{
		if(HAL_GetTick() - tx_time >= holding_register_database[MB_TRANSMIT_TIMEOUT])
 8001302:	f000 fc1f 	bl	8001b44 <HAL_GetTick>
 8001306:	0002      	movs	r2, r0
 8001308:	4b0c      	ldr	r3, [pc, #48]	@ (800133c <monitor_modbus+0xc0>)
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	1ad3      	subs	r3, r2, r3
 800130e:	4a0c      	ldr	r2, [pc, #48]	@ (8001340 <monitor_modbus+0xc4>)
 8001310:	8892      	ldrh	r2, [r2, #4]
 8001312:	4293      	cmp	r3, r2
 8001314:	d304      	bcc.n	8001320 <monitor_modbus+0xa4>
		{
			return handle_modbus_error(MB_TX_TIMEOUT);
 8001316:	2012      	movs	r0, #18
 8001318:	f000 f922 	bl	8001560 <handle_modbus_error>
 800131c:	0003      	movs	r3, r0
 800131e:	e005      	b.n	800132c <monitor_modbus+0xb0>
		}
		status = HAL_BUSY;
 8001320:	1dfb      	adds	r3, r7, #7
 8001322:	2202      	movs	r2, #2
 8001324:	701a      	strb	r2, [r3, #0]
			}
			status = HAL_BUSY;
		}
	}
#endif
	return status;
 8001326:	1dfb      	adds	r3, r7, #7
 8001328:	781b      	ldrb	r3, [r3, #0]
 800132a:	b25b      	sxtb	r3, r3
}
 800132c:	0018      	movs	r0, r3
 800132e:	46bd      	mov	sp, r7
 8001330:	b003      	add	sp, #12
 8001332:	bd90      	pop	{r4, r7, pc}
 8001334:	2000039d 	.word	0x2000039d
 8001338:	20000012 	.word	0x20000012
 800133c:	20000394 	.word	0x20000394
 8001340:	20000000 	.word	0x20000000

08001344 <modbus_startup>:

// General Modbus Control Functions ------------------------------------------------------------

int8_t modbus_startup()
{
 8001344:	b580      	push	{r7, lr}
 8001346:	b082      	sub	sp, #8
 8001348:	af00      	add	r7, sp, #0
	int8_t status = HAL_RS485Ex_Init(&huart1, UART_DE_POLARITY_HIGH, 0, 0);
 800134a:	4823      	ldr	r0, [pc, #140]	@ (80013d8 <modbus_startup+0x94>)
 800134c:	2300      	movs	r3, #0
 800134e:	2200      	movs	r2, #0
 8001350:	2100      	movs	r1, #0
 8001352:	f003 fc57 	bl	8004c04 <HAL_RS485Ex_Init>
 8001356:	0003      	movs	r3, r0
 8001358:	001a      	movs	r2, r3
 800135a:	1dfb      	adds	r3, r7, #7
 800135c:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 800135e:	1dfb      	adds	r3, r7, #7
 8001360:	781b      	ldrb	r3, [r3, #0]
 8001362:	b25b      	sxtb	r3, r3
 8001364:	2b00      	cmp	r3, #0
 8001366:	d003      	beq.n	8001370 <modbus_startup+0x2c>
	{
		return status;
 8001368:	1dfb      	adds	r3, r7, #7
 800136a:	781b      	ldrb	r3, [r3, #0]
 800136c:	b25b      	sxtb	r3, r3
 800136e:	e02e      	b.n	80013ce <modbus_startup+0x8a>
	}
	status = HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8);
 8001370:	4b19      	ldr	r3, [pc, #100]	@ (80013d8 <modbus_startup+0x94>)
 8001372:	2100      	movs	r1, #0
 8001374:	0018      	movs	r0, r3
 8001376:	f003 fd09 	bl	8004d8c <HAL_UARTEx_SetTxFifoThreshold>
 800137a:	0003      	movs	r3, r0
 800137c:	001a      	movs	r2, r3
 800137e:	1dfb      	adds	r3, r7, #7
 8001380:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 8001382:	1dfb      	adds	r3, r7, #7
 8001384:	781b      	ldrb	r3, [r3, #0]
 8001386:	b25b      	sxtb	r3, r3
 8001388:	2b00      	cmp	r3, #0
 800138a:	d003      	beq.n	8001394 <modbus_startup+0x50>
	{
		return status;
 800138c:	1dfb      	adds	r3, r7, #7
 800138e:	781b      	ldrb	r3, [r3, #0]
 8001390:	b25b      	sxtb	r3, r3
 8001392:	e01c      	b.n	80013ce <modbus_startup+0x8a>
	}
	status = HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8);
 8001394:	4b10      	ldr	r3, [pc, #64]	@ (80013d8 <modbus_startup+0x94>)
 8001396:	2100      	movs	r1, #0
 8001398:	0018      	movs	r0, r3
 800139a:	f003 fd37 	bl	8004e0c <HAL_UARTEx_SetRxFifoThreshold>
 800139e:	0003      	movs	r3, r0
 80013a0:	001a      	movs	r2, r3
 80013a2:	1dfb      	adds	r3, r7, #7
 80013a4:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 80013a6:	1dfb      	adds	r3, r7, #7
 80013a8:	781b      	ldrb	r3, [r3, #0]
 80013aa:	b25b      	sxtb	r3, r3
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d003      	beq.n	80013b8 <modbus_startup+0x74>
	{
		return status;
 80013b0:	1dfb      	adds	r3, r7, #7
 80013b2:	781b      	ldrb	r3, [r3, #0]
 80013b4:	b25b      	sxtb	r3, r3
 80013b6:	e00a      	b.n	80013ce <modbus_startup+0x8a>
	}
	status = HAL_UARTEx_DisableFifoMode(&huart1);
 80013b8:	4b07      	ldr	r3, [pc, #28]	@ (80013d8 <modbus_startup+0x94>)
 80013ba:	0018      	movs	r0, r3
 80013bc:	f003 fcac 	bl	8004d18 <HAL_UARTEx_DisableFifoMode>
 80013c0:	0003      	movs	r3, r0
 80013c2:	001a      	movs	r2, r3
 80013c4:	1dfb      	adds	r3, r7, #7
 80013c6:	701a      	strb	r2, [r3, #0]
	return status;
 80013c8:	1dfb      	adds	r3, r7, #7
 80013ca:	781b      	ldrb	r3, [r3, #0]
 80013cc:	b25b      	sxtb	r3, r3
}
 80013ce:	0018      	movs	r0, r3
 80013d0:	46bd      	mov	sp, r7
 80013d2:	b002      	add	sp, #8
 80013d4:	bd80      	pop	{r7, pc}
 80013d6:	46c0      	nop			@ (mov r8, r8)
 80013d8:	2000003c 	.word	0x2000003c

080013dc <modbus_shutdown>:

int8_t modbus_shutdown()
{
 80013dc:	b580      	push	{r7, lr}
 80013de:	b082      	sub	sp, #8
 80013e0:	af00      	add	r7, sp, #0
	int8_t status = HAL_UART_AbortReceive(&huart1);
 80013e2:	4b10      	ldr	r3, [pc, #64]	@ (8001424 <modbus_shutdown+0x48>)
 80013e4:	0018      	movs	r0, r3
 80013e6:	f002 f9c7 	bl	8003778 <HAL_UART_AbortReceive>
 80013ea:	0003      	movs	r3, r0
 80013ec:	001a      	movs	r2, r3
 80013ee:	1dfb      	adds	r3, r7, #7
 80013f0:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 80013f2:	1dfb      	adds	r3, r7, #7
 80013f4:	781b      	ldrb	r3, [r3, #0]
 80013f6:	b25b      	sxtb	r3, r3
 80013f8:	2b00      	cmp	r3, #0
 80013fa:	d003      	beq.n	8001404 <modbus_shutdown+0x28>
	{
		return status;
 80013fc:	1dfb      	adds	r3, r7, #7
 80013fe:	781b      	ldrb	r3, [r3, #0]
 8001400:	b25b      	sxtb	r3, r3
 8001402:	e00a      	b.n	800141a <modbus_shutdown+0x3e>
	}
	status = HAL_UART_DeInit(&huart1);
 8001404:	4b07      	ldr	r3, [pc, #28]	@ (8001424 <modbus_shutdown+0x48>)
 8001406:	0018      	movs	r0, r3
 8001408:	f001 ffd8 	bl	80033bc <HAL_UART_DeInit>
 800140c:	0003      	movs	r3, r0
 800140e:	001a      	movs	r2, r3
 8001410:	1dfb      	adds	r3, r7, #7
 8001412:	701a      	strb	r2, [r3, #0]

	return status;
 8001414:	1dfb      	adds	r3, r7, #7
 8001416:	781b      	ldrb	r3, [r3, #0]
 8001418:	b25b      	sxtb	r3, r3
}
 800141a:	0018      	movs	r0, r3
 800141c:	46bd      	mov	sp, r7
 800141e:	b002      	add	sp, #8
 8001420:	bd80      	pop	{r7, pc}
 8001422:	46c0      	nop			@ (mov r8, r8)
 8001424:	2000003c 	.word	0x2000003c

08001428 <modbus_change_baud_rate>:

int8_t modbus_change_baud_rate()
{
 8001428:	b590      	push	{r4, r7, lr}
 800142a:	b083      	sub	sp, #12
 800142c:	af00      	add	r7, sp, #0
	int8_t status = 0;
 800142e:	1dfb      	adds	r3, r7, #7
 8001430:	2200      	movs	r2, #0
 8001432:	701a      	strb	r2, [r3, #0]

	switch(holding_register_database[MB_BAUD_RATE])
 8001434:	4b3f      	ldr	r3, [pc, #252]	@ (8001534 <modbus_change_baud_rate+0x10c>)
 8001436:	885b      	ldrh	r3, [r3, #2]
 8001438:	2b09      	cmp	r3, #9
 800143a:	d831      	bhi.n	80014a0 <modbus_change_baud_rate+0x78>
 800143c:	009a      	lsls	r2, r3, #2
 800143e:	4b3e      	ldr	r3, [pc, #248]	@ (8001538 <modbus_change_baud_rate+0x110>)
 8001440:	18d3      	adds	r3, r2, r3
 8001442:	681b      	ldr	r3, [r3, #0]
 8001444:	469f      	mov	pc, r3
	{
		case BAUD_RATE_2400:
		{
			huart1.Init.BaudRate = 2400;
 8001446:	4b3d      	ldr	r3, [pc, #244]	@ (800153c <modbus_change_baud_rate+0x114>)
 8001448:	2296      	movs	r2, #150	@ 0x96
 800144a:	0112      	lsls	r2, r2, #4
 800144c:	605a      	str	r2, [r3, #4]
			break;
 800144e:	e04e      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_4800:
		{
			huart1.Init.BaudRate = 4800;
 8001450:	4b3a      	ldr	r3, [pc, #232]	@ (800153c <modbus_change_baud_rate+0x114>)
 8001452:	2296      	movs	r2, #150	@ 0x96
 8001454:	0152      	lsls	r2, r2, #5
 8001456:	605a      	str	r2, [r3, #4]
			break;
 8001458:	e049      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_9600:
		{
			huart1.Init.BaudRate = 9600;
 800145a:	4b38      	ldr	r3, [pc, #224]	@ (800153c <modbus_change_baud_rate+0x114>)
 800145c:	2296      	movs	r2, #150	@ 0x96
 800145e:	0192      	lsls	r2, r2, #6
 8001460:	605a      	str	r2, [r3, #4]
			break;
 8001462:	e044      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_19200:
		{
			huart1.Init.BaudRate = 19200;
 8001464:	4b35      	ldr	r3, [pc, #212]	@ (800153c <modbus_change_baud_rate+0x114>)
 8001466:	2296      	movs	r2, #150	@ 0x96
 8001468:	01d2      	lsls	r2, r2, #7
 800146a:	605a      	str	r2, [r3, #4]
			break;
 800146c:	e03f      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_38400:
		{
			huart1.Init.BaudRate = 38400;
 800146e:	4b33      	ldr	r3, [pc, #204]	@ (800153c <modbus_change_baud_rate+0x114>)
 8001470:	2296      	movs	r2, #150	@ 0x96
 8001472:	0212      	lsls	r2, r2, #8
 8001474:	605a      	str	r2, [r3, #4]
			break;
 8001476:	e03a      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_57600:
		{
			huart1.Init.BaudRate = 57600;
 8001478:	4b30      	ldr	r3, [pc, #192]	@ (800153c <modbus_change_baud_rate+0x114>)
 800147a:	22e1      	movs	r2, #225	@ 0xe1
 800147c:	0212      	lsls	r2, r2, #8
 800147e:	605a      	str	r2, [r3, #4]
			break;
 8001480:	e035      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_115200:
		{
			huart1.Init.BaudRate = 115200;
 8001482:	4b2e      	ldr	r3, [pc, #184]	@ (800153c <modbus_change_baud_rate+0x114>)
 8001484:	22e1      	movs	r2, #225	@ 0xe1
 8001486:	0252      	lsls	r2, r2, #9
 8001488:	605a      	str	r2, [r3, #4]
			break;
 800148a:	e030      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_128000:
		{
			huart1.Init.BaudRate = 128000;
 800148c:	4b2b      	ldr	r3, [pc, #172]	@ (800153c <modbus_change_baud_rate+0x114>)
 800148e:	22fa      	movs	r2, #250	@ 0xfa
 8001490:	0252      	lsls	r2, r2, #9
 8001492:	605a      	str	r2, [r3, #4]
			break;
 8001494:	e02b      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		case BAUD_RATE_256000:
		{
			huart1.Init.BaudRate = 256000;
 8001496:	4b29      	ldr	r3, [pc, #164]	@ (800153c <modbus_change_baud_rate+0x114>)
 8001498:	22fa      	movs	r2, #250	@ 0xfa
 800149a:	0292      	lsls	r2, r2, #10
 800149c:	605a      	str	r2, [r3, #4]
			break;
 800149e:	e026      	b.n	80014ee <modbus_change_baud_rate+0xc6>
		}
		default:
		{
			holding_register_database[MB_BAUD_RATE] = BAUD_RATE_9600;
 80014a0:	4b24      	ldr	r3, [pc, #144]	@ (8001534 <modbus_change_baud_rate+0x10c>)
 80014a2:	2203      	movs	r2, #3
 80014a4:	805a      	strh	r2, [r3, #2]
			huart1.Init.BaudRate = 9600;
 80014a6:	4b25      	ldr	r3, [pc, #148]	@ (800153c <modbus_change_baud_rate+0x114>)
 80014a8:	2296      	movs	r2, #150	@ 0x96
 80014aa:	0192      	lsls	r2, r2, #6
 80014ac:	605a      	str	r2, [r3, #4]
			status = UART_SetConfig(&huart1);
 80014ae:	4b23      	ldr	r3, [pc, #140]	@ (800153c <modbus_change_baud_rate+0x114>)
 80014b0:	0018      	movs	r0, r3
 80014b2:	f002 fd73 	bl	8003f9c <UART_SetConfig>
 80014b6:	0003      	movs	r3, r0
 80014b8:	001a      	movs	r2, r3
 80014ba:	1dfb      	adds	r3, r7, #7
 80014bc:	701a      	strb	r2, [r3, #0]
			if(status == HAL_OK)
 80014be:	1dfb      	adds	r3, r7, #7
 80014c0:	781b      	ldrb	r3, [r3, #0]
 80014c2:	b25b      	sxtb	r3, r3
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d10d      	bne.n	80014e4 <modbus_change_baud_rate+0xbc>
			{
				status = modbus_reset();
 80014c8:	1dfc      	adds	r4, r7, #7
 80014ca:	f7ff fe45 	bl	8001158 <modbus_reset>
 80014ce:	0003      	movs	r3, r0
 80014d0:	7023      	strb	r3, [r4, #0]
				if(status != HAL_OK)
 80014d2:	1dfb      	adds	r3, r7, #7
 80014d4:	781b      	ldrb	r3, [r3, #0]
 80014d6:	b25b      	sxtb	r3, r3
 80014d8:	2b00      	cmp	r3, #0
 80014da:	d003      	beq.n	80014e4 <modbus_change_baud_rate+0xbc>
				{
					return status;
 80014dc:	1dfb      	adds	r3, r7, #7
 80014de:	781b      	ldrb	r3, [r3, #0]
 80014e0:	b25b      	sxtb	r3, r3
 80014e2:	e022      	b.n	800152a <modbus_change_baud_rate+0x102>
				}
			}
			return handle_modbus_error(RANGE_ERROR);
 80014e4:	200e      	movs	r0, #14
 80014e6:	f000 f83b 	bl	8001560 <handle_modbus_error>
 80014ea:	0003      	movs	r3, r0
 80014ec:	e01d      	b.n	800152a <modbus_change_baud_rate+0x102>
		}
	}
	status = UART_SetConfig(&huart1);
 80014ee:	4b13      	ldr	r3, [pc, #76]	@ (800153c <modbus_change_baud_rate+0x114>)
 80014f0:	0018      	movs	r0, r3
 80014f2:	f002 fd53 	bl	8003f9c <UART_SetConfig>
 80014f6:	0003      	movs	r3, r0
 80014f8:	001a      	movs	r2, r3
 80014fa:	1dfb      	adds	r3, r7, #7
 80014fc:	701a      	strb	r2, [r3, #0]
	if(status == HAL_OK)
 80014fe:	1dfb      	adds	r3, r7, #7
 8001500:	781b      	ldrb	r3, [r3, #0]
 8001502:	b25b      	sxtb	r3, r3
 8001504:	2b00      	cmp	r3, #0
 8001506:	d10d      	bne.n	8001524 <modbus_change_baud_rate+0xfc>
	{
		// Log error, reset UART
		status = modbus_reset();
 8001508:	1dfc      	adds	r4, r7, #7
 800150a:	f7ff fe25 	bl	8001158 <modbus_reset>
 800150e:	0003      	movs	r3, r0
 8001510:	7023      	strb	r3, [r4, #0]
		if(status != HAL_OK)
 8001512:	1dfb      	adds	r3, r7, #7
 8001514:	781b      	ldrb	r3, [r3, #0]
 8001516:	b25b      	sxtb	r3, r3
 8001518:	2b00      	cmp	r3, #0
 800151a:	d003      	beq.n	8001524 <modbus_change_baud_rate+0xfc>
		{
			return status;
 800151c:	1dfb      	adds	r3, r7, #7
 800151e:	781b      	ldrb	r3, [r3, #0]
 8001520:	b25b      	sxtb	r3, r3
 8001522:	e002      	b.n	800152a <modbus_change_baud_rate+0x102>
		}
	}

	return modbus_set_rx();
 8001524:	f7ff fe86 	bl	8001234 <modbus_set_rx>
 8001528:	0003      	movs	r3, r0
}
 800152a:	0018      	movs	r0, r3
 800152c:	46bd      	mov	sp, r7
 800152e:	b003      	add	sp, #12
 8001530:	bd90      	pop	{r4, r7, pc}
 8001532:	46c0      	nop			@ (mov r8, r8)
 8001534:	20000000 	.word	0x20000000
 8001538:	080052a0 	.word	0x080052a0
 800153c:	2000003c 	.word	0x2000003c

08001540 <get_rx_buffer>:
}


// Low Level Functions -------------------------------------------------------------------------
uint8_t get_rx_buffer(uint8_t index)
{
 8001540:	b580      	push	{r7, lr}
 8001542:	b082      	sub	sp, #8
 8001544:	af00      	add	r7, sp, #0
 8001546:	0002      	movs	r2, r0
 8001548:	1dfb      	adds	r3, r7, #7
 800154a:	701a      	strb	r2, [r3, #0]
	if (index < MODBUS_RX_BUFFER_SIZE)
	{
		return modbus_rx_buffer[index];
 800154c:	1dfb      	adds	r3, r7, #7
 800154e:	781b      	ldrb	r3, [r3, #0]
 8001550:	4a02      	ldr	r2, [pc, #8]	@ (800155c <get_rx_buffer+0x1c>)
 8001552:	5cd3      	ldrb	r3, [r2, r3]
	}
	return 0xFF;
}
 8001554:	0018      	movs	r0, r3
 8001556:	46bd      	mov	sp, r7
 8001558:	b002      	add	sp, #8
 800155a:	bd80      	pop	{r7, pc}
 800155c:	20000194 	.word	0x20000194

08001560 <handle_modbus_error>:

int8_t handle_modbus_error(int8_t error_code)
{
 8001560:	b580      	push	{r7, lr}
 8001562:	b082      	sub	sp, #8
 8001564:	af00      	add	r7, sp, #0
 8001566:	0002      	movs	r2, r0
 8001568:	1dfb      	adds	r3, r7, #7
 800156a:	701a      	strb	r2, [r3, #0]
	holding_register_database[MB_ERRORS] |= 1U << (error_code - RANGE_ERROR);
 800156c:	4b0a      	ldr	r3, [pc, #40]	@ (8001598 <handle_modbus_error+0x38>)
 800156e:	891a      	ldrh	r2, [r3, #8]
 8001570:	1dfb      	adds	r3, r7, #7
 8001572:	781b      	ldrb	r3, [r3, #0]
 8001574:	b25b      	sxtb	r3, r3
 8001576:	3b0e      	subs	r3, #14
 8001578:	2101      	movs	r1, #1
 800157a:	4099      	lsls	r1, r3
 800157c:	000b      	movs	r3, r1
 800157e:	b29b      	uxth	r3, r3
 8001580:	4313      	orrs	r3, r2
 8001582:	b29a      	uxth	r2, r3
 8001584:	4b04      	ldr	r3, [pc, #16]	@ (8001598 <handle_modbus_error+0x38>)
 8001586:	811a      	strh	r2, [r3, #8]
	return error_code;
 8001588:	1dfb      	adds	r3, r7, #7
 800158a:	781b      	ldrb	r3, [r3, #0]
 800158c:	b25b      	sxtb	r3, r3
}
 800158e:	0018      	movs	r0, r3
 8001590:	46bd      	mov	sp, r7
 8001592:	b002      	add	sp, #8
 8001594:	bd80      	pop	{r7, pc}
 8001596:	46c0      	nop			@ (mov r8, r8)
 8001598:	20000000 	.word	0x20000000

0800159c <crc_16>:

// Private Functions ---------------------------------------------------------------------------

uint16_t crc_16(uint8_t *data, uint8_t size)
{
 800159c:	b580      	push	{r7, lr}
 800159e:	b084      	sub	sp, #16
 80015a0:	af00      	add	r7, sp, #0
 80015a2:	6078      	str	r0, [r7, #4]
 80015a4:	000a      	movs	r2, r1
 80015a6:	1cfb      	adds	r3, r7, #3
 80015a8:	701a      	strb	r2, [r3, #0]
	uint8_t crc_hi = 0xFF;
 80015aa:	230f      	movs	r3, #15
 80015ac:	18fb      	adds	r3, r7, r3
 80015ae:	22ff      	movs	r2, #255	@ 0xff
 80015b0:	701a      	strb	r2, [r3, #0]
	uint8_t crc_low = 0xFF;
 80015b2:	230e      	movs	r3, #14
 80015b4:	18fb      	adds	r3, r7, r3
 80015b6:	22ff      	movs	r2, #255	@ 0xff
 80015b8:	701a      	strb	r2, [r3, #0]
	 unsigned int i; /* will index into CRC lookup */

	/* pass through message buffer */
	while (size--)
 80015ba:	e019      	b.n	80015f0 <crc_16+0x54>
	{
		i = crc_low ^ *data++; /* calculate the CRC  */
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	1c5a      	adds	r2, r3, #1
 80015c0:	607a      	str	r2, [r7, #4]
 80015c2:	781a      	ldrb	r2, [r3, #0]
 80015c4:	200e      	movs	r0, #14
 80015c6:	183b      	adds	r3, r7, r0
 80015c8:	781b      	ldrb	r3, [r3, #0]
 80015ca:	4053      	eors	r3, r2
 80015cc:	b2db      	uxtb	r3, r3
 80015ce:	60bb      	str	r3, [r7, #8]
		crc_low = crc_hi ^ table_crc_hi[i];
 80015d0:	4a13      	ldr	r2, [pc, #76]	@ (8001620 <crc_16+0x84>)
 80015d2:	68bb      	ldr	r3, [r7, #8]
 80015d4:	18d3      	adds	r3, r2, r3
 80015d6:	7819      	ldrb	r1, [r3, #0]
 80015d8:	183b      	adds	r3, r7, r0
 80015da:	200f      	movs	r0, #15
 80015dc:	183a      	adds	r2, r7, r0
 80015de:	7812      	ldrb	r2, [r2, #0]
 80015e0:	404a      	eors	r2, r1
 80015e2:	701a      	strb	r2, [r3, #0]
		crc_hi = table_crc_lo[i];
 80015e4:	183b      	adds	r3, r7, r0
 80015e6:	490f      	ldr	r1, [pc, #60]	@ (8001624 <crc_16+0x88>)
 80015e8:	68ba      	ldr	r2, [r7, #8]
 80015ea:	188a      	adds	r2, r1, r2
 80015ec:	7812      	ldrb	r2, [r2, #0]
 80015ee:	701a      	strb	r2, [r3, #0]
	while (size--)
 80015f0:	1cfb      	adds	r3, r7, #3
 80015f2:	781b      	ldrb	r3, [r3, #0]
 80015f4:	1cfa      	adds	r2, r7, #3
 80015f6:	1e59      	subs	r1, r3, #1
 80015f8:	7011      	strb	r1, [r2, #0]
 80015fa:	2b00      	cmp	r3, #0
 80015fc:	d1de      	bne.n	80015bc <crc_16+0x20>
	}

	return (crc_hi << 8 | crc_low);
 80015fe:	230f      	movs	r3, #15
 8001600:	18fb      	adds	r3, r7, r3
 8001602:	781b      	ldrb	r3, [r3, #0]
 8001604:	021b      	lsls	r3, r3, #8
 8001606:	b21a      	sxth	r2, r3
 8001608:	230e      	movs	r3, #14
 800160a:	18fb      	adds	r3, r7, r3
 800160c:	781b      	ldrb	r3, [r3, #0]
 800160e:	b21b      	sxth	r3, r3
 8001610:	4313      	orrs	r3, r2
 8001612:	b21b      	sxth	r3, r3
 8001614:	b29b      	uxth	r3, r3
}
 8001616:	0018      	movs	r0, r3
 8001618:	46bd      	mov	sp, r7
 800161a:	b004      	add	sp, #16
 800161c:	bd80      	pop	{r7, pc}
 800161e:	46c0      	nop			@ (mov r8, r8)
 8001620:	0800508c 	.word	0x0800508c
 8001624:	0800518c 	.word	0x0800518c

08001628 <handle_chunk_miss>:

int8_t handle_chunk_miss()
{
 8001628:	b590      	push	{r4, r7, lr}
 800162a:	b083      	sub	sp, #12
 800162c:	af00      	add	r7, sp, #0
	if(modbus_header == 0)
 800162e:	4b15      	ldr	r3, [pc, #84]	@ (8001684 <handle_chunk_miss+0x5c>)
 8001630:	881b      	ldrh	r3, [r3, #0]
 8001632:	b29b      	uxth	r3, r3
 8001634:	2b00      	cmp	r3, #0
 8001636:	d120      	bne.n	800167a <handle_chunk_miss+0x52>
	{
		if(HAL_GetTick() - chunk_time > 10)
 8001638:	f000 fa84 	bl	8001b44 <HAL_GetTick>
 800163c:	0002      	movs	r2, r0
 800163e:	4b12      	ldr	r3, [pc, #72]	@ (8001688 <handle_chunk_miss+0x60>)
 8001640:	681b      	ldr	r3, [r3, #0]
 8001642:	1ad3      	subs	r3, r2, r3
 8001644:	2b0a      	cmp	r3, #10
 8001646:	d918      	bls.n	800167a <handle_chunk_miss+0x52>
		{
			modbus_header = 1;
 8001648:	4b0e      	ldr	r3, [pc, #56]	@ (8001684 <handle_chunk_miss+0x5c>)
 800164a:	2201      	movs	r2, #1
 800164c:	801a      	strh	r2, [r3, #0]
			int8_t status = HAL_UART_Abort(&huart1);
 800164e:	4b0f      	ldr	r3, [pc, #60]	@ (800168c <handle_chunk_miss+0x64>)
 8001650:	0018      	movs	r0, r3
 8001652:	f001 ff85 	bl	8003560 <HAL_UART_Abort>
 8001656:	0003      	movs	r3, r0
 8001658:	001a      	movs	r2, r3
 800165a:	1dfb      	adds	r3, r7, #7
 800165c:	701a      	strb	r2, [r3, #0]
			if(status == HAL_OK)
 800165e:	1dfb      	adds	r3, r7, #7
 8001660:	781b      	ldrb	r3, [r3, #0]
 8001662:	b25b      	sxtb	r3, r3
 8001664:	2b00      	cmp	r3, #0
 8001666:	d104      	bne.n	8001672 <handle_chunk_miss+0x4a>
			{
				status = modbus_set_rx();
 8001668:	1dfc      	adds	r4, r7, #7
 800166a:	f7ff fde3 	bl	8001234 <modbus_set_rx>
 800166e:	0003      	movs	r3, r0
 8001670:	7023      	strb	r3, [r4, #0]
			}
			return status;
 8001672:	1dfb      	adds	r3, r7, #7
 8001674:	781b      	ldrb	r3, [r3, #0]
 8001676:	b25b      	sxtb	r3, r3
 8001678:	e000      	b.n	800167c <handle_chunk_miss+0x54>
		}
	}
	return MB_SUCCESS;
 800167a:	2300      	movs	r3, #0
}
 800167c:	0018      	movs	r0, r3
 800167e:	46bd      	mov	sp, r7
 8001680:	b003      	add	sp, #12
 8001682:	bd90      	pop	{r4, r7, pc}
 8001684:	20000010 	.word	0x20000010
 8001688:	20000398 	.word	0x20000398
 800168c:	2000003c 	.word	0x2000003c

08001690 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001690:	b580      	push	{r7, lr}
 8001692:	b082      	sub	sp, #8
 8001694:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001696:	4b0f      	ldr	r3, [pc, #60]	@ (80016d4 <HAL_MspInit+0x44>)
 8001698:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800169a:	4b0e      	ldr	r3, [pc, #56]	@ (80016d4 <HAL_MspInit+0x44>)
 800169c:	2101      	movs	r1, #1
 800169e:	430a      	orrs	r2, r1
 80016a0:	641a      	str	r2, [r3, #64]	@ 0x40
 80016a2:	4b0c      	ldr	r3, [pc, #48]	@ (80016d4 <HAL_MspInit+0x44>)
 80016a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016a6:	2201      	movs	r2, #1
 80016a8:	4013      	ands	r3, r2
 80016aa:	607b      	str	r3, [r7, #4]
 80016ac:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80016ae:	4b09      	ldr	r3, [pc, #36]	@ (80016d4 <HAL_MspInit+0x44>)
 80016b0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80016b2:	4b08      	ldr	r3, [pc, #32]	@ (80016d4 <HAL_MspInit+0x44>)
 80016b4:	2180      	movs	r1, #128	@ 0x80
 80016b6:	0549      	lsls	r1, r1, #21
 80016b8:	430a      	orrs	r2, r1
 80016ba:	63da      	str	r2, [r3, #60]	@ 0x3c
 80016bc:	4b05      	ldr	r3, [pc, #20]	@ (80016d4 <HAL_MspInit+0x44>)
 80016be:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80016c0:	2380      	movs	r3, #128	@ 0x80
 80016c2:	055b      	lsls	r3, r3, #21
 80016c4:	4013      	ands	r3, r2
 80016c6:	603b      	str	r3, [r7, #0]
 80016c8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80016ca:	46c0      	nop			@ (mov r8, r8)
 80016cc:	46bd      	mov	sp, r7
 80016ce:	b002      	add	sp, #8
 80016d0:	bd80      	pop	{r7, pc}
 80016d2:	46c0      	nop			@ (mov r8, r8)
 80016d4:	40021000 	.word	0x40021000

080016d8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80016d8:	b590      	push	{r4, r7, lr}
 80016da:	b095      	sub	sp, #84	@ 0x54
 80016dc:	af00      	add	r7, sp, #0
 80016de:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016e0:	233c      	movs	r3, #60	@ 0x3c
 80016e2:	18fb      	adds	r3, r7, r3
 80016e4:	0018      	movs	r0, r3
 80016e6:	2314      	movs	r3, #20
 80016e8:	001a      	movs	r2, r3
 80016ea:	2100      	movs	r1, #0
 80016ec:	f003 fc96 	bl	800501c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80016f0:	241c      	movs	r4, #28
 80016f2:	193b      	adds	r3, r7, r4
 80016f4:	0018      	movs	r0, r3
 80016f6:	2320      	movs	r3, #32
 80016f8:	001a      	movs	r2, r3
 80016fa:	2100      	movs	r1, #0
 80016fc:	f003 fc8e 	bl	800501c <memset>
  if(huart->Instance==USART1)
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	681b      	ldr	r3, [r3, #0]
 8001704:	4a74      	ldr	r2, [pc, #464]	@ (80018d8 <HAL_UART_MspInit+0x200>)
 8001706:	4293      	cmp	r3, r2
 8001708:	d000      	beq.n	800170c <HAL_UART_MspInit+0x34>
 800170a:	e0e1      	b.n	80018d0 <HAL_UART_MspInit+0x1f8>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 800170c:	193b      	adds	r3, r7, r4
 800170e:	2201      	movs	r2, #1
 8001710:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8001712:	193b      	adds	r3, r7, r4
 8001714:	2200      	movs	r2, #0
 8001716:	609a      	str	r2, [r3, #8]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001718:	193b      	adds	r3, r7, r4
 800171a:	0018      	movs	r0, r3
 800171c:	f001 fd52 	bl	80031c4 <HAL_RCCEx_PeriphCLKConfig>
 8001720:	1e03      	subs	r3, r0, #0
 8001722:	d001      	beq.n	8001728 <HAL_UART_MspInit+0x50>
    {
      Error_Handler();
 8001724:	f7ff f9c6 	bl	8000ab4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001728:	4b6c      	ldr	r3, [pc, #432]	@ (80018dc <HAL_UART_MspInit+0x204>)
 800172a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800172c:	4b6b      	ldr	r3, [pc, #428]	@ (80018dc <HAL_UART_MspInit+0x204>)
 800172e:	2180      	movs	r1, #128	@ 0x80
 8001730:	01c9      	lsls	r1, r1, #7
 8001732:	430a      	orrs	r2, r1
 8001734:	641a      	str	r2, [r3, #64]	@ 0x40
 8001736:	4b69      	ldr	r3, [pc, #420]	@ (80018dc <HAL_UART_MspInit+0x204>)
 8001738:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800173a:	2380      	movs	r3, #128	@ 0x80
 800173c:	01db      	lsls	r3, r3, #7
 800173e:	4013      	ands	r3, r2
 8001740:	61bb      	str	r3, [r7, #24]
 8001742:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001744:	4b65      	ldr	r3, [pc, #404]	@ (80018dc <HAL_UART_MspInit+0x204>)
 8001746:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001748:	4b64      	ldr	r3, [pc, #400]	@ (80018dc <HAL_UART_MspInit+0x204>)
 800174a:	2104      	movs	r1, #4
 800174c:	430a      	orrs	r2, r1
 800174e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001750:	4b62      	ldr	r3, [pc, #392]	@ (80018dc <HAL_UART_MspInit+0x204>)
 8001752:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001754:	2204      	movs	r2, #4
 8001756:	4013      	ands	r3, r2
 8001758:	617b      	str	r3, [r7, #20]
 800175a:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800175c:	4b5f      	ldr	r3, [pc, #380]	@ (80018dc <HAL_UART_MspInit+0x204>)
 800175e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001760:	4b5e      	ldr	r3, [pc, #376]	@ (80018dc <HAL_UART_MspInit+0x204>)
 8001762:	2102      	movs	r1, #2
 8001764:	430a      	orrs	r2, r1
 8001766:	635a      	str	r2, [r3, #52]	@ 0x34
 8001768:	4b5c      	ldr	r3, [pc, #368]	@ (80018dc <HAL_UART_MspInit+0x204>)
 800176a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800176c:	2202      	movs	r2, #2
 800176e:	4013      	ands	r3, r2
 8001770:	613b      	str	r3, [r7, #16]
 8001772:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001774:	4b59      	ldr	r3, [pc, #356]	@ (80018dc <HAL_UART_MspInit+0x204>)
 8001776:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8001778:	4b58      	ldr	r3, [pc, #352]	@ (80018dc <HAL_UART_MspInit+0x204>)
 800177a:	2101      	movs	r1, #1
 800177c:	430a      	orrs	r2, r1
 800177e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001780:	4b56      	ldr	r3, [pc, #344]	@ (80018dc <HAL_UART_MspInit+0x204>)
 8001782:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001784:	2201      	movs	r2, #1
 8001786:	4013      	ands	r3, r2
 8001788:	60fb      	str	r3, [r7, #12]
 800178a:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PC14-OSCX_IN(PC14)     ------> USART1_TX
    PB2     ------> USART1_RX
    PA12 [PA10]     ------> USART1_DE
    */
    GPIO_InitStruct.Pin = GPIO_PIN_14;
 800178c:	213c      	movs	r1, #60	@ 0x3c
 800178e:	187b      	adds	r3, r7, r1
 8001790:	2280      	movs	r2, #128	@ 0x80
 8001792:	01d2      	lsls	r2, r2, #7
 8001794:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001796:	000c      	movs	r4, r1
 8001798:	193b      	adds	r3, r7, r4
 800179a:	2202      	movs	r2, #2
 800179c:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800179e:	193b      	adds	r3, r7, r4
 80017a0:	2200      	movs	r2, #0
 80017a2:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017a4:	193b      	adds	r3, r7, r4
 80017a6:	2200      	movs	r2, #0
 80017a8:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 80017aa:	193b      	adds	r3, r7, r4
 80017ac:	2200      	movs	r2, #0
 80017ae:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017b0:	193b      	adds	r3, r7, r4
 80017b2:	4a4b      	ldr	r2, [pc, #300]	@ (80018e0 <HAL_UART_MspInit+0x208>)
 80017b4:	0019      	movs	r1, r3
 80017b6:	0010      	movs	r0, r2
 80017b8:	f000 feb4 	bl	8002524 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80017bc:	193b      	adds	r3, r7, r4
 80017be:	2204      	movs	r2, #4
 80017c0:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017c2:	193b      	adds	r3, r7, r4
 80017c4:	2202      	movs	r2, #2
 80017c6:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c8:	193b      	adds	r3, r7, r4
 80017ca:	2200      	movs	r2, #0
 80017cc:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017ce:	193b      	adds	r3, r7, r4
 80017d0:	2200      	movs	r2, #0
 80017d2:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 80017d4:	193b      	adds	r3, r7, r4
 80017d6:	2200      	movs	r2, #0
 80017d8:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017da:	193b      	adds	r3, r7, r4
 80017dc:	4a41      	ldr	r2, [pc, #260]	@ (80018e4 <HAL_UART_MspInit+0x20c>)
 80017de:	0019      	movs	r1, r3
 80017e0:	0010      	movs	r0, r2
 80017e2:	f000 fe9f 	bl	8002524 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 80017e6:	0021      	movs	r1, r4
 80017e8:	187b      	adds	r3, r7, r1
 80017ea:	2280      	movs	r2, #128	@ 0x80
 80017ec:	0152      	lsls	r2, r2, #5
 80017ee:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017f0:	187b      	adds	r3, r7, r1
 80017f2:	2202      	movs	r2, #2
 80017f4:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017f6:	187b      	adds	r3, r7, r1
 80017f8:	2200      	movs	r2, #0
 80017fa:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017fc:	187b      	adds	r3, r7, r1
 80017fe:	2200      	movs	r2, #0
 8001800:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 8001802:	187b      	adds	r3, r7, r1
 8001804:	2201      	movs	r2, #1
 8001806:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001808:	187a      	adds	r2, r7, r1
 800180a:	23a0      	movs	r3, #160	@ 0xa0
 800180c:	05db      	lsls	r3, r3, #23
 800180e:	0011      	movs	r1, r2
 8001810:	0018      	movs	r0, r3
 8001812:	f000 fe87 	bl	8002524 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA1_Channel1;
 8001816:	4b34      	ldr	r3, [pc, #208]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001818:	4a34      	ldr	r2, [pc, #208]	@ (80018ec <HAL_UART_MspInit+0x214>)
 800181a:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Request = DMA_REQUEST_USART1_RX;
 800181c:	4b32      	ldr	r3, [pc, #200]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 800181e:	2232      	movs	r2, #50	@ 0x32
 8001820:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001822:	4b31      	ldr	r3, [pc, #196]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001824:	2200      	movs	r2, #0
 8001826:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001828:	4b2f      	ldr	r3, [pc, #188]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 800182a:	2200      	movs	r2, #0
 800182c:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 800182e:	4b2e      	ldr	r3, [pc, #184]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001830:	2280      	movs	r2, #128	@ 0x80
 8001832:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001834:	4b2c      	ldr	r3, [pc, #176]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001836:	2200      	movs	r2, #0
 8001838:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800183a:	4b2b      	ldr	r3, [pc, #172]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 800183c:	2200      	movs	r2, #0
 800183e:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 8001840:	4b29      	ldr	r3, [pc, #164]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001842:	2200      	movs	r2, #0
 8001844:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8001846:	4b28      	ldr	r3, [pc, #160]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001848:	22c0      	movs	r2, #192	@ 0xc0
 800184a:	0192      	lsls	r2, r2, #6
 800184c:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 800184e:	4b26      	ldr	r3, [pc, #152]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001850:	0018      	movs	r0, r3
 8001852:	f000 fab5 	bl	8001dc0 <HAL_DMA_Init>
 8001856:	1e03      	subs	r3, r0, #0
 8001858:	d001      	beq.n	800185e <HAL_UART_MspInit+0x186>
    {
      Error_Handler();
 800185a:	f7ff f92b 	bl	8000ab4 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	2180      	movs	r1, #128	@ 0x80
 8001862:	4a21      	ldr	r2, [pc, #132]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001864:	505a      	str	r2, [r3, r1]
 8001866:	4b20      	ldr	r3, [pc, #128]	@ (80018e8 <HAL_UART_MspInit+0x210>)
 8001868:	687a      	ldr	r2, [r7, #4]
 800186a:	629a      	str	r2, [r3, #40]	@ 0x28

    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA1_Channel2;
 800186c:	4b20      	ldr	r3, [pc, #128]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 800186e:	4a21      	ldr	r2, [pc, #132]	@ (80018f4 <HAL_UART_MspInit+0x21c>)
 8001870:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 8001872:	4b1f      	ldr	r3, [pc, #124]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 8001874:	2233      	movs	r2, #51	@ 0x33
 8001876:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001878:	4b1d      	ldr	r3, [pc, #116]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 800187a:	2210      	movs	r2, #16
 800187c:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800187e:	4b1c      	ldr	r3, [pc, #112]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 8001880:	2200      	movs	r2, #0
 8001882:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001884:	4b1a      	ldr	r3, [pc, #104]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 8001886:	2280      	movs	r2, #128	@ 0x80
 8001888:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800188a:	4b19      	ldr	r3, [pc, #100]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 800188c:	2200      	movs	r2, #0
 800188e:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001890:	4b17      	ldr	r3, [pc, #92]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 8001892:	2200      	movs	r2, #0
 8001894:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 8001896:	4b16      	ldr	r3, [pc, #88]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 8001898:	2200      	movs	r2, #0
 800189a:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 800189c:	4b14      	ldr	r3, [pc, #80]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 800189e:	22c0      	movs	r2, #192	@ 0xc0
 80018a0:	0192      	lsls	r2, r2, #6
 80018a2:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 80018a4:	4b12      	ldr	r3, [pc, #72]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 80018a6:	0018      	movs	r0, r3
 80018a8:	f000 fa8a 	bl	8001dc0 <HAL_DMA_Init>
 80018ac:	1e03      	subs	r3, r0, #0
 80018ae:	d001      	beq.n	80018b4 <HAL_UART_MspInit+0x1dc>
    {
      Error_Handler();
 80018b0:	f7ff f900 	bl	8000ab4 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	4a0e      	ldr	r2, [pc, #56]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 80018b8:	67da      	str	r2, [r3, #124]	@ 0x7c
 80018ba:	4b0d      	ldr	r3, [pc, #52]	@ (80018f0 <HAL_UART_MspInit+0x218>)
 80018bc:	687a      	ldr	r2, [r7, #4]
 80018be:	629a      	str	r2, [r3, #40]	@ 0x28

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80018c0:	2200      	movs	r2, #0
 80018c2:	2100      	movs	r1, #0
 80018c4:	201b      	movs	r0, #27
 80018c6:	f000 fa39 	bl	8001d3c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80018ca:	201b      	movs	r0, #27
 80018cc:	f000 fa4b 	bl	8001d66 <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART1_MspInit 1 */

  }

}
 80018d0:	46c0      	nop			@ (mov r8, r8)
 80018d2:	46bd      	mov	sp, r7
 80018d4:	b015      	add	sp, #84	@ 0x54
 80018d6:	bd90      	pop	{r4, r7, pc}
 80018d8:	40013800 	.word	0x40013800
 80018dc:	40021000 	.word	0x40021000
 80018e0:	50000800 	.word	0x50000800
 80018e4:	50000400 	.word	0x50000400
 80018e8:	200000d0 	.word	0x200000d0
 80018ec:	40020008 	.word	0x40020008
 80018f0:	2000012c 	.word	0x2000012c
 80018f4:	4002001c 	.word	0x4002001c

080018f8 <HAL_UART_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
{
 80018f8:	b580      	push	{r7, lr}
 80018fa:	b082      	sub	sp, #8
 80018fc:	af00      	add	r7, sp, #0
 80018fe:	6078      	str	r0, [r7, #4]
  if(huart->Instance==USART1)
 8001900:	687b      	ldr	r3, [r7, #4]
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	4a17      	ldr	r2, [pc, #92]	@ (8001964 <HAL_UART_MspDeInit+0x6c>)
 8001906:	4293      	cmp	r3, r2
 8001908:	d127      	bne.n	800195a <HAL_UART_MspDeInit+0x62>
  {
  /* USER CODE BEGIN USART1_MspDeInit 0 */

  /* USER CODE END USART1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_USART1_CLK_DISABLE();
 800190a:	4b17      	ldr	r3, [pc, #92]	@ (8001968 <HAL_UART_MspDeInit+0x70>)
 800190c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800190e:	4b16      	ldr	r3, [pc, #88]	@ (8001968 <HAL_UART_MspDeInit+0x70>)
 8001910:	4916      	ldr	r1, [pc, #88]	@ (800196c <HAL_UART_MspDeInit+0x74>)
 8001912:	400a      	ands	r2, r1
 8001914:	641a      	str	r2, [r3, #64]	@ 0x40
    /**USART1 GPIO Configuration
    PC14-OSCX_IN(PC14)     ------> USART1_TX
    PB2     ------> USART1_RX
    PA12 [PA10]     ------> USART1_DE
    */
    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_14);
 8001916:	2380      	movs	r3, #128	@ 0x80
 8001918:	01db      	lsls	r3, r3, #7
 800191a:	4a15      	ldr	r2, [pc, #84]	@ (8001970 <HAL_UART_MspDeInit+0x78>)
 800191c:	0019      	movs	r1, r3
 800191e:	0010      	movs	r0, r2
 8001920:	f000 ff72 	bl	8002808 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 8001924:	4b13      	ldr	r3, [pc, #76]	@ (8001974 <HAL_UART_MspDeInit+0x7c>)
 8001926:	2104      	movs	r1, #4
 8001928:	0018      	movs	r0, r3
 800192a:	f000 ff6d 	bl	8002808 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_12);
 800192e:	2380      	movs	r3, #128	@ 0x80
 8001930:	015a      	lsls	r2, r3, #5
 8001932:	23a0      	movs	r3, #160	@ 0xa0
 8001934:	05db      	lsls	r3, r3, #23
 8001936:	0011      	movs	r1, r2
 8001938:	0018      	movs	r0, r3
 800193a:	f000 ff65 	bl	8002808 <HAL_GPIO_DeInit>

    /* USART1 DMA DeInit */
    HAL_DMA_DeInit(huart->hdmarx);
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	2280      	movs	r2, #128	@ 0x80
 8001942:	589b      	ldr	r3, [r3, r2]
 8001944:	0018      	movs	r0, r3
 8001946:	f000 fac5 	bl	8001ed4 <HAL_DMA_DeInit>
    HAL_DMA_DeInit(huart->hdmatx);
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800194e:	0018      	movs	r0, r3
 8001950:	f000 fac0 	bl	8001ed4 <HAL_DMA_DeInit>

    /* USART1 interrupt DeInit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
 8001954:	201b      	movs	r0, #27
 8001956:	f000 fa16 	bl	8001d86 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }

}
 800195a:	46c0      	nop			@ (mov r8, r8)
 800195c:	46bd      	mov	sp, r7
 800195e:	b002      	add	sp, #8
 8001960:	bd80      	pop	{r7, pc}
 8001962:	46c0      	nop			@ (mov r8, r8)
 8001964:	40013800 	.word	0x40013800
 8001968:	40021000 	.word	0x40021000
 800196c:	ffffbfff 	.word	0xffffbfff
 8001970:	50000800 	.word	0x50000800
 8001974:	50000400 	.word	0x50000400

08001978 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001978:	b580      	push	{r7, lr}
 800197a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800197c:	46c0      	nop			@ (mov r8, r8)
 800197e:	e7fd      	b.n	800197c <NMI_Handler+0x4>

08001980 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001980:	b580      	push	{r7, lr}
 8001982:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001984:	46c0      	nop			@ (mov r8, r8)
 8001986:	e7fd      	b.n	8001984 <HardFault_Handler+0x4>

08001988 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001988:	b580      	push	{r7, lr}
 800198a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800198c:	46c0      	nop			@ (mov r8, r8)
 800198e:	46bd      	mov	sp, r7
 8001990:	bd80      	pop	{r7, pc}

08001992 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001992:	b580      	push	{r7, lr}
 8001994:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001996:	46c0      	nop			@ (mov r8, r8)
 8001998:	46bd      	mov	sp, r7
 800199a:	bd80      	pop	{r7, pc}

0800199c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800199c:	b580      	push	{r7, lr}
 800199e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80019a0:	f000 f8be 	bl	8001b20 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80019a4:	46c0      	nop			@ (mov r8, r8)
 80019a6:	46bd      	mov	sp, r7
 80019a8:	bd80      	pop	{r7, pc}
	...

080019ac <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 80019ac:	b580      	push	{r7, lr}
 80019ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 80019b0:	4b03      	ldr	r3, [pc, #12]	@ (80019c0 <DMA1_Channel1_IRQHandler+0x14>)
 80019b2:	0018      	movs	r0, r3
 80019b4:	f000 fc6a 	bl	800228c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 80019b8:	46c0      	nop			@ (mov r8, r8)
 80019ba:	46bd      	mov	sp, r7
 80019bc:	bd80      	pop	{r7, pc}
 80019be:	46c0      	nop			@ (mov r8, r8)
 80019c0:	200000d0 	.word	0x200000d0

080019c4 <DMA1_Channel2_3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 2 and channel 3 interrupts.
  */
void DMA1_Channel2_3_IRQHandler(void)
{
 80019c4:	b580      	push	{r7, lr}
 80019c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */

  /* USER CODE END DMA1_Channel2_3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 80019c8:	4b03      	ldr	r3, [pc, #12]	@ (80019d8 <DMA1_Channel2_3_IRQHandler+0x14>)
 80019ca:	0018      	movs	r0, r3
 80019cc:	f000 fc5e 	bl	800228c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */

  /* USER CODE END DMA1_Channel2_3_IRQn 1 */
}
 80019d0:	46c0      	nop			@ (mov r8, r8)
 80019d2:	46bd      	mov	sp, r7
 80019d4:	bd80      	pop	{r7, pc}
 80019d6:	46c0      	nop			@ (mov r8, r8)
 80019d8:	2000012c 	.word	0x2000012c

080019dc <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 interrupt.
  */
void USART1_IRQHandler(void)
{
 80019dc:	b580      	push	{r7, lr}
 80019de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80019e0:	4b03      	ldr	r3, [pc, #12]	@ (80019f0 <USART1_IRQHandler+0x14>)
 80019e2:	0018      	movs	r0, r3
 80019e4:	f001 ff7c 	bl	80038e0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80019e8:	46c0      	nop			@ (mov r8, r8)
 80019ea:	46bd      	mov	sp, r7
 80019ec:	bd80      	pop	{r7, pc}
 80019ee:	46c0      	nop			@ (mov r8, r8)
 80019f0:	2000003c 	.word	0x2000003c

080019f4 <SystemInit>:
 80019f4:	b580      	push	{r7, lr}
 80019f6:	af00      	add	r7, sp, #0
 80019f8:	4b03      	ldr	r3, [pc, #12]	@ (8001a08 <SystemInit+0x14>)
 80019fa:	2280      	movs	r2, #128	@ 0x80
 80019fc:	0512      	lsls	r2, r2, #20
 80019fe:	609a      	str	r2, [r3, #8]
 8001a00:	46c0      	nop			@ (mov r8, r8)
 8001a02:	46bd      	mov	sp, r7
 8001a04:	bd80      	pop	{r7, pc}
 8001a06:	46c0      	nop			@ (mov r8, r8)
 8001a08:	e000ed00 	.word	0xe000ed00

08001a0c <Reset_Handler>:
 8001a0c:	480d      	ldr	r0, [pc, #52]	@ (8001a44 <LoopForever+0x2>)
 8001a0e:	4685      	mov	sp, r0
 8001a10:	f7ff fff0 	bl	80019f4 <SystemInit>
 8001a14:	2100      	movs	r1, #0
 8001a16:	e003      	b.n	8001a20 <LoopCopyDataInit>

08001a18 <CopyDataInit>:
 8001a18:	4b0b      	ldr	r3, [pc, #44]	@ (8001a48 <LoopForever+0x6>)
 8001a1a:	585b      	ldr	r3, [r3, r1]
 8001a1c:	5043      	str	r3, [r0, r1]
 8001a1e:	3104      	adds	r1, #4

08001a20 <LoopCopyDataInit>:
 8001a20:	480a      	ldr	r0, [pc, #40]	@ (8001a4c <LoopForever+0xa>)
 8001a22:	4b0b      	ldr	r3, [pc, #44]	@ (8001a50 <LoopForever+0xe>)
 8001a24:	1842      	adds	r2, r0, r1
 8001a26:	429a      	cmp	r2, r3
 8001a28:	d3f6      	bcc.n	8001a18 <CopyDataInit>
 8001a2a:	4a0a      	ldr	r2, [pc, #40]	@ (8001a54 <LoopForever+0x12>)
 8001a2c:	e002      	b.n	8001a34 <LoopFillZerobss>

08001a2e <FillZerobss>:
 8001a2e:	2300      	movs	r3, #0
 8001a30:	6013      	str	r3, [r2, #0]
 8001a32:	3204      	adds	r2, #4

08001a34 <LoopFillZerobss>:
 8001a34:	4b08      	ldr	r3, [pc, #32]	@ (8001a58 <LoopForever+0x16>)
 8001a36:	429a      	cmp	r2, r3
 8001a38:	d3f9      	bcc.n	8001a2e <FillZerobss>
 8001a3a:	f003 faf7 	bl	800502c <__libc_init_array>
 8001a3e:	f7fe fcd9 	bl	80003f4 <main>

08001a42 <LoopForever>:
 8001a42:	e7fe      	b.n	8001a42 <LoopForever>
 8001a44:	20006000 	.word	0x20006000
 8001a48:	08005358 	.word	0x08005358
 8001a4c:	20000000 	.word	0x20000000
 8001a50:	20000020 	.word	0x20000020
 8001a54:	20000020 	.word	0x20000020
 8001a58:	200003a4 	.word	0x200003a4

08001a5c <ADC1_IRQHandler>:
 8001a5c:	e7fe      	b.n	8001a5c <ADC1_IRQHandler>

08001a5e <HAL_Init>:
 8001a5e:	b580      	push	{r7, lr}
 8001a60:	b082      	sub	sp, #8
 8001a62:	af00      	add	r7, sp, #0
 8001a64:	1dfb      	adds	r3, r7, #7
 8001a66:	2200      	movs	r2, #0
 8001a68:	701a      	strb	r2, [r3, #0]
 8001a6a:	2003      	movs	r0, #3
 8001a6c:	f000 f80e 	bl	8001a8c <HAL_InitTick>
 8001a70:	1e03      	subs	r3, r0, #0
 8001a72:	d003      	beq.n	8001a7c <HAL_Init+0x1e>
 8001a74:	1dfb      	adds	r3, r7, #7
 8001a76:	2201      	movs	r2, #1
 8001a78:	701a      	strb	r2, [r3, #0]
 8001a7a:	e001      	b.n	8001a80 <HAL_Init+0x22>
 8001a7c:	f7ff fe08 	bl	8001690 <HAL_MspInit>
 8001a80:	1dfb      	adds	r3, r7, #7
 8001a82:	781b      	ldrb	r3, [r3, #0]
 8001a84:	0018      	movs	r0, r3
 8001a86:	46bd      	mov	sp, r7
 8001a88:	b002      	add	sp, #8
 8001a8a:	bd80      	pop	{r7, pc}

08001a8c <HAL_InitTick>:
 8001a8c:	b590      	push	{r4, r7, lr}
 8001a8e:	b085      	sub	sp, #20
 8001a90:	af00      	add	r7, sp, #0
 8001a92:	6078      	str	r0, [r7, #4]
 8001a94:	230f      	movs	r3, #15
 8001a96:	18fb      	adds	r3, r7, r3
 8001a98:	2200      	movs	r2, #0
 8001a9a:	701a      	strb	r2, [r3, #0]
 8001a9c:	4b1d      	ldr	r3, [pc, #116]	@ (8001b14 <HAL_InitTick+0x88>)
 8001a9e:	781b      	ldrb	r3, [r3, #0]
 8001aa0:	2b00      	cmp	r3, #0
 8001aa2:	d02b      	beq.n	8001afc <HAL_InitTick+0x70>
 8001aa4:	4b1c      	ldr	r3, [pc, #112]	@ (8001b18 <HAL_InitTick+0x8c>)
 8001aa6:	681c      	ldr	r4, [r3, #0]
 8001aa8:	4b1a      	ldr	r3, [pc, #104]	@ (8001b14 <HAL_InitTick+0x88>)
 8001aaa:	781b      	ldrb	r3, [r3, #0]
 8001aac:	0019      	movs	r1, r3
 8001aae:	23fa      	movs	r3, #250	@ 0xfa
 8001ab0:	0098      	lsls	r0, r3, #2
 8001ab2:	f7fe fb29 	bl	8000108 <__udivsi3>
 8001ab6:	0003      	movs	r3, r0
 8001ab8:	0019      	movs	r1, r3
 8001aba:	0020      	movs	r0, r4
 8001abc:	f7fe fb24 	bl	8000108 <__udivsi3>
 8001ac0:	0003      	movs	r3, r0
 8001ac2:	0018      	movs	r0, r3
 8001ac4:	f000 f96f 	bl	8001da6 <HAL_SYSTICK_Config>
 8001ac8:	1e03      	subs	r3, r0, #0
 8001aca:	d112      	bne.n	8001af2 <HAL_InitTick+0x66>
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	2b03      	cmp	r3, #3
 8001ad0:	d80a      	bhi.n	8001ae8 <HAL_InitTick+0x5c>
 8001ad2:	6879      	ldr	r1, [r7, #4]
 8001ad4:	2301      	movs	r3, #1
 8001ad6:	425b      	negs	r3, r3
 8001ad8:	2200      	movs	r2, #0
 8001ada:	0018      	movs	r0, r3
 8001adc:	f000 f92e 	bl	8001d3c <HAL_NVIC_SetPriority>
 8001ae0:	4b0e      	ldr	r3, [pc, #56]	@ (8001b1c <HAL_InitTick+0x90>)
 8001ae2:	687a      	ldr	r2, [r7, #4]
 8001ae4:	601a      	str	r2, [r3, #0]
 8001ae6:	e00d      	b.n	8001b04 <HAL_InitTick+0x78>
 8001ae8:	230f      	movs	r3, #15
 8001aea:	18fb      	adds	r3, r7, r3
 8001aec:	2201      	movs	r2, #1
 8001aee:	701a      	strb	r2, [r3, #0]
 8001af0:	e008      	b.n	8001b04 <HAL_InitTick+0x78>
 8001af2:	230f      	movs	r3, #15
 8001af4:	18fb      	adds	r3, r7, r3
 8001af6:	2201      	movs	r2, #1
 8001af8:	701a      	strb	r2, [r3, #0]
 8001afa:	e003      	b.n	8001b04 <HAL_InitTick+0x78>
 8001afc:	230f      	movs	r3, #15
 8001afe:	18fb      	adds	r3, r7, r3
 8001b00:	2201      	movs	r2, #1
 8001b02:	701a      	strb	r2, [r3, #0]
 8001b04:	230f      	movs	r3, #15
 8001b06:	18fb      	adds	r3, r7, r3
 8001b08:	781b      	ldrb	r3, [r3, #0]
 8001b0a:	0018      	movs	r0, r3
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	b005      	add	sp, #20
 8001b10:	bd90      	pop	{r4, r7, pc}
 8001b12:	46c0      	nop			@ (mov r8, r8)
 8001b14:	2000001c 	.word	0x2000001c
 8001b18:	20000014 	.word	0x20000014
 8001b1c:	20000018 	.word	0x20000018

08001b20 <HAL_IncTick>:
 8001b20:	b580      	push	{r7, lr}
 8001b22:	af00      	add	r7, sp, #0
 8001b24:	4b05      	ldr	r3, [pc, #20]	@ (8001b3c <HAL_IncTick+0x1c>)
 8001b26:	781b      	ldrb	r3, [r3, #0]
 8001b28:	001a      	movs	r2, r3
 8001b2a:	4b05      	ldr	r3, [pc, #20]	@ (8001b40 <HAL_IncTick+0x20>)
 8001b2c:	681b      	ldr	r3, [r3, #0]
 8001b2e:	18d2      	adds	r2, r2, r3
 8001b30:	4b03      	ldr	r3, [pc, #12]	@ (8001b40 <HAL_IncTick+0x20>)
 8001b32:	601a      	str	r2, [r3, #0]
 8001b34:	46c0      	nop			@ (mov r8, r8)
 8001b36:	46bd      	mov	sp, r7
 8001b38:	bd80      	pop	{r7, pc}
 8001b3a:	46c0      	nop			@ (mov r8, r8)
 8001b3c:	2000001c 	.word	0x2000001c
 8001b40:	200003a0 	.word	0x200003a0

08001b44 <HAL_GetTick>:
 8001b44:	b580      	push	{r7, lr}
 8001b46:	af00      	add	r7, sp, #0
 8001b48:	4b02      	ldr	r3, [pc, #8]	@ (8001b54 <HAL_GetTick+0x10>)
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	0018      	movs	r0, r3
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	bd80      	pop	{r7, pc}
 8001b52:	46c0      	nop			@ (mov r8, r8)
 8001b54:	200003a0 	.word	0x200003a0

08001b58 <HAL_Delay>:
 8001b58:	b580      	push	{r7, lr}
 8001b5a:	b084      	sub	sp, #16
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	6078      	str	r0, [r7, #4]
 8001b60:	f7ff fff0 	bl	8001b44 <HAL_GetTick>
 8001b64:	0003      	movs	r3, r0
 8001b66:	60bb      	str	r3, [r7, #8]
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	60fb      	str	r3, [r7, #12]
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	3301      	adds	r3, #1
 8001b70:	d005      	beq.n	8001b7e <HAL_Delay+0x26>
 8001b72:	4b0a      	ldr	r3, [pc, #40]	@ (8001b9c <HAL_Delay+0x44>)
 8001b74:	781b      	ldrb	r3, [r3, #0]
 8001b76:	001a      	movs	r2, r3
 8001b78:	68fb      	ldr	r3, [r7, #12]
 8001b7a:	189b      	adds	r3, r3, r2
 8001b7c:	60fb      	str	r3, [r7, #12]
 8001b7e:	46c0      	nop			@ (mov r8, r8)
 8001b80:	f7ff ffe0 	bl	8001b44 <HAL_GetTick>
 8001b84:	0002      	movs	r2, r0
 8001b86:	68bb      	ldr	r3, [r7, #8]
 8001b88:	1ad3      	subs	r3, r2, r3
 8001b8a:	68fa      	ldr	r2, [r7, #12]
 8001b8c:	429a      	cmp	r2, r3
 8001b8e:	d8f7      	bhi.n	8001b80 <HAL_Delay+0x28>
 8001b90:	46c0      	nop			@ (mov r8, r8)
 8001b92:	46c0      	nop			@ (mov r8, r8)
 8001b94:	46bd      	mov	sp, r7
 8001b96:	b004      	add	sp, #16
 8001b98:	bd80      	pop	{r7, pc}
 8001b9a:	46c0      	nop			@ (mov r8, r8)
 8001b9c:	2000001c 	.word	0x2000001c

08001ba0 <__NVIC_EnableIRQ>:
 8001ba0:	b580      	push	{r7, lr}
 8001ba2:	b082      	sub	sp, #8
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	0002      	movs	r2, r0
 8001ba8:	1dfb      	adds	r3, r7, #7
 8001baa:	701a      	strb	r2, [r3, #0]
 8001bac:	1dfb      	adds	r3, r7, #7
 8001bae:	781b      	ldrb	r3, [r3, #0]
 8001bb0:	2b7f      	cmp	r3, #127	@ 0x7f
 8001bb2:	d809      	bhi.n	8001bc8 <__NVIC_EnableIRQ+0x28>
 8001bb4:	1dfb      	adds	r3, r7, #7
 8001bb6:	781b      	ldrb	r3, [r3, #0]
 8001bb8:	001a      	movs	r2, r3
 8001bba:	231f      	movs	r3, #31
 8001bbc:	401a      	ands	r2, r3
 8001bbe:	4b04      	ldr	r3, [pc, #16]	@ (8001bd0 <__NVIC_EnableIRQ+0x30>)
 8001bc0:	2101      	movs	r1, #1
 8001bc2:	4091      	lsls	r1, r2
 8001bc4:	000a      	movs	r2, r1
 8001bc6:	601a      	str	r2, [r3, #0]
 8001bc8:	46c0      	nop			@ (mov r8, r8)
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	b002      	add	sp, #8
 8001bce:	bd80      	pop	{r7, pc}
 8001bd0:	e000e100 	.word	0xe000e100

08001bd4 <__NVIC_DisableIRQ>:
 8001bd4:	b580      	push	{r7, lr}
 8001bd6:	b082      	sub	sp, #8
 8001bd8:	af00      	add	r7, sp, #0
 8001bda:	0002      	movs	r2, r0
 8001bdc:	1dfb      	adds	r3, r7, #7
 8001bde:	701a      	strb	r2, [r3, #0]
 8001be0:	1dfb      	adds	r3, r7, #7
 8001be2:	781b      	ldrb	r3, [r3, #0]
 8001be4:	2b7f      	cmp	r3, #127	@ 0x7f
 8001be6:	d810      	bhi.n	8001c0a <__NVIC_DisableIRQ+0x36>
 8001be8:	1dfb      	adds	r3, r7, #7
 8001bea:	781b      	ldrb	r3, [r3, #0]
 8001bec:	001a      	movs	r2, r3
 8001bee:	231f      	movs	r3, #31
 8001bf0:	4013      	ands	r3, r2
 8001bf2:	4908      	ldr	r1, [pc, #32]	@ (8001c14 <__NVIC_DisableIRQ+0x40>)
 8001bf4:	2201      	movs	r2, #1
 8001bf6:	409a      	lsls	r2, r3
 8001bf8:	0013      	movs	r3, r2
 8001bfa:	2280      	movs	r2, #128	@ 0x80
 8001bfc:	508b      	str	r3, [r1, r2]
 8001bfe:	f3bf 8f4f 	dsb	sy
 8001c02:	46c0      	nop			@ (mov r8, r8)
 8001c04:	f3bf 8f6f 	isb	sy
 8001c08:	46c0      	nop			@ (mov r8, r8)
 8001c0a:	46c0      	nop			@ (mov r8, r8)
 8001c0c:	46bd      	mov	sp, r7
 8001c0e:	b002      	add	sp, #8
 8001c10:	bd80      	pop	{r7, pc}
 8001c12:	46c0      	nop			@ (mov r8, r8)
 8001c14:	e000e100 	.word	0xe000e100

08001c18 <__NVIC_SetPriority>:
 8001c18:	b590      	push	{r4, r7, lr}
 8001c1a:	b083      	sub	sp, #12
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	0002      	movs	r2, r0
 8001c20:	6039      	str	r1, [r7, #0]
 8001c22:	1dfb      	adds	r3, r7, #7
 8001c24:	701a      	strb	r2, [r3, #0]
 8001c26:	1dfb      	adds	r3, r7, #7
 8001c28:	781b      	ldrb	r3, [r3, #0]
 8001c2a:	2b7f      	cmp	r3, #127	@ 0x7f
 8001c2c:	d828      	bhi.n	8001c80 <__NVIC_SetPriority+0x68>
 8001c2e:	4a2f      	ldr	r2, [pc, #188]	@ (8001cec <__NVIC_SetPriority+0xd4>)
 8001c30:	1dfb      	adds	r3, r7, #7
 8001c32:	781b      	ldrb	r3, [r3, #0]
 8001c34:	b25b      	sxtb	r3, r3
 8001c36:	089b      	lsrs	r3, r3, #2
 8001c38:	33c0      	adds	r3, #192	@ 0xc0
 8001c3a:	009b      	lsls	r3, r3, #2
 8001c3c:	589b      	ldr	r3, [r3, r2]
 8001c3e:	1dfa      	adds	r2, r7, #7
 8001c40:	7812      	ldrb	r2, [r2, #0]
 8001c42:	0011      	movs	r1, r2
 8001c44:	2203      	movs	r2, #3
 8001c46:	400a      	ands	r2, r1
 8001c48:	00d2      	lsls	r2, r2, #3
 8001c4a:	21ff      	movs	r1, #255	@ 0xff
 8001c4c:	4091      	lsls	r1, r2
 8001c4e:	000a      	movs	r2, r1
 8001c50:	43d2      	mvns	r2, r2
 8001c52:	401a      	ands	r2, r3
 8001c54:	0011      	movs	r1, r2
 8001c56:	683b      	ldr	r3, [r7, #0]
 8001c58:	019b      	lsls	r3, r3, #6
 8001c5a:	22ff      	movs	r2, #255	@ 0xff
 8001c5c:	401a      	ands	r2, r3
 8001c5e:	1dfb      	adds	r3, r7, #7
 8001c60:	781b      	ldrb	r3, [r3, #0]
 8001c62:	0018      	movs	r0, r3
 8001c64:	2303      	movs	r3, #3
 8001c66:	4003      	ands	r3, r0
 8001c68:	00db      	lsls	r3, r3, #3
 8001c6a:	409a      	lsls	r2, r3
 8001c6c:	481f      	ldr	r0, [pc, #124]	@ (8001cec <__NVIC_SetPriority+0xd4>)
 8001c6e:	1dfb      	adds	r3, r7, #7
 8001c70:	781b      	ldrb	r3, [r3, #0]
 8001c72:	b25b      	sxtb	r3, r3
 8001c74:	089b      	lsrs	r3, r3, #2
 8001c76:	430a      	orrs	r2, r1
 8001c78:	33c0      	adds	r3, #192	@ 0xc0
 8001c7a:	009b      	lsls	r3, r3, #2
 8001c7c:	501a      	str	r2, [r3, r0]
 8001c7e:	e031      	b.n	8001ce4 <__NVIC_SetPriority+0xcc>
 8001c80:	4a1b      	ldr	r2, [pc, #108]	@ (8001cf0 <__NVIC_SetPriority+0xd8>)
 8001c82:	1dfb      	adds	r3, r7, #7
 8001c84:	781b      	ldrb	r3, [r3, #0]
 8001c86:	0019      	movs	r1, r3
 8001c88:	230f      	movs	r3, #15
 8001c8a:	400b      	ands	r3, r1
 8001c8c:	3b08      	subs	r3, #8
 8001c8e:	089b      	lsrs	r3, r3, #2
 8001c90:	3306      	adds	r3, #6
 8001c92:	009b      	lsls	r3, r3, #2
 8001c94:	18d3      	adds	r3, r2, r3
 8001c96:	3304      	adds	r3, #4
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	1dfa      	adds	r2, r7, #7
 8001c9c:	7812      	ldrb	r2, [r2, #0]
 8001c9e:	0011      	movs	r1, r2
 8001ca0:	2203      	movs	r2, #3
 8001ca2:	400a      	ands	r2, r1
 8001ca4:	00d2      	lsls	r2, r2, #3
 8001ca6:	21ff      	movs	r1, #255	@ 0xff
 8001ca8:	4091      	lsls	r1, r2
 8001caa:	000a      	movs	r2, r1
 8001cac:	43d2      	mvns	r2, r2
 8001cae:	401a      	ands	r2, r3
 8001cb0:	0011      	movs	r1, r2
 8001cb2:	683b      	ldr	r3, [r7, #0]
 8001cb4:	019b      	lsls	r3, r3, #6
 8001cb6:	22ff      	movs	r2, #255	@ 0xff
 8001cb8:	401a      	ands	r2, r3
 8001cba:	1dfb      	adds	r3, r7, #7
 8001cbc:	781b      	ldrb	r3, [r3, #0]
 8001cbe:	0018      	movs	r0, r3
 8001cc0:	2303      	movs	r3, #3
 8001cc2:	4003      	ands	r3, r0
 8001cc4:	00db      	lsls	r3, r3, #3
 8001cc6:	409a      	lsls	r2, r3
 8001cc8:	4809      	ldr	r0, [pc, #36]	@ (8001cf0 <__NVIC_SetPriority+0xd8>)
 8001cca:	1dfb      	adds	r3, r7, #7
 8001ccc:	781b      	ldrb	r3, [r3, #0]
 8001cce:	001c      	movs	r4, r3
 8001cd0:	230f      	movs	r3, #15
 8001cd2:	4023      	ands	r3, r4
 8001cd4:	3b08      	subs	r3, #8
 8001cd6:	089b      	lsrs	r3, r3, #2
 8001cd8:	430a      	orrs	r2, r1
 8001cda:	3306      	adds	r3, #6
 8001cdc:	009b      	lsls	r3, r3, #2
 8001cde:	18c3      	adds	r3, r0, r3
 8001ce0:	3304      	adds	r3, #4
 8001ce2:	601a      	str	r2, [r3, #0]
 8001ce4:	46c0      	nop			@ (mov r8, r8)
 8001ce6:	46bd      	mov	sp, r7
 8001ce8:	b003      	add	sp, #12
 8001cea:	bd90      	pop	{r4, r7, pc}
 8001cec:	e000e100 	.word	0xe000e100
 8001cf0:	e000ed00 	.word	0xe000ed00

08001cf4 <SysTick_Config>:
 8001cf4:	b580      	push	{r7, lr}
 8001cf6:	b082      	sub	sp, #8
 8001cf8:	af00      	add	r7, sp, #0
 8001cfa:	6078      	str	r0, [r7, #4]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	1e5a      	subs	r2, r3, #1
 8001d00:	2380      	movs	r3, #128	@ 0x80
 8001d02:	045b      	lsls	r3, r3, #17
 8001d04:	429a      	cmp	r2, r3
 8001d06:	d301      	bcc.n	8001d0c <SysTick_Config+0x18>
 8001d08:	2301      	movs	r3, #1
 8001d0a:	e010      	b.n	8001d2e <SysTick_Config+0x3a>
 8001d0c:	4b0a      	ldr	r3, [pc, #40]	@ (8001d38 <SysTick_Config+0x44>)
 8001d0e:	687a      	ldr	r2, [r7, #4]
 8001d10:	3a01      	subs	r2, #1
 8001d12:	605a      	str	r2, [r3, #4]
 8001d14:	2301      	movs	r3, #1
 8001d16:	425b      	negs	r3, r3
 8001d18:	2103      	movs	r1, #3
 8001d1a:	0018      	movs	r0, r3
 8001d1c:	f7ff ff7c 	bl	8001c18 <__NVIC_SetPriority>
 8001d20:	4b05      	ldr	r3, [pc, #20]	@ (8001d38 <SysTick_Config+0x44>)
 8001d22:	2200      	movs	r2, #0
 8001d24:	609a      	str	r2, [r3, #8]
 8001d26:	4b04      	ldr	r3, [pc, #16]	@ (8001d38 <SysTick_Config+0x44>)
 8001d28:	2207      	movs	r2, #7
 8001d2a:	601a      	str	r2, [r3, #0]
 8001d2c:	2300      	movs	r3, #0
 8001d2e:	0018      	movs	r0, r3
 8001d30:	46bd      	mov	sp, r7
 8001d32:	b002      	add	sp, #8
 8001d34:	bd80      	pop	{r7, pc}
 8001d36:	46c0      	nop			@ (mov r8, r8)
 8001d38:	e000e010 	.word	0xe000e010

08001d3c <HAL_NVIC_SetPriority>:
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	b084      	sub	sp, #16
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	60b9      	str	r1, [r7, #8]
 8001d44:	607a      	str	r2, [r7, #4]
 8001d46:	210f      	movs	r1, #15
 8001d48:	187b      	adds	r3, r7, r1
 8001d4a:	1c02      	adds	r2, r0, #0
 8001d4c:	701a      	strb	r2, [r3, #0]
 8001d4e:	68ba      	ldr	r2, [r7, #8]
 8001d50:	187b      	adds	r3, r7, r1
 8001d52:	781b      	ldrb	r3, [r3, #0]
 8001d54:	b25b      	sxtb	r3, r3
 8001d56:	0011      	movs	r1, r2
 8001d58:	0018      	movs	r0, r3
 8001d5a:	f7ff ff5d 	bl	8001c18 <__NVIC_SetPriority>
 8001d5e:	46c0      	nop			@ (mov r8, r8)
 8001d60:	46bd      	mov	sp, r7
 8001d62:	b004      	add	sp, #16
 8001d64:	bd80      	pop	{r7, pc}

08001d66 <HAL_NVIC_EnableIRQ>:
 8001d66:	b580      	push	{r7, lr}
 8001d68:	b082      	sub	sp, #8
 8001d6a:	af00      	add	r7, sp, #0
 8001d6c:	0002      	movs	r2, r0
 8001d6e:	1dfb      	adds	r3, r7, #7
 8001d70:	701a      	strb	r2, [r3, #0]
 8001d72:	1dfb      	adds	r3, r7, #7
 8001d74:	781b      	ldrb	r3, [r3, #0]
 8001d76:	b25b      	sxtb	r3, r3
 8001d78:	0018      	movs	r0, r3
 8001d7a:	f7ff ff11 	bl	8001ba0 <__NVIC_EnableIRQ>
 8001d7e:	46c0      	nop			@ (mov r8, r8)
 8001d80:	46bd      	mov	sp, r7
 8001d82:	b002      	add	sp, #8
 8001d84:	bd80      	pop	{r7, pc}

08001d86 <HAL_NVIC_DisableIRQ>:
 8001d86:	b580      	push	{r7, lr}
 8001d88:	b082      	sub	sp, #8
 8001d8a:	af00      	add	r7, sp, #0
 8001d8c:	0002      	movs	r2, r0
 8001d8e:	1dfb      	adds	r3, r7, #7
 8001d90:	701a      	strb	r2, [r3, #0]
 8001d92:	1dfb      	adds	r3, r7, #7
 8001d94:	781b      	ldrb	r3, [r3, #0]
 8001d96:	b25b      	sxtb	r3, r3
 8001d98:	0018      	movs	r0, r3
 8001d9a:	f7ff ff1b 	bl	8001bd4 <__NVIC_DisableIRQ>
 8001d9e:	46c0      	nop			@ (mov r8, r8)
 8001da0:	46bd      	mov	sp, r7
 8001da2:	b002      	add	sp, #8
 8001da4:	bd80      	pop	{r7, pc}

08001da6 <HAL_SYSTICK_Config>:
 8001da6:	b580      	push	{r7, lr}
 8001da8:	b082      	sub	sp, #8
 8001daa:	af00      	add	r7, sp, #0
 8001dac:	6078      	str	r0, [r7, #4]
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	0018      	movs	r0, r3
 8001db2:	f7ff ff9f 	bl	8001cf4 <SysTick_Config>
 8001db6:	0003      	movs	r3, r0
 8001db8:	0018      	movs	r0, r3
 8001dba:	46bd      	mov	sp, r7
 8001dbc:	b002      	add	sp, #8
 8001dbe:	bd80      	pop	{r7, pc}

08001dc0 <HAL_DMA_Init>:
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	b082      	sub	sp, #8
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d101      	bne.n	8001dd2 <HAL_DMA_Init+0x12>
 8001dce:	2301      	movs	r3, #1
 8001dd0:	e077      	b.n	8001ec2 <HAL_DMA_Init+0x102>
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	4a3d      	ldr	r2, [pc, #244]	@ (8001ecc <HAL_DMA_Init+0x10c>)
 8001dd8:	4694      	mov	ip, r2
 8001dda:	4463      	add	r3, ip
 8001ddc:	2114      	movs	r1, #20
 8001dde:	0018      	movs	r0, r3
 8001de0:	f7fe f992 	bl	8000108 <__udivsi3>
 8001de4:	0003      	movs	r3, r0
 8001de6:	009a      	lsls	r2, r3, #2
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	641a      	str	r2, [r3, #64]	@ 0x40
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	2225      	movs	r2, #37	@ 0x25
 8001df0:	2102      	movs	r1, #2
 8001df2:	5499      	strb	r1, [r3, r2]
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	681a      	ldr	r2, [r3, #0]
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	681b      	ldr	r3, [r3, #0]
 8001dfe:	4934      	ldr	r1, [pc, #208]	@ (8001ed0 <HAL_DMA_Init+0x110>)
 8001e00:	400a      	ands	r2, r1
 8001e02:	601a      	str	r2, [r3, #0]
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	6819      	ldr	r1, [r3, #0]
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	689a      	ldr	r2, [r3, #8]
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	68db      	ldr	r3, [r3, #12]
 8001e12:	431a      	orrs	r2, r3
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	691b      	ldr	r3, [r3, #16]
 8001e18:	431a      	orrs	r2, r3
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	695b      	ldr	r3, [r3, #20]
 8001e1e:	431a      	orrs	r2, r3
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	699b      	ldr	r3, [r3, #24]
 8001e24:	431a      	orrs	r2, r3
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	69db      	ldr	r3, [r3, #28]
 8001e2a:	431a      	orrs	r2, r3
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	6a1b      	ldr	r3, [r3, #32]
 8001e30:	431a      	orrs	r2, r3
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	430a      	orrs	r2, r1
 8001e38:	601a      	str	r2, [r3, #0]
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	0018      	movs	r0, r3
 8001e3e:	f000 fb21 	bl	8002484 <DMA_CalcDMAMUXChannelBaseAndMask>
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	689a      	ldr	r2, [r3, #8]
 8001e46:	2380      	movs	r3, #128	@ 0x80
 8001e48:	01db      	lsls	r3, r3, #7
 8001e4a:	429a      	cmp	r2, r3
 8001e4c:	d102      	bne.n	8001e54 <HAL_DMA_Init+0x94>
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	2200      	movs	r2, #0
 8001e52:	605a      	str	r2, [r3, #4]
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	685a      	ldr	r2, [r3, #4]
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001e5c:	21ff      	movs	r1, #255	@ 0xff
 8001e5e:	400a      	ands	r2, r1
 8001e60:	601a      	str	r2, [r3, #0]
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001e66:	687a      	ldr	r2, [r7, #4]
 8001e68:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8001e6a:	605a      	str	r2, [r3, #4]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	685b      	ldr	r3, [r3, #4]
 8001e70:	2b00      	cmp	r3, #0
 8001e72:	d011      	beq.n	8001e98 <HAL_DMA_Init+0xd8>
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	685b      	ldr	r3, [r3, #4]
 8001e78:	2b04      	cmp	r3, #4
 8001e7a:	d80d      	bhi.n	8001e98 <HAL_DMA_Init+0xd8>
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	0018      	movs	r0, r3
 8001e80:	f000 fb2c 	bl	80024dc <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001e88:	2200      	movs	r2, #0
 8001e8a:	601a      	str	r2, [r3, #0]
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001e90:	687a      	ldr	r2, [r7, #4]
 8001e92:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8001e94:	605a      	str	r2, [r3, #4]
 8001e96:	e008      	b.n	8001eaa <HAL_DMA_Init+0xea>
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	2200      	movs	r2, #0
 8001e9c:	651a      	str	r2, [r3, #80]	@ 0x50
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	2200      	movs	r2, #0
 8001ea2:	655a      	str	r2, [r3, #84]	@ 0x54
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	659a      	str	r2, [r3, #88]	@ 0x58
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	2200      	movs	r2, #0
 8001eae:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	2225      	movs	r2, #37	@ 0x25
 8001eb4:	2101      	movs	r1, #1
 8001eb6:	5499      	strb	r1, [r3, r2]
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	2224      	movs	r2, #36	@ 0x24
 8001ebc:	2100      	movs	r1, #0
 8001ebe:	5499      	strb	r1, [r3, r2]
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	0018      	movs	r0, r3
 8001ec4:	46bd      	mov	sp, r7
 8001ec6:	b002      	add	sp, #8
 8001ec8:	bd80      	pop	{r7, pc}
 8001eca:	46c0      	nop			@ (mov r8, r8)
 8001ecc:	bffdfff8 	.word	0xbffdfff8
 8001ed0:	ffff800f 	.word	0xffff800f

08001ed4 <HAL_DMA_DeInit>:
 8001ed4:	b580      	push	{r7, lr}
 8001ed6:	b082      	sub	sp, #8
 8001ed8:	af00      	add	r7, sp, #0
 8001eda:	6078      	str	r0, [r7, #4]
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	d101      	bne.n	8001ee6 <HAL_DMA_DeInit+0x12>
 8001ee2:	2301      	movs	r3, #1
 8001ee4:	e066      	b.n	8001fb4 <HAL_DMA_DeInit+0xe0>
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	681a      	ldr	r2, [r3, #0]
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	2101      	movs	r1, #1
 8001ef2:	438a      	bics	r2, r1
 8001ef4:	601a      	str	r2, [r3, #0]
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	4a30      	ldr	r2, [pc, #192]	@ (8001fbc <HAL_DMA_DeInit+0xe8>)
 8001efc:	4694      	mov	ip, r2
 8001efe:	4463      	add	r3, ip
 8001f00:	2114      	movs	r1, #20
 8001f02:	0018      	movs	r0, r3
 8001f04:	f7fe f900 	bl	8000108 <__udivsi3>
 8001f08:	0003      	movs	r3, r0
 8001f0a:	009a      	lsls	r2, r3, #2
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	681b      	ldr	r3, [r3, #0]
 8001f14:	2200      	movs	r2, #0
 8001f16:	601a      	str	r2, [r3, #0]
 8001f18:	4b29      	ldr	r3, [pc, #164]	@ (8001fc0 <HAL_DMA_DeInit+0xec>)
 8001f1a:	6859      	ldr	r1, [r3, #4]
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f20:	221c      	movs	r2, #28
 8001f22:	4013      	ands	r3, r2
 8001f24:	2201      	movs	r2, #1
 8001f26:	409a      	lsls	r2, r3
 8001f28:	4b25      	ldr	r3, [pc, #148]	@ (8001fc0 <HAL_DMA_DeInit+0xec>)
 8001f2a:	430a      	orrs	r2, r1
 8001f2c:	605a      	str	r2, [r3, #4]
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	0018      	movs	r0, r3
 8001f32:	f000 faa7 	bl	8002484 <DMA_CalcDMAMUXChannelBaseAndMask>
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f3a:	2200      	movs	r2, #0
 8001f3c:	601a      	str	r2, [r3, #0]
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001f42:	687a      	ldr	r2, [r7, #4]
 8001f44:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8001f46:	605a      	str	r2, [r3, #4]
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	685b      	ldr	r3, [r3, #4]
 8001f4c:	2b00      	cmp	r3, #0
 8001f4e:	d010      	beq.n	8001f72 <HAL_DMA_DeInit+0x9e>
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	685b      	ldr	r3, [r3, #4]
 8001f54:	2b04      	cmp	r3, #4
 8001f56:	d80c      	bhi.n	8001f72 <HAL_DMA_DeInit+0x9e>
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	0018      	movs	r0, r3
 8001f5c:	f000 fabe 	bl	80024dc <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001f64:	2200      	movs	r2, #0
 8001f66:	601a      	str	r2, [r3, #0]
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001f6c:	687a      	ldr	r2, [r7, #4]
 8001f6e:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8001f70:	605a      	str	r2, [r3, #4]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	2200      	movs	r2, #0
 8001f76:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f7e:	687b      	ldr	r3, [r7, #4]
 8001f80:	2200      	movs	r2, #0
 8001f82:	635a      	str	r2, [r3, #52]	@ 0x34
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	2200      	movs	r2, #0
 8001f88:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	2200      	movs	r2, #0
 8001f8e:	651a      	str	r2, [r3, #80]	@ 0x50
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	2200      	movs	r2, #0
 8001f94:	655a      	str	r2, [r3, #84]	@ 0x54
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	2200      	movs	r2, #0
 8001f9a:	659a      	str	r2, [r3, #88]	@ 0x58
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	2200      	movs	r2, #0
 8001fa0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	2225      	movs	r2, #37	@ 0x25
 8001fa6:	2100      	movs	r1, #0
 8001fa8:	5499      	strb	r1, [r3, r2]
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	2224      	movs	r2, #36	@ 0x24
 8001fae:	2100      	movs	r1, #0
 8001fb0:	5499      	strb	r1, [r3, r2]
 8001fb2:	2300      	movs	r3, #0
 8001fb4:	0018      	movs	r0, r3
 8001fb6:	46bd      	mov	sp, r7
 8001fb8:	b002      	add	sp, #8
 8001fba:	bd80      	pop	{r7, pc}
 8001fbc:	bffdfff8 	.word	0xbffdfff8
 8001fc0:	40020000 	.word	0x40020000

08001fc4 <HAL_DMA_Start_IT>:
 8001fc4:	b580      	push	{r7, lr}
 8001fc6:	b086      	sub	sp, #24
 8001fc8:	af00      	add	r7, sp, #0
 8001fca:	60f8      	str	r0, [r7, #12]
 8001fcc:	60b9      	str	r1, [r7, #8]
 8001fce:	607a      	str	r2, [r7, #4]
 8001fd0:	603b      	str	r3, [r7, #0]
 8001fd2:	2317      	movs	r3, #23
 8001fd4:	18fb      	adds	r3, r7, r3
 8001fd6:	2200      	movs	r2, #0
 8001fd8:	701a      	strb	r2, [r3, #0]
 8001fda:	68fb      	ldr	r3, [r7, #12]
 8001fdc:	2224      	movs	r2, #36	@ 0x24
 8001fde:	5c9b      	ldrb	r3, [r3, r2]
 8001fe0:	2b01      	cmp	r3, #1
 8001fe2:	d101      	bne.n	8001fe8 <HAL_DMA_Start_IT+0x24>
 8001fe4:	2302      	movs	r3, #2
 8001fe6:	e070      	b.n	80020ca <HAL_DMA_Start_IT+0x106>
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	2224      	movs	r2, #36	@ 0x24
 8001fec:	2101      	movs	r1, #1
 8001fee:	5499      	strb	r1, [r3, r2]
 8001ff0:	68fb      	ldr	r3, [r7, #12]
 8001ff2:	2225      	movs	r2, #37	@ 0x25
 8001ff4:	5c9b      	ldrb	r3, [r3, r2]
 8001ff6:	b2db      	uxtb	r3, r3
 8001ff8:	2b01      	cmp	r3, #1
 8001ffa:	d157      	bne.n	80020ac <HAL_DMA_Start_IT+0xe8>
 8001ffc:	68fb      	ldr	r3, [r7, #12]
 8001ffe:	2225      	movs	r2, #37	@ 0x25
 8002000:	2102      	movs	r1, #2
 8002002:	5499      	strb	r1, [r3, r2]
 8002004:	68fb      	ldr	r3, [r7, #12]
 8002006:	2200      	movs	r2, #0
 8002008:	63da      	str	r2, [r3, #60]	@ 0x3c
 800200a:	68fb      	ldr	r3, [r7, #12]
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	681a      	ldr	r2, [r3, #0]
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	2101      	movs	r1, #1
 8002016:	438a      	bics	r2, r1
 8002018:	601a      	str	r2, [r3, #0]
 800201a:	683b      	ldr	r3, [r7, #0]
 800201c:	687a      	ldr	r2, [r7, #4]
 800201e:	68b9      	ldr	r1, [r7, #8]
 8002020:	68f8      	ldr	r0, [r7, #12]
 8002022:	f000 f9ef 	bl	8002404 <DMA_SetConfig>
 8002026:	68fb      	ldr	r3, [r7, #12]
 8002028:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800202a:	2b00      	cmp	r3, #0
 800202c:	d008      	beq.n	8002040 <HAL_DMA_Start_IT+0x7c>
 800202e:	68fb      	ldr	r3, [r7, #12]
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	681a      	ldr	r2, [r3, #0]
 8002034:	68fb      	ldr	r3, [r7, #12]
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	210e      	movs	r1, #14
 800203a:	430a      	orrs	r2, r1
 800203c:	601a      	str	r2, [r3, #0]
 800203e:	e00f      	b.n	8002060 <HAL_DMA_Start_IT+0x9c>
 8002040:	68fb      	ldr	r3, [r7, #12]
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	681a      	ldr	r2, [r3, #0]
 8002046:	68fb      	ldr	r3, [r7, #12]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	2104      	movs	r1, #4
 800204c:	438a      	bics	r2, r1
 800204e:	601a      	str	r2, [r3, #0]
 8002050:	68fb      	ldr	r3, [r7, #12]
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	681a      	ldr	r2, [r3, #0]
 8002056:	68fb      	ldr	r3, [r7, #12]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	210a      	movs	r1, #10
 800205c:	430a      	orrs	r2, r1
 800205e:	601a      	str	r2, [r3, #0]
 8002060:	68fb      	ldr	r3, [r7, #12]
 8002062:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002064:	681a      	ldr	r2, [r3, #0]
 8002066:	2380      	movs	r3, #128	@ 0x80
 8002068:	025b      	lsls	r3, r3, #9
 800206a:	4013      	ands	r3, r2
 800206c:	d008      	beq.n	8002080 <HAL_DMA_Start_IT+0xbc>
 800206e:	68fb      	ldr	r3, [r7, #12]
 8002070:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002072:	681a      	ldr	r2, [r3, #0]
 8002074:	68fb      	ldr	r3, [r7, #12]
 8002076:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002078:	2180      	movs	r1, #128	@ 0x80
 800207a:	0049      	lsls	r1, r1, #1
 800207c:	430a      	orrs	r2, r1
 800207e:	601a      	str	r2, [r3, #0]
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002084:	2b00      	cmp	r3, #0
 8002086:	d008      	beq.n	800209a <HAL_DMA_Start_IT+0xd6>
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800208c:	681a      	ldr	r2, [r3, #0]
 800208e:	68fb      	ldr	r3, [r7, #12]
 8002090:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002092:	2180      	movs	r1, #128	@ 0x80
 8002094:	0049      	lsls	r1, r1, #1
 8002096:	430a      	orrs	r2, r1
 8002098:	601a      	str	r2, [r3, #0]
 800209a:	68fb      	ldr	r3, [r7, #12]
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	681a      	ldr	r2, [r3, #0]
 80020a0:	68fb      	ldr	r3, [r7, #12]
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	2101      	movs	r1, #1
 80020a6:	430a      	orrs	r2, r1
 80020a8:	601a      	str	r2, [r3, #0]
 80020aa:	e007      	b.n	80020bc <HAL_DMA_Start_IT+0xf8>
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	2224      	movs	r2, #36	@ 0x24
 80020b0:	2100      	movs	r1, #0
 80020b2:	5499      	strb	r1, [r3, r2]
 80020b4:	2317      	movs	r3, #23
 80020b6:	18fb      	adds	r3, r7, r3
 80020b8:	2202      	movs	r2, #2
 80020ba:	701a      	strb	r2, [r3, #0]
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	2224      	movs	r2, #36	@ 0x24
 80020c0:	2100      	movs	r1, #0
 80020c2:	5499      	strb	r1, [r3, r2]
 80020c4:	2317      	movs	r3, #23
 80020c6:	18fb      	adds	r3, r7, r3
 80020c8:	781b      	ldrb	r3, [r3, #0]
 80020ca:	0018      	movs	r0, r3
 80020cc:	46bd      	mov	sp, r7
 80020ce:	b006      	add	sp, #24
 80020d0:	bd80      	pop	{r7, pc}
	...

080020d4 <HAL_DMA_Abort>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b082      	sub	sp, #8
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d101      	bne.n	80020e6 <HAL_DMA_Abort+0x12>
 80020e2:	2301      	movs	r3, #1
 80020e4:	e050      	b.n	8002188 <HAL_DMA_Abort+0xb4>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	2225      	movs	r2, #37	@ 0x25
 80020ea:	5c9b      	ldrb	r3, [r3, r2]
 80020ec:	b2db      	uxtb	r3, r3
 80020ee:	2b02      	cmp	r3, #2
 80020f0:	d008      	beq.n	8002104 <HAL_DMA_Abort+0x30>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	2204      	movs	r2, #4
 80020f6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	2224      	movs	r2, #36	@ 0x24
 80020fc:	2100      	movs	r1, #0
 80020fe:	5499      	strb	r1, [r3, r2]
 8002100:	2301      	movs	r3, #1
 8002102:	e041      	b.n	8002188 <HAL_DMA_Abort+0xb4>
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	681a      	ldr	r2, [r3, #0]
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	210e      	movs	r1, #14
 8002110:	438a      	bics	r2, r1
 8002112:	601a      	str	r2, [r3, #0]
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002118:	681a      	ldr	r2, [r3, #0]
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800211e:	491c      	ldr	r1, [pc, #112]	@ (8002190 <HAL_DMA_Abort+0xbc>)
 8002120:	400a      	ands	r2, r1
 8002122:	601a      	str	r2, [r3, #0]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	681a      	ldr	r2, [r3, #0]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	2101      	movs	r1, #1
 8002130:	438a      	bics	r2, r1
 8002132:	601a      	str	r2, [r3, #0]
 8002134:	4b17      	ldr	r3, [pc, #92]	@ (8002194 <HAL_DMA_Abort+0xc0>)
 8002136:	6859      	ldr	r1, [r3, #4]
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800213c:	221c      	movs	r2, #28
 800213e:	4013      	ands	r3, r2
 8002140:	2201      	movs	r2, #1
 8002142:	409a      	lsls	r2, r3
 8002144:	4b13      	ldr	r3, [pc, #76]	@ (8002194 <HAL_DMA_Abort+0xc0>)
 8002146:	430a      	orrs	r2, r1
 8002148:	605a      	str	r2, [r3, #4]
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800214e:	687a      	ldr	r2, [r7, #4]
 8002150:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8002152:	605a      	str	r2, [r3, #4]
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002158:	2b00      	cmp	r3, #0
 800215a:	d00c      	beq.n	8002176 <HAL_DMA_Abort+0xa2>
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002160:	681a      	ldr	r2, [r3, #0]
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002166:	490a      	ldr	r1, [pc, #40]	@ (8002190 <HAL_DMA_Abort+0xbc>)
 8002168:	400a      	ands	r2, r1
 800216a:	601a      	str	r2, [r3, #0]
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002170:	687a      	ldr	r2, [r7, #4]
 8002172:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8002174:	605a      	str	r2, [r3, #4]
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	2225      	movs	r2, #37	@ 0x25
 800217a:	2101      	movs	r1, #1
 800217c:	5499      	strb	r1, [r3, r2]
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	2224      	movs	r2, #36	@ 0x24
 8002182:	2100      	movs	r1, #0
 8002184:	5499      	strb	r1, [r3, r2]
 8002186:	2300      	movs	r3, #0
 8002188:	0018      	movs	r0, r3
 800218a:	46bd      	mov	sp, r7
 800218c:	b002      	add	sp, #8
 800218e:	bd80      	pop	{r7, pc}
 8002190:	fffffeff 	.word	0xfffffeff
 8002194:	40020000 	.word	0x40020000

08002198 <HAL_DMA_Abort_IT>:
 8002198:	b580      	push	{r7, lr}
 800219a:	b084      	sub	sp, #16
 800219c:	af00      	add	r7, sp, #0
 800219e:	6078      	str	r0, [r7, #4]
 80021a0:	230f      	movs	r3, #15
 80021a2:	18fb      	adds	r3, r7, r3
 80021a4:	2200      	movs	r2, #0
 80021a6:	701a      	strb	r2, [r3, #0]
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	2224      	movs	r2, #36	@ 0x24
 80021ac:	2100      	movs	r1, #0
 80021ae:	5499      	strb	r1, [r3, r2]
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	2224      	movs	r2, #36	@ 0x24
 80021b4:	5c9b      	ldrb	r3, [r3, r2]
 80021b6:	2b01      	cmp	r3, #1
 80021b8:	d101      	bne.n	80021be <HAL_DMA_Abort_IT+0x26>
 80021ba:	2302      	movs	r3, #2
 80021bc:	e05e      	b.n	800227c <HAL_DMA_Abort_IT+0xe4>
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	2224      	movs	r2, #36	@ 0x24
 80021c2:	2101      	movs	r1, #1
 80021c4:	5499      	strb	r1, [r3, r2]
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	2225      	movs	r2, #37	@ 0x25
 80021ca:	5c9b      	ldrb	r3, [r3, r2]
 80021cc:	b2db      	uxtb	r3, r3
 80021ce:	2b02      	cmp	r3, #2
 80021d0:	d007      	beq.n	80021e2 <HAL_DMA_Abort_IT+0x4a>
 80021d2:	687b      	ldr	r3, [r7, #4]
 80021d4:	2204      	movs	r2, #4
 80021d6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80021d8:	230f      	movs	r3, #15
 80021da:	18fb      	adds	r3, r7, r3
 80021dc:	2201      	movs	r2, #1
 80021de:	701a      	strb	r2, [r3, #0]
 80021e0:	e049      	b.n	8002276 <HAL_DMA_Abort_IT+0xde>
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	681a      	ldr	r2, [r3, #0]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	210e      	movs	r1, #14
 80021ee:	438a      	bics	r2, r1
 80021f0:	601a      	str	r2, [r3, #0]
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	681a      	ldr	r2, [r3, #0]
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	2101      	movs	r1, #1
 80021fe:	438a      	bics	r2, r1
 8002200:	601a      	str	r2, [r3, #0]
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002206:	681a      	ldr	r2, [r3, #0]
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800220c:	491d      	ldr	r1, [pc, #116]	@ (8002284 <HAL_DMA_Abort_IT+0xec>)
 800220e:	400a      	ands	r2, r1
 8002210:	601a      	str	r2, [r3, #0]
 8002212:	4b1d      	ldr	r3, [pc, #116]	@ (8002288 <HAL_DMA_Abort_IT+0xf0>)
 8002214:	6859      	ldr	r1, [r3, #4]
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800221a:	221c      	movs	r2, #28
 800221c:	4013      	ands	r3, r2
 800221e:	2201      	movs	r2, #1
 8002220:	409a      	lsls	r2, r3
 8002222:	4b19      	ldr	r3, [pc, #100]	@ (8002288 <HAL_DMA_Abort_IT+0xf0>)
 8002224:	430a      	orrs	r2, r1
 8002226:	605a      	str	r2, [r3, #4]
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800222c:	687a      	ldr	r2, [r7, #4]
 800222e:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8002230:	605a      	str	r2, [r3, #4]
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002236:	2b00      	cmp	r3, #0
 8002238:	d00c      	beq.n	8002254 <HAL_DMA_Abort_IT+0xbc>
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800223e:	681a      	ldr	r2, [r3, #0]
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002244:	490f      	ldr	r1, [pc, #60]	@ (8002284 <HAL_DMA_Abort_IT+0xec>)
 8002246:	400a      	ands	r2, r1
 8002248:	601a      	str	r2, [r3, #0]
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800224e:	687a      	ldr	r2, [r7, #4]
 8002250:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8002252:	605a      	str	r2, [r3, #4]
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	2225      	movs	r2, #37	@ 0x25
 8002258:	2101      	movs	r1, #1
 800225a:	5499      	strb	r1, [r3, r2]
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	2224      	movs	r2, #36	@ 0x24
 8002260:	2100      	movs	r1, #0
 8002262:	5499      	strb	r1, [r3, r2]
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002268:	2b00      	cmp	r3, #0
 800226a:	d004      	beq.n	8002276 <HAL_DMA_Abort_IT+0xde>
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002270:	687a      	ldr	r2, [r7, #4]
 8002272:	0010      	movs	r0, r2
 8002274:	4798      	blx	r3
 8002276:	230f      	movs	r3, #15
 8002278:	18fb      	adds	r3, r7, r3
 800227a:	781b      	ldrb	r3, [r3, #0]
 800227c:	0018      	movs	r0, r3
 800227e:	46bd      	mov	sp, r7
 8002280:	b004      	add	sp, #16
 8002282:	bd80      	pop	{r7, pc}
 8002284:	fffffeff 	.word	0xfffffeff
 8002288:	40020000 	.word	0x40020000

0800228c <HAL_DMA_IRQHandler>:
 800228c:	b580      	push	{r7, lr}
 800228e:	b084      	sub	sp, #16
 8002290:	af00      	add	r7, sp, #0
 8002292:	6078      	str	r0, [r7, #4]
 8002294:	4b55      	ldr	r3, [pc, #340]	@ (80023ec <HAL_DMA_IRQHandler+0x160>)
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	60fb      	str	r3, [r7, #12]
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	60bb      	str	r3, [r7, #8]
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022a6:	221c      	movs	r2, #28
 80022a8:	4013      	ands	r3, r2
 80022aa:	2204      	movs	r2, #4
 80022ac:	409a      	lsls	r2, r3
 80022ae:	0013      	movs	r3, r2
 80022b0:	68fa      	ldr	r2, [r7, #12]
 80022b2:	4013      	ands	r3, r2
 80022b4:	d027      	beq.n	8002306 <HAL_DMA_IRQHandler+0x7a>
 80022b6:	68bb      	ldr	r3, [r7, #8]
 80022b8:	2204      	movs	r2, #4
 80022ba:	4013      	ands	r3, r2
 80022bc:	d023      	beq.n	8002306 <HAL_DMA_IRQHandler+0x7a>
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	2220      	movs	r2, #32
 80022c6:	4013      	ands	r3, r2
 80022c8:	d107      	bne.n	80022da <HAL_DMA_IRQHandler+0x4e>
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	681a      	ldr	r2, [r3, #0]
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	2104      	movs	r1, #4
 80022d6:	438a      	bics	r2, r1
 80022d8:	601a      	str	r2, [r3, #0]
 80022da:	4b44      	ldr	r3, [pc, #272]	@ (80023ec <HAL_DMA_IRQHandler+0x160>)
 80022dc:	6859      	ldr	r1, [r3, #4]
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022e2:	221c      	movs	r2, #28
 80022e4:	4013      	ands	r3, r2
 80022e6:	2204      	movs	r2, #4
 80022e8:	409a      	lsls	r2, r3
 80022ea:	4b40      	ldr	r3, [pc, #256]	@ (80023ec <HAL_DMA_IRQHandler+0x160>)
 80022ec:	430a      	orrs	r2, r1
 80022ee:	605a      	str	r2, [r3, #4]
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022f4:	2b00      	cmp	r3, #0
 80022f6:	d100      	bne.n	80022fa <HAL_DMA_IRQHandler+0x6e>
 80022f8:	e073      	b.n	80023e2 <HAL_DMA_IRQHandler+0x156>
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022fe:	687a      	ldr	r2, [r7, #4]
 8002300:	0010      	movs	r0, r2
 8002302:	4798      	blx	r3
 8002304:	e06d      	b.n	80023e2 <HAL_DMA_IRQHandler+0x156>
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800230a:	221c      	movs	r2, #28
 800230c:	4013      	ands	r3, r2
 800230e:	2202      	movs	r2, #2
 8002310:	409a      	lsls	r2, r3
 8002312:	0013      	movs	r3, r2
 8002314:	68fa      	ldr	r2, [r7, #12]
 8002316:	4013      	ands	r3, r2
 8002318:	d02e      	beq.n	8002378 <HAL_DMA_IRQHandler+0xec>
 800231a:	68bb      	ldr	r3, [r7, #8]
 800231c:	2202      	movs	r2, #2
 800231e:	4013      	ands	r3, r2
 8002320:	d02a      	beq.n	8002378 <HAL_DMA_IRQHandler+0xec>
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	2220      	movs	r2, #32
 800232a:	4013      	ands	r3, r2
 800232c:	d10b      	bne.n	8002346 <HAL_DMA_IRQHandler+0xba>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	681a      	ldr	r2, [r3, #0]
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	210a      	movs	r1, #10
 800233a:	438a      	bics	r2, r1
 800233c:	601a      	str	r2, [r3, #0]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	2225      	movs	r2, #37	@ 0x25
 8002342:	2101      	movs	r1, #1
 8002344:	5499      	strb	r1, [r3, r2]
 8002346:	4b29      	ldr	r3, [pc, #164]	@ (80023ec <HAL_DMA_IRQHandler+0x160>)
 8002348:	6859      	ldr	r1, [r3, #4]
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800234e:	221c      	movs	r2, #28
 8002350:	4013      	ands	r3, r2
 8002352:	2202      	movs	r2, #2
 8002354:	409a      	lsls	r2, r3
 8002356:	4b25      	ldr	r3, [pc, #148]	@ (80023ec <HAL_DMA_IRQHandler+0x160>)
 8002358:	430a      	orrs	r2, r1
 800235a:	605a      	str	r2, [r3, #4]
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	2224      	movs	r2, #36	@ 0x24
 8002360:	2100      	movs	r1, #0
 8002362:	5499      	strb	r1, [r3, r2]
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002368:	2b00      	cmp	r3, #0
 800236a:	d03a      	beq.n	80023e2 <HAL_DMA_IRQHandler+0x156>
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002370:	687a      	ldr	r2, [r7, #4]
 8002372:	0010      	movs	r0, r2
 8002374:	4798      	blx	r3
 8002376:	e034      	b.n	80023e2 <HAL_DMA_IRQHandler+0x156>
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800237c:	221c      	movs	r2, #28
 800237e:	4013      	ands	r3, r2
 8002380:	2208      	movs	r2, #8
 8002382:	409a      	lsls	r2, r3
 8002384:	0013      	movs	r3, r2
 8002386:	68fa      	ldr	r2, [r7, #12]
 8002388:	4013      	ands	r3, r2
 800238a:	d02b      	beq.n	80023e4 <HAL_DMA_IRQHandler+0x158>
 800238c:	68bb      	ldr	r3, [r7, #8]
 800238e:	2208      	movs	r2, #8
 8002390:	4013      	ands	r3, r2
 8002392:	d027      	beq.n	80023e4 <HAL_DMA_IRQHandler+0x158>
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	681a      	ldr	r2, [r3, #0]
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	210e      	movs	r1, #14
 80023a0:	438a      	bics	r2, r1
 80023a2:	601a      	str	r2, [r3, #0]
 80023a4:	4b11      	ldr	r3, [pc, #68]	@ (80023ec <HAL_DMA_IRQHandler+0x160>)
 80023a6:	6859      	ldr	r1, [r3, #4]
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023ac:	221c      	movs	r2, #28
 80023ae:	4013      	ands	r3, r2
 80023b0:	2201      	movs	r2, #1
 80023b2:	409a      	lsls	r2, r3
 80023b4:	4b0d      	ldr	r3, [pc, #52]	@ (80023ec <HAL_DMA_IRQHandler+0x160>)
 80023b6:	430a      	orrs	r2, r1
 80023b8:	605a      	str	r2, [r3, #4]
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	2201      	movs	r2, #1
 80023be:	63da      	str	r2, [r3, #60]	@ 0x3c
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	2225      	movs	r2, #37	@ 0x25
 80023c4:	2101      	movs	r1, #1
 80023c6:	5499      	strb	r1, [r3, r2]
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	2224      	movs	r2, #36	@ 0x24
 80023cc:	2100      	movs	r1, #0
 80023ce:	5499      	strb	r1, [r3, r2]
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d005      	beq.n	80023e4 <HAL_DMA_IRQHandler+0x158>
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80023dc:	687a      	ldr	r2, [r7, #4]
 80023de:	0010      	movs	r0, r2
 80023e0:	4798      	blx	r3
 80023e2:	46c0      	nop			@ (mov r8, r8)
 80023e4:	46c0      	nop			@ (mov r8, r8)
 80023e6:	46bd      	mov	sp, r7
 80023e8:	b004      	add	sp, #16
 80023ea:	bd80      	pop	{r7, pc}
 80023ec:	40020000 	.word	0x40020000

080023f0 <HAL_DMA_GetError>:
 80023f0:	b580      	push	{r7, lr}
 80023f2:	b082      	sub	sp, #8
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80023fc:	0018      	movs	r0, r3
 80023fe:	46bd      	mov	sp, r7
 8002400:	b002      	add	sp, #8
 8002402:	bd80      	pop	{r7, pc}

08002404 <DMA_SetConfig>:
 8002404:	b580      	push	{r7, lr}
 8002406:	b084      	sub	sp, #16
 8002408:	af00      	add	r7, sp, #0
 800240a:	60f8      	str	r0, [r7, #12]
 800240c:	60b9      	str	r1, [r7, #8]
 800240e:	607a      	str	r2, [r7, #4]
 8002410:	603b      	str	r3, [r7, #0]
 8002412:	68fb      	ldr	r3, [r7, #12]
 8002414:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002416:	68fa      	ldr	r2, [r7, #12]
 8002418:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 800241a:	605a      	str	r2, [r3, #4]
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002420:	2b00      	cmp	r3, #0
 8002422:	d004      	beq.n	800242e <DMA_SetConfig+0x2a>
 8002424:	68fb      	ldr	r3, [r7, #12]
 8002426:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002428:	68fa      	ldr	r2, [r7, #12]
 800242a:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 800242c:	605a      	str	r2, [r3, #4]
 800242e:	4b14      	ldr	r3, [pc, #80]	@ (8002480 <DMA_SetConfig+0x7c>)
 8002430:	6859      	ldr	r1, [r3, #4]
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002436:	221c      	movs	r2, #28
 8002438:	4013      	ands	r3, r2
 800243a:	2201      	movs	r2, #1
 800243c:	409a      	lsls	r2, r3
 800243e:	4b10      	ldr	r3, [pc, #64]	@ (8002480 <DMA_SetConfig+0x7c>)
 8002440:	430a      	orrs	r2, r1
 8002442:	605a      	str	r2, [r3, #4]
 8002444:	68fb      	ldr	r3, [r7, #12]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	683a      	ldr	r2, [r7, #0]
 800244a:	605a      	str	r2, [r3, #4]
 800244c:	68fb      	ldr	r3, [r7, #12]
 800244e:	689b      	ldr	r3, [r3, #8]
 8002450:	2b10      	cmp	r3, #16
 8002452:	d108      	bne.n	8002466 <DMA_SetConfig+0x62>
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	687a      	ldr	r2, [r7, #4]
 800245a:	609a      	str	r2, [r3, #8]
 800245c:	68fb      	ldr	r3, [r7, #12]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	68ba      	ldr	r2, [r7, #8]
 8002462:	60da      	str	r2, [r3, #12]
 8002464:	e007      	b.n	8002476 <DMA_SetConfig+0x72>
 8002466:	68fb      	ldr	r3, [r7, #12]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	68ba      	ldr	r2, [r7, #8]
 800246c:	609a      	str	r2, [r3, #8]
 800246e:	68fb      	ldr	r3, [r7, #12]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	687a      	ldr	r2, [r7, #4]
 8002474:	60da      	str	r2, [r3, #12]
 8002476:	46c0      	nop			@ (mov r8, r8)
 8002478:	46bd      	mov	sp, r7
 800247a:	b004      	add	sp, #16
 800247c:	bd80      	pop	{r7, pc}
 800247e:	46c0      	nop			@ (mov r8, r8)
 8002480:	40020000 	.word	0x40020000

08002484 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8002484:	b580      	push	{r7, lr}
 8002486:	b084      	sub	sp, #16
 8002488:	af00      	add	r7, sp, #0
 800248a:	6078      	str	r0, [r7, #4]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	001a      	movs	r2, r3
 8002492:	23ff      	movs	r3, #255	@ 0xff
 8002494:	4013      	ands	r3, r2
 8002496:	3b08      	subs	r3, #8
 8002498:	2114      	movs	r1, #20
 800249a:	0018      	movs	r0, r3
 800249c:	f7fd fe34 	bl	8000108 <__udivsi3>
 80024a0:	0003      	movs	r3, r0
 80024a2:	60fb      	str	r3, [r7, #12]
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024a8:	089b      	lsrs	r3, r3, #2
 80024aa:	4a0a      	ldr	r2, [pc, #40]	@ (80024d4 <DMA_CalcDMAMUXChannelBaseAndMask+0x50>)
 80024ac:	4694      	mov	ip, r2
 80024ae:	4463      	add	r3, ip
 80024b0:	009b      	lsls	r3, r3, #2
 80024b2:	001a      	movs	r2, r3
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	645a      	str	r2, [r3, #68]	@ 0x44
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	4a07      	ldr	r2, [pc, #28]	@ (80024d8 <DMA_CalcDMAMUXChannelBaseAndMask+0x54>)
 80024bc:	649a      	str	r2, [r3, #72]	@ 0x48
 80024be:	68fb      	ldr	r3, [r7, #12]
 80024c0:	221c      	movs	r2, #28
 80024c2:	4013      	ands	r3, r2
 80024c4:	2201      	movs	r2, #1
 80024c6:	409a      	lsls	r2, r3
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	64da      	str	r2, [r3, #76]	@ 0x4c
 80024cc:	46c0      	nop			@ (mov r8, r8)
 80024ce:	46bd      	mov	sp, r7
 80024d0:	b004      	add	sp, #16
 80024d2:	bd80      	pop	{r7, pc}
 80024d4:	10008200 	.word	0x10008200
 80024d8:	40020880 	.word	0x40020880

080024dc <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 80024dc:	b580      	push	{r7, lr}
 80024de:	b084      	sub	sp, #16
 80024e0:	af00      	add	r7, sp, #0
 80024e2:	6078      	str	r0, [r7, #4]
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	685b      	ldr	r3, [r3, #4]
 80024e8:	22ff      	movs	r2, #255	@ 0xff
 80024ea:	4013      	ands	r3, r2
 80024ec:	60fb      	str	r3, [r7, #12]
 80024ee:	68fb      	ldr	r3, [r7, #12]
 80024f0:	4a0a      	ldr	r2, [pc, #40]	@ (800251c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 80024f2:	4694      	mov	ip, r2
 80024f4:	4463      	add	r3, ip
 80024f6:	009b      	lsls	r3, r3, #2
 80024f8:	001a      	movs	r2, r3
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	651a      	str	r2, [r3, #80]	@ 0x50
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	4a07      	ldr	r2, [pc, #28]	@ (8002520 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8002502:	655a      	str	r2, [r3, #84]	@ 0x54
 8002504:	68fb      	ldr	r3, [r7, #12]
 8002506:	3b01      	subs	r3, #1
 8002508:	2203      	movs	r2, #3
 800250a:	4013      	ands	r3, r2
 800250c:	2201      	movs	r2, #1
 800250e:	409a      	lsls	r2, r3
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	659a      	str	r2, [r3, #88]	@ 0x58
 8002514:	46c0      	nop			@ (mov r8, r8)
 8002516:	46bd      	mov	sp, r7
 8002518:	b004      	add	sp, #16
 800251a:	bd80      	pop	{r7, pc}
 800251c:	1000823f 	.word	0x1000823f
 8002520:	40020940 	.word	0x40020940

08002524 <HAL_GPIO_Init>:
 8002524:	b580      	push	{r7, lr}
 8002526:	b086      	sub	sp, #24
 8002528:	af00      	add	r7, sp, #0
 800252a:	6078      	str	r0, [r7, #4]
 800252c:	6039      	str	r1, [r7, #0]
 800252e:	2300      	movs	r3, #0
 8002530:	613b      	str	r3, [r7, #16]
 8002532:	e153      	b.n	80027dc <HAL_GPIO_Init+0x2b8>
 8002534:	683b      	ldr	r3, [r7, #0]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	2101      	movs	r1, #1
 800253a:	693a      	ldr	r2, [r7, #16]
 800253c:	4091      	lsls	r1, r2
 800253e:	000a      	movs	r2, r1
 8002540:	4013      	ands	r3, r2
 8002542:	60fb      	str	r3, [r7, #12]
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	2b00      	cmp	r3, #0
 8002548:	d100      	bne.n	800254c <HAL_GPIO_Init+0x28>
 800254a:	e144      	b.n	80027d6 <HAL_GPIO_Init+0x2b2>
 800254c:	683b      	ldr	r3, [r7, #0]
 800254e:	685b      	ldr	r3, [r3, #4]
 8002550:	2b02      	cmp	r3, #2
 8002552:	d003      	beq.n	800255c <HAL_GPIO_Init+0x38>
 8002554:	683b      	ldr	r3, [r7, #0]
 8002556:	685b      	ldr	r3, [r3, #4]
 8002558:	2b12      	cmp	r3, #18
 800255a:	d125      	bne.n	80025a8 <HAL_GPIO_Init+0x84>
 800255c:	693b      	ldr	r3, [r7, #16]
 800255e:	08da      	lsrs	r2, r3, #3
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	3208      	adds	r2, #8
 8002564:	0092      	lsls	r2, r2, #2
 8002566:	58d3      	ldr	r3, [r2, r3]
 8002568:	617b      	str	r3, [r7, #20]
 800256a:	693b      	ldr	r3, [r7, #16]
 800256c:	2207      	movs	r2, #7
 800256e:	4013      	ands	r3, r2
 8002570:	009b      	lsls	r3, r3, #2
 8002572:	220f      	movs	r2, #15
 8002574:	409a      	lsls	r2, r3
 8002576:	0013      	movs	r3, r2
 8002578:	43da      	mvns	r2, r3
 800257a:	697b      	ldr	r3, [r7, #20]
 800257c:	4013      	ands	r3, r2
 800257e:	617b      	str	r3, [r7, #20]
 8002580:	683b      	ldr	r3, [r7, #0]
 8002582:	691b      	ldr	r3, [r3, #16]
 8002584:	220f      	movs	r2, #15
 8002586:	401a      	ands	r2, r3
 8002588:	693b      	ldr	r3, [r7, #16]
 800258a:	2107      	movs	r1, #7
 800258c:	400b      	ands	r3, r1
 800258e:	009b      	lsls	r3, r3, #2
 8002590:	409a      	lsls	r2, r3
 8002592:	0013      	movs	r3, r2
 8002594:	697a      	ldr	r2, [r7, #20]
 8002596:	4313      	orrs	r3, r2
 8002598:	617b      	str	r3, [r7, #20]
 800259a:	693b      	ldr	r3, [r7, #16]
 800259c:	08da      	lsrs	r2, r3, #3
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	3208      	adds	r2, #8
 80025a2:	0092      	lsls	r2, r2, #2
 80025a4:	6979      	ldr	r1, [r7, #20]
 80025a6:	50d1      	str	r1, [r2, r3]
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	681b      	ldr	r3, [r3, #0]
 80025ac:	617b      	str	r3, [r7, #20]
 80025ae:	693b      	ldr	r3, [r7, #16]
 80025b0:	005b      	lsls	r3, r3, #1
 80025b2:	2203      	movs	r2, #3
 80025b4:	409a      	lsls	r2, r3
 80025b6:	0013      	movs	r3, r2
 80025b8:	43da      	mvns	r2, r3
 80025ba:	697b      	ldr	r3, [r7, #20]
 80025bc:	4013      	ands	r3, r2
 80025be:	617b      	str	r3, [r7, #20]
 80025c0:	683b      	ldr	r3, [r7, #0]
 80025c2:	685b      	ldr	r3, [r3, #4]
 80025c4:	2203      	movs	r2, #3
 80025c6:	401a      	ands	r2, r3
 80025c8:	693b      	ldr	r3, [r7, #16]
 80025ca:	005b      	lsls	r3, r3, #1
 80025cc:	409a      	lsls	r2, r3
 80025ce:	0013      	movs	r3, r2
 80025d0:	697a      	ldr	r2, [r7, #20]
 80025d2:	4313      	orrs	r3, r2
 80025d4:	617b      	str	r3, [r7, #20]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	697a      	ldr	r2, [r7, #20]
 80025da:	601a      	str	r2, [r3, #0]
 80025dc:	683b      	ldr	r3, [r7, #0]
 80025de:	685b      	ldr	r3, [r3, #4]
 80025e0:	2b01      	cmp	r3, #1
 80025e2:	d00b      	beq.n	80025fc <HAL_GPIO_Init+0xd8>
 80025e4:	683b      	ldr	r3, [r7, #0]
 80025e6:	685b      	ldr	r3, [r3, #4]
 80025e8:	2b02      	cmp	r3, #2
 80025ea:	d007      	beq.n	80025fc <HAL_GPIO_Init+0xd8>
 80025ec:	683b      	ldr	r3, [r7, #0]
 80025ee:	685b      	ldr	r3, [r3, #4]
 80025f0:	2b11      	cmp	r3, #17
 80025f2:	d003      	beq.n	80025fc <HAL_GPIO_Init+0xd8>
 80025f4:	683b      	ldr	r3, [r7, #0]
 80025f6:	685b      	ldr	r3, [r3, #4]
 80025f8:	2b12      	cmp	r3, #18
 80025fa:	d130      	bne.n	800265e <HAL_GPIO_Init+0x13a>
 80025fc:	687b      	ldr	r3, [r7, #4]
 80025fe:	689b      	ldr	r3, [r3, #8]
 8002600:	617b      	str	r3, [r7, #20]
 8002602:	693b      	ldr	r3, [r7, #16]
 8002604:	005b      	lsls	r3, r3, #1
 8002606:	2203      	movs	r2, #3
 8002608:	409a      	lsls	r2, r3
 800260a:	0013      	movs	r3, r2
 800260c:	43da      	mvns	r2, r3
 800260e:	697b      	ldr	r3, [r7, #20]
 8002610:	4013      	ands	r3, r2
 8002612:	617b      	str	r3, [r7, #20]
 8002614:	683b      	ldr	r3, [r7, #0]
 8002616:	68da      	ldr	r2, [r3, #12]
 8002618:	693b      	ldr	r3, [r7, #16]
 800261a:	005b      	lsls	r3, r3, #1
 800261c:	409a      	lsls	r2, r3
 800261e:	0013      	movs	r3, r2
 8002620:	697a      	ldr	r2, [r7, #20]
 8002622:	4313      	orrs	r3, r2
 8002624:	617b      	str	r3, [r7, #20]
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	697a      	ldr	r2, [r7, #20]
 800262a:	609a      	str	r2, [r3, #8]
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	685b      	ldr	r3, [r3, #4]
 8002630:	617b      	str	r3, [r7, #20]
 8002632:	2201      	movs	r2, #1
 8002634:	693b      	ldr	r3, [r7, #16]
 8002636:	409a      	lsls	r2, r3
 8002638:	0013      	movs	r3, r2
 800263a:	43da      	mvns	r2, r3
 800263c:	697b      	ldr	r3, [r7, #20]
 800263e:	4013      	ands	r3, r2
 8002640:	617b      	str	r3, [r7, #20]
 8002642:	683b      	ldr	r3, [r7, #0]
 8002644:	685b      	ldr	r3, [r3, #4]
 8002646:	091b      	lsrs	r3, r3, #4
 8002648:	2201      	movs	r2, #1
 800264a:	401a      	ands	r2, r3
 800264c:	693b      	ldr	r3, [r7, #16]
 800264e:	409a      	lsls	r2, r3
 8002650:	0013      	movs	r3, r2
 8002652:	697a      	ldr	r2, [r7, #20]
 8002654:	4313      	orrs	r3, r2
 8002656:	617b      	str	r3, [r7, #20]
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	697a      	ldr	r2, [r7, #20]
 800265c:	605a      	str	r2, [r3, #4]
 800265e:	683b      	ldr	r3, [r7, #0]
 8002660:	685b      	ldr	r3, [r3, #4]
 8002662:	2b03      	cmp	r3, #3
 8002664:	d017      	beq.n	8002696 <HAL_GPIO_Init+0x172>
 8002666:	687b      	ldr	r3, [r7, #4]
 8002668:	68db      	ldr	r3, [r3, #12]
 800266a:	617b      	str	r3, [r7, #20]
 800266c:	693b      	ldr	r3, [r7, #16]
 800266e:	005b      	lsls	r3, r3, #1
 8002670:	2203      	movs	r2, #3
 8002672:	409a      	lsls	r2, r3
 8002674:	0013      	movs	r3, r2
 8002676:	43da      	mvns	r2, r3
 8002678:	697b      	ldr	r3, [r7, #20]
 800267a:	4013      	ands	r3, r2
 800267c:	617b      	str	r3, [r7, #20]
 800267e:	683b      	ldr	r3, [r7, #0]
 8002680:	689a      	ldr	r2, [r3, #8]
 8002682:	693b      	ldr	r3, [r7, #16]
 8002684:	005b      	lsls	r3, r3, #1
 8002686:	409a      	lsls	r2, r3
 8002688:	0013      	movs	r3, r2
 800268a:	697a      	ldr	r2, [r7, #20]
 800268c:	4313      	orrs	r3, r2
 800268e:	617b      	str	r3, [r7, #20]
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	697a      	ldr	r2, [r7, #20]
 8002694:	60da      	str	r2, [r3, #12]
 8002696:	683b      	ldr	r3, [r7, #0]
 8002698:	685a      	ldr	r2, [r3, #4]
 800269a:	2380      	movs	r3, #128	@ 0x80
 800269c:	055b      	lsls	r3, r3, #21
 800269e:	4013      	ands	r3, r2
 80026a0:	d100      	bne.n	80026a4 <HAL_GPIO_Init+0x180>
 80026a2:	e098      	b.n	80027d6 <HAL_GPIO_Init+0x2b2>
 80026a4:	4a53      	ldr	r2, [pc, #332]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 80026a6:	693b      	ldr	r3, [r7, #16]
 80026a8:	089b      	lsrs	r3, r3, #2
 80026aa:	3318      	adds	r3, #24
 80026ac:	009b      	lsls	r3, r3, #2
 80026ae:	589b      	ldr	r3, [r3, r2]
 80026b0:	617b      	str	r3, [r7, #20]
 80026b2:	693b      	ldr	r3, [r7, #16]
 80026b4:	2203      	movs	r2, #3
 80026b6:	4013      	ands	r3, r2
 80026b8:	00db      	lsls	r3, r3, #3
 80026ba:	220f      	movs	r2, #15
 80026bc:	409a      	lsls	r2, r3
 80026be:	0013      	movs	r3, r2
 80026c0:	43da      	mvns	r2, r3
 80026c2:	697b      	ldr	r3, [r7, #20]
 80026c4:	4013      	ands	r3, r2
 80026c6:	617b      	str	r3, [r7, #20]
 80026c8:	687a      	ldr	r2, [r7, #4]
 80026ca:	23a0      	movs	r3, #160	@ 0xa0
 80026cc:	05db      	lsls	r3, r3, #23
 80026ce:	429a      	cmp	r2, r3
 80026d0:	d019      	beq.n	8002706 <HAL_GPIO_Init+0x1e2>
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	4a48      	ldr	r2, [pc, #288]	@ (80027f8 <HAL_GPIO_Init+0x2d4>)
 80026d6:	4293      	cmp	r3, r2
 80026d8:	d013      	beq.n	8002702 <HAL_GPIO_Init+0x1de>
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	4a47      	ldr	r2, [pc, #284]	@ (80027fc <HAL_GPIO_Init+0x2d8>)
 80026de:	4293      	cmp	r3, r2
 80026e0:	d00d      	beq.n	80026fe <HAL_GPIO_Init+0x1da>
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	4a46      	ldr	r2, [pc, #280]	@ (8002800 <HAL_GPIO_Init+0x2dc>)
 80026e6:	4293      	cmp	r3, r2
 80026e8:	d007      	beq.n	80026fa <HAL_GPIO_Init+0x1d6>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	4a45      	ldr	r2, [pc, #276]	@ (8002804 <HAL_GPIO_Init+0x2e0>)
 80026ee:	4293      	cmp	r3, r2
 80026f0:	d101      	bne.n	80026f6 <HAL_GPIO_Init+0x1d2>
 80026f2:	2305      	movs	r3, #5
 80026f4:	e008      	b.n	8002708 <HAL_GPIO_Init+0x1e4>
 80026f6:	2306      	movs	r3, #6
 80026f8:	e006      	b.n	8002708 <HAL_GPIO_Init+0x1e4>
 80026fa:	2303      	movs	r3, #3
 80026fc:	e004      	b.n	8002708 <HAL_GPIO_Init+0x1e4>
 80026fe:	2302      	movs	r3, #2
 8002700:	e002      	b.n	8002708 <HAL_GPIO_Init+0x1e4>
 8002702:	2301      	movs	r3, #1
 8002704:	e000      	b.n	8002708 <HAL_GPIO_Init+0x1e4>
 8002706:	2300      	movs	r3, #0
 8002708:	693a      	ldr	r2, [r7, #16]
 800270a:	2103      	movs	r1, #3
 800270c:	400a      	ands	r2, r1
 800270e:	00d2      	lsls	r2, r2, #3
 8002710:	4093      	lsls	r3, r2
 8002712:	697a      	ldr	r2, [r7, #20]
 8002714:	4313      	orrs	r3, r2
 8002716:	617b      	str	r3, [r7, #20]
 8002718:	4936      	ldr	r1, [pc, #216]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 800271a:	693b      	ldr	r3, [r7, #16]
 800271c:	089b      	lsrs	r3, r3, #2
 800271e:	3318      	adds	r3, #24
 8002720:	009b      	lsls	r3, r3, #2
 8002722:	697a      	ldr	r2, [r7, #20]
 8002724:	505a      	str	r2, [r3, r1]
 8002726:	4a33      	ldr	r2, [pc, #204]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 8002728:	2380      	movs	r3, #128	@ 0x80
 800272a:	58d3      	ldr	r3, [r2, r3]
 800272c:	617b      	str	r3, [r7, #20]
 800272e:	68fb      	ldr	r3, [r7, #12]
 8002730:	43da      	mvns	r2, r3
 8002732:	697b      	ldr	r3, [r7, #20]
 8002734:	4013      	ands	r3, r2
 8002736:	617b      	str	r3, [r7, #20]
 8002738:	683b      	ldr	r3, [r7, #0]
 800273a:	685a      	ldr	r2, [r3, #4]
 800273c:	2380      	movs	r3, #128	@ 0x80
 800273e:	025b      	lsls	r3, r3, #9
 8002740:	4013      	ands	r3, r2
 8002742:	d003      	beq.n	800274c <HAL_GPIO_Init+0x228>
 8002744:	697a      	ldr	r2, [r7, #20]
 8002746:	68fb      	ldr	r3, [r7, #12]
 8002748:	4313      	orrs	r3, r2
 800274a:	617b      	str	r3, [r7, #20]
 800274c:	4929      	ldr	r1, [pc, #164]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 800274e:	2280      	movs	r2, #128	@ 0x80
 8002750:	697b      	ldr	r3, [r7, #20]
 8002752:	508b      	str	r3, [r1, r2]
 8002754:	4a27      	ldr	r2, [pc, #156]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 8002756:	2384      	movs	r3, #132	@ 0x84
 8002758:	58d3      	ldr	r3, [r2, r3]
 800275a:	617b      	str	r3, [r7, #20]
 800275c:	68fb      	ldr	r3, [r7, #12]
 800275e:	43da      	mvns	r2, r3
 8002760:	697b      	ldr	r3, [r7, #20]
 8002762:	4013      	ands	r3, r2
 8002764:	617b      	str	r3, [r7, #20]
 8002766:	683b      	ldr	r3, [r7, #0]
 8002768:	685a      	ldr	r2, [r3, #4]
 800276a:	2380      	movs	r3, #128	@ 0x80
 800276c:	029b      	lsls	r3, r3, #10
 800276e:	4013      	ands	r3, r2
 8002770:	d003      	beq.n	800277a <HAL_GPIO_Init+0x256>
 8002772:	697a      	ldr	r2, [r7, #20]
 8002774:	68fb      	ldr	r3, [r7, #12]
 8002776:	4313      	orrs	r3, r2
 8002778:	617b      	str	r3, [r7, #20]
 800277a:	491e      	ldr	r1, [pc, #120]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 800277c:	2284      	movs	r2, #132	@ 0x84
 800277e:	697b      	ldr	r3, [r7, #20]
 8002780:	508b      	str	r3, [r1, r2]
 8002782:	4b1c      	ldr	r3, [pc, #112]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	617b      	str	r3, [r7, #20]
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	43da      	mvns	r2, r3
 800278c:	697b      	ldr	r3, [r7, #20]
 800278e:	4013      	ands	r3, r2
 8002790:	617b      	str	r3, [r7, #20]
 8002792:	683b      	ldr	r3, [r7, #0]
 8002794:	685a      	ldr	r2, [r3, #4]
 8002796:	2380      	movs	r3, #128	@ 0x80
 8002798:	035b      	lsls	r3, r3, #13
 800279a:	4013      	ands	r3, r2
 800279c:	d003      	beq.n	80027a6 <HAL_GPIO_Init+0x282>
 800279e:	697a      	ldr	r2, [r7, #20]
 80027a0:	68fb      	ldr	r3, [r7, #12]
 80027a2:	4313      	orrs	r3, r2
 80027a4:	617b      	str	r3, [r7, #20]
 80027a6:	4b13      	ldr	r3, [pc, #76]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 80027a8:	697a      	ldr	r2, [r7, #20]
 80027aa:	601a      	str	r2, [r3, #0]
 80027ac:	4b11      	ldr	r3, [pc, #68]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 80027ae:	685b      	ldr	r3, [r3, #4]
 80027b0:	617b      	str	r3, [r7, #20]
 80027b2:	68fb      	ldr	r3, [r7, #12]
 80027b4:	43da      	mvns	r2, r3
 80027b6:	697b      	ldr	r3, [r7, #20]
 80027b8:	4013      	ands	r3, r2
 80027ba:	617b      	str	r3, [r7, #20]
 80027bc:	683b      	ldr	r3, [r7, #0]
 80027be:	685a      	ldr	r2, [r3, #4]
 80027c0:	2380      	movs	r3, #128	@ 0x80
 80027c2:	039b      	lsls	r3, r3, #14
 80027c4:	4013      	ands	r3, r2
 80027c6:	d003      	beq.n	80027d0 <HAL_GPIO_Init+0x2ac>
 80027c8:	697a      	ldr	r2, [r7, #20]
 80027ca:	68fb      	ldr	r3, [r7, #12]
 80027cc:	4313      	orrs	r3, r2
 80027ce:	617b      	str	r3, [r7, #20]
 80027d0:	4b08      	ldr	r3, [pc, #32]	@ (80027f4 <HAL_GPIO_Init+0x2d0>)
 80027d2:	697a      	ldr	r2, [r7, #20]
 80027d4:	605a      	str	r2, [r3, #4]
 80027d6:	693b      	ldr	r3, [r7, #16]
 80027d8:	3301      	adds	r3, #1
 80027da:	613b      	str	r3, [r7, #16]
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	681a      	ldr	r2, [r3, #0]
 80027e0:	693b      	ldr	r3, [r7, #16]
 80027e2:	40da      	lsrs	r2, r3
 80027e4:	1e13      	subs	r3, r2, #0
 80027e6:	d000      	beq.n	80027ea <HAL_GPIO_Init+0x2c6>
 80027e8:	e6a4      	b.n	8002534 <HAL_GPIO_Init+0x10>
 80027ea:	46c0      	nop			@ (mov r8, r8)
 80027ec:	46c0      	nop			@ (mov r8, r8)
 80027ee:	46bd      	mov	sp, r7
 80027f0:	b006      	add	sp, #24
 80027f2:	bd80      	pop	{r7, pc}
 80027f4:	40021800 	.word	0x40021800
 80027f8:	50000400 	.word	0x50000400
 80027fc:	50000800 	.word	0x50000800
 8002800:	50000c00 	.word	0x50000c00
 8002804:	50001400 	.word	0x50001400

08002808 <HAL_GPIO_DeInit>:
 8002808:	b580      	push	{r7, lr}
 800280a:	b086      	sub	sp, #24
 800280c:	af00      	add	r7, sp, #0
 800280e:	6078      	str	r0, [r7, #4]
 8002810:	6039      	str	r1, [r7, #0]
 8002812:	2300      	movs	r3, #0
 8002814:	617b      	str	r3, [r7, #20]
 8002816:	e0ba      	b.n	800298e <HAL_GPIO_DeInit+0x186>
 8002818:	2201      	movs	r2, #1
 800281a:	697b      	ldr	r3, [r7, #20]
 800281c:	409a      	lsls	r2, r3
 800281e:	683b      	ldr	r3, [r7, #0]
 8002820:	4013      	ands	r3, r2
 8002822:	613b      	str	r3, [r7, #16]
 8002824:	693b      	ldr	r3, [r7, #16]
 8002826:	2b00      	cmp	r3, #0
 8002828:	d100      	bne.n	800282c <HAL_GPIO_DeInit+0x24>
 800282a:	e0ad      	b.n	8002988 <HAL_GPIO_DeInit+0x180>
 800282c:	4a5d      	ldr	r2, [pc, #372]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 800282e:	697b      	ldr	r3, [r7, #20]
 8002830:	089b      	lsrs	r3, r3, #2
 8002832:	3318      	adds	r3, #24
 8002834:	009b      	lsls	r3, r3, #2
 8002836:	589b      	ldr	r3, [r3, r2]
 8002838:	60fb      	str	r3, [r7, #12]
 800283a:	697b      	ldr	r3, [r7, #20]
 800283c:	2203      	movs	r2, #3
 800283e:	4013      	ands	r3, r2
 8002840:	00db      	lsls	r3, r3, #3
 8002842:	220f      	movs	r2, #15
 8002844:	409a      	lsls	r2, r3
 8002846:	68fb      	ldr	r3, [r7, #12]
 8002848:	4013      	ands	r3, r2
 800284a:	60fb      	str	r3, [r7, #12]
 800284c:	687a      	ldr	r2, [r7, #4]
 800284e:	23a0      	movs	r3, #160	@ 0xa0
 8002850:	05db      	lsls	r3, r3, #23
 8002852:	429a      	cmp	r2, r3
 8002854:	d019      	beq.n	800288a <HAL_GPIO_DeInit+0x82>
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	4a53      	ldr	r2, [pc, #332]	@ (80029a8 <HAL_GPIO_DeInit+0x1a0>)
 800285a:	4293      	cmp	r3, r2
 800285c:	d013      	beq.n	8002886 <HAL_GPIO_DeInit+0x7e>
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	4a52      	ldr	r2, [pc, #328]	@ (80029ac <HAL_GPIO_DeInit+0x1a4>)
 8002862:	4293      	cmp	r3, r2
 8002864:	d00d      	beq.n	8002882 <HAL_GPIO_DeInit+0x7a>
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	4a51      	ldr	r2, [pc, #324]	@ (80029b0 <HAL_GPIO_DeInit+0x1a8>)
 800286a:	4293      	cmp	r3, r2
 800286c:	d007      	beq.n	800287e <HAL_GPIO_DeInit+0x76>
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	4a50      	ldr	r2, [pc, #320]	@ (80029b4 <HAL_GPIO_DeInit+0x1ac>)
 8002872:	4293      	cmp	r3, r2
 8002874:	d101      	bne.n	800287a <HAL_GPIO_DeInit+0x72>
 8002876:	2305      	movs	r3, #5
 8002878:	e008      	b.n	800288c <HAL_GPIO_DeInit+0x84>
 800287a:	2306      	movs	r3, #6
 800287c:	e006      	b.n	800288c <HAL_GPIO_DeInit+0x84>
 800287e:	2303      	movs	r3, #3
 8002880:	e004      	b.n	800288c <HAL_GPIO_DeInit+0x84>
 8002882:	2302      	movs	r3, #2
 8002884:	e002      	b.n	800288c <HAL_GPIO_DeInit+0x84>
 8002886:	2301      	movs	r3, #1
 8002888:	e000      	b.n	800288c <HAL_GPIO_DeInit+0x84>
 800288a:	2300      	movs	r3, #0
 800288c:	697a      	ldr	r2, [r7, #20]
 800288e:	2103      	movs	r1, #3
 8002890:	400a      	ands	r2, r1
 8002892:	00d2      	lsls	r2, r2, #3
 8002894:	4093      	lsls	r3, r2
 8002896:	68fa      	ldr	r2, [r7, #12]
 8002898:	429a      	cmp	r2, r3
 800289a:	d136      	bne.n	800290a <HAL_GPIO_DeInit+0x102>
 800289c:	4a41      	ldr	r2, [pc, #260]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 800289e:	2380      	movs	r3, #128	@ 0x80
 80028a0:	58d3      	ldr	r3, [r2, r3]
 80028a2:	693a      	ldr	r2, [r7, #16]
 80028a4:	43d2      	mvns	r2, r2
 80028a6:	493f      	ldr	r1, [pc, #252]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028a8:	4013      	ands	r3, r2
 80028aa:	2280      	movs	r2, #128	@ 0x80
 80028ac:	508b      	str	r3, [r1, r2]
 80028ae:	4a3d      	ldr	r2, [pc, #244]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028b0:	2384      	movs	r3, #132	@ 0x84
 80028b2:	58d3      	ldr	r3, [r2, r3]
 80028b4:	693a      	ldr	r2, [r7, #16]
 80028b6:	43d2      	mvns	r2, r2
 80028b8:	493a      	ldr	r1, [pc, #232]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028ba:	4013      	ands	r3, r2
 80028bc:	2284      	movs	r2, #132	@ 0x84
 80028be:	508b      	str	r3, [r1, r2]
 80028c0:	4b38      	ldr	r3, [pc, #224]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028c2:	681a      	ldr	r2, [r3, #0]
 80028c4:	693b      	ldr	r3, [r7, #16]
 80028c6:	43d9      	mvns	r1, r3
 80028c8:	4b36      	ldr	r3, [pc, #216]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028ca:	400a      	ands	r2, r1
 80028cc:	601a      	str	r2, [r3, #0]
 80028ce:	4b35      	ldr	r3, [pc, #212]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028d0:	685a      	ldr	r2, [r3, #4]
 80028d2:	693b      	ldr	r3, [r7, #16]
 80028d4:	43d9      	mvns	r1, r3
 80028d6:	4b33      	ldr	r3, [pc, #204]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028d8:	400a      	ands	r2, r1
 80028da:	605a      	str	r2, [r3, #4]
 80028dc:	697b      	ldr	r3, [r7, #20]
 80028de:	2203      	movs	r2, #3
 80028e0:	4013      	ands	r3, r2
 80028e2:	00db      	lsls	r3, r3, #3
 80028e4:	220f      	movs	r2, #15
 80028e6:	409a      	lsls	r2, r3
 80028e8:	0013      	movs	r3, r2
 80028ea:	60fb      	str	r3, [r7, #12]
 80028ec:	4a2d      	ldr	r2, [pc, #180]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028ee:	697b      	ldr	r3, [r7, #20]
 80028f0:	089b      	lsrs	r3, r3, #2
 80028f2:	3318      	adds	r3, #24
 80028f4:	009b      	lsls	r3, r3, #2
 80028f6:	589a      	ldr	r2, [r3, r2]
 80028f8:	68fb      	ldr	r3, [r7, #12]
 80028fa:	43d9      	mvns	r1, r3
 80028fc:	4829      	ldr	r0, [pc, #164]	@ (80029a4 <HAL_GPIO_DeInit+0x19c>)
 80028fe:	697b      	ldr	r3, [r7, #20]
 8002900:	089b      	lsrs	r3, r3, #2
 8002902:	400a      	ands	r2, r1
 8002904:	3318      	adds	r3, #24
 8002906:	009b      	lsls	r3, r3, #2
 8002908:	501a      	str	r2, [r3, r0]
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	681a      	ldr	r2, [r3, #0]
 800290e:	697b      	ldr	r3, [r7, #20]
 8002910:	005b      	lsls	r3, r3, #1
 8002912:	2103      	movs	r1, #3
 8002914:	4099      	lsls	r1, r3
 8002916:	000b      	movs	r3, r1
 8002918:	431a      	orrs	r2, r3
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	601a      	str	r2, [r3, #0]
 800291e:	697b      	ldr	r3, [r7, #20]
 8002920:	08da      	lsrs	r2, r3, #3
 8002922:	687b      	ldr	r3, [r7, #4]
 8002924:	3208      	adds	r2, #8
 8002926:	0092      	lsls	r2, r2, #2
 8002928:	58d3      	ldr	r3, [r2, r3]
 800292a:	697a      	ldr	r2, [r7, #20]
 800292c:	2107      	movs	r1, #7
 800292e:	400a      	ands	r2, r1
 8002930:	0092      	lsls	r2, r2, #2
 8002932:	210f      	movs	r1, #15
 8002934:	4091      	lsls	r1, r2
 8002936:	000a      	movs	r2, r1
 8002938:	43d1      	mvns	r1, r2
 800293a:	697a      	ldr	r2, [r7, #20]
 800293c:	08d2      	lsrs	r2, r2, #3
 800293e:	4019      	ands	r1, r3
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	3208      	adds	r2, #8
 8002944:	0092      	lsls	r2, r2, #2
 8002946:	50d1      	str	r1, [r2, r3]
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	689b      	ldr	r3, [r3, #8]
 800294c:	697a      	ldr	r2, [r7, #20]
 800294e:	0052      	lsls	r2, r2, #1
 8002950:	2103      	movs	r1, #3
 8002952:	4091      	lsls	r1, r2
 8002954:	000a      	movs	r2, r1
 8002956:	43d2      	mvns	r2, r2
 8002958:	401a      	ands	r2, r3
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	609a      	str	r2, [r3, #8]
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	685b      	ldr	r3, [r3, #4]
 8002962:	2101      	movs	r1, #1
 8002964:	697a      	ldr	r2, [r7, #20]
 8002966:	4091      	lsls	r1, r2
 8002968:	000a      	movs	r2, r1
 800296a:	43d2      	mvns	r2, r2
 800296c:	401a      	ands	r2, r3
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	605a      	str	r2, [r3, #4]
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	68db      	ldr	r3, [r3, #12]
 8002976:	697a      	ldr	r2, [r7, #20]
 8002978:	0052      	lsls	r2, r2, #1
 800297a:	2103      	movs	r1, #3
 800297c:	4091      	lsls	r1, r2
 800297e:	000a      	movs	r2, r1
 8002980:	43d2      	mvns	r2, r2
 8002982:	401a      	ands	r2, r3
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	60da      	str	r2, [r3, #12]
 8002988:	697b      	ldr	r3, [r7, #20]
 800298a:	3301      	adds	r3, #1
 800298c:	617b      	str	r3, [r7, #20]
 800298e:	683a      	ldr	r2, [r7, #0]
 8002990:	697b      	ldr	r3, [r7, #20]
 8002992:	40da      	lsrs	r2, r3
 8002994:	1e13      	subs	r3, r2, #0
 8002996:	d000      	beq.n	800299a <HAL_GPIO_DeInit+0x192>
 8002998:	e73e      	b.n	8002818 <HAL_GPIO_DeInit+0x10>
 800299a:	46c0      	nop			@ (mov r8, r8)
 800299c:	46c0      	nop			@ (mov r8, r8)
 800299e:	46bd      	mov	sp, r7
 80029a0:	b006      	add	sp, #24
 80029a2:	bd80      	pop	{r7, pc}
 80029a4:	40021800 	.word	0x40021800
 80029a8:	50000400 	.word	0x50000400
 80029ac:	50000800 	.word	0x50000800
 80029b0:	50000c00 	.word	0x50000c00
 80029b4:	50001400 	.word	0x50001400

080029b8 <HAL_GPIO_ReadPin>:
 80029b8:	b580      	push	{r7, lr}
 80029ba:	b084      	sub	sp, #16
 80029bc:	af00      	add	r7, sp, #0
 80029be:	6078      	str	r0, [r7, #4]
 80029c0:	000a      	movs	r2, r1
 80029c2:	1cbb      	adds	r3, r7, #2
 80029c4:	801a      	strh	r2, [r3, #0]
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	691b      	ldr	r3, [r3, #16]
 80029ca:	1cba      	adds	r2, r7, #2
 80029cc:	8812      	ldrh	r2, [r2, #0]
 80029ce:	4013      	ands	r3, r2
 80029d0:	d004      	beq.n	80029dc <HAL_GPIO_ReadPin+0x24>
 80029d2:	230f      	movs	r3, #15
 80029d4:	18fb      	adds	r3, r7, r3
 80029d6:	2201      	movs	r2, #1
 80029d8:	701a      	strb	r2, [r3, #0]
 80029da:	e003      	b.n	80029e4 <HAL_GPIO_ReadPin+0x2c>
 80029dc:	230f      	movs	r3, #15
 80029de:	18fb      	adds	r3, r7, r3
 80029e0:	2200      	movs	r2, #0
 80029e2:	701a      	strb	r2, [r3, #0]
 80029e4:	230f      	movs	r3, #15
 80029e6:	18fb      	adds	r3, r7, r3
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	0018      	movs	r0, r3
 80029ec:	46bd      	mov	sp, r7
 80029ee:	b004      	add	sp, #16
 80029f0:	bd80      	pop	{r7, pc}

080029f2 <HAL_GPIO_WritePin>:
 80029f2:	b580      	push	{r7, lr}
 80029f4:	b082      	sub	sp, #8
 80029f6:	af00      	add	r7, sp, #0
 80029f8:	6078      	str	r0, [r7, #4]
 80029fa:	0008      	movs	r0, r1
 80029fc:	0011      	movs	r1, r2
 80029fe:	1cbb      	adds	r3, r7, #2
 8002a00:	1c02      	adds	r2, r0, #0
 8002a02:	801a      	strh	r2, [r3, #0]
 8002a04:	1c7b      	adds	r3, r7, #1
 8002a06:	1c0a      	adds	r2, r1, #0
 8002a08:	701a      	strb	r2, [r3, #0]
 8002a0a:	1c7b      	adds	r3, r7, #1
 8002a0c:	781b      	ldrb	r3, [r3, #0]
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d004      	beq.n	8002a1c <HAL_GPIO_WritePin+0x2a>
 8002a12:	1cbb      	adds	r3, r7, #2
 8002a14:	881a      	ldrh	r2, [r3, #0]
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	619a      	str	r2, [r3, #24]
 8002a1a:	e003      	b.n	8002a24 <HAL_GPIO_WritePin+0x32>
 8002a1c:	1cbb      	adds	r3, r7, #2
 8002a1e:	881a      	ldrh	r2, [r3, #0]
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	629a      	str	r2, [r3, #40]	@ 0x28
 8002a24:	46c0      	nop			@ (mov r8, r8)
 8002a26:	46bd      	mov	sp, r7
 8002a28:	b002      	add	sp, #8
 8002a2a:	bd80      	pop	{r7, pc}

08002a2c <HAL_RCC_OscConfig>:
 8002a2c:	b580      	push	{r7, lr}
 8002a2e:	b086      	sub	sp, #24
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	6078      	str	r0, [r7, #4]
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d101      	bne.n	8002a3e <HAL_RCC_OscConfig+0x12>
 8002a3a:	2301      	movs	r3, #1
 8002a3c:	e20f      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	2201      	movs	r2, #1
 8002a44:	4013      	ands	r3, r2
 8002a46:	d100      	bne.n	8002a4a <HAL_RCC_OscConfig+0x1e>
 8002a48:	e069      	b.n	8002b1e <HAL_RCC_OscConfig+0xf2>
 8002a4a:	4bc8      	ldr	r3, [pc, #800]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002a4c:	689b      	ldr	r3, [r3, #8]
 8002a4e:	2238      	movs	r2, #56	@ 0x38
 8002a50:	4013      	ands	r3, r2
 8002a52:	617b      	str	r3, [r7, #20]
 8002a54:	697b      	ldr	r3, [r7, #20]
 8002a56:	2b08      	cmp	r3, #8
 8002a58:	d105      	bne.n	8002a66 <HAL_RCC_OscConfig+0x3a>
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	685b      	ldr	r3, [r3, #4]
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d15d      	bne.n	8002b1e <HAL_RCC_OscConfig+0xf2>
 8002a62:	2301      	movs	r3, #1
 8002a64:	e1fb      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	685a      	ldr	r2, [r3, #4]
 8002a6a:	2380      	movs	r3, #128	@ 0x80
 8002a6c:	025b      	lsls	r3, r3, #9
 8002a6e:	429a      	cmp	r2, r3
 8002a70:	d107      	bne.n	8002a82 <HAL_RCC_OscConfig+0x56>
 8002a72:	4bbe      	ldr	r3, [pc, #760]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002a74:	681a      	ldr	r2, [r3, #0]
 8002a76:	4bbd      	ldr	r3, [pc, #756]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002a78:	2180      	movs	r1, #128	@ 0x80
 8002a7a:	0249      	lsls	r1, r1, #9
 8002a7c:	430a      	orrs	r2, r1
 8002a7e:	601a      	str	r2, [r3, #0]
 8002a80:	e020      	b.n	8002ac4 <HAL_RCC_OscConfig+0x98>
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	685a      	ldr	r2, [r3, #4]
 8002a86:	23a0      	movs	r3, #160	@ 0xa0
 8002a88:	02db      	lsls	r3, r3, #11
 8002a8a:	429a      	cmp	r2, r3
 8002a8c:	d10e      	bne.n	8002aac <HAL_RCC_OscConfig+0x80>
 8002a8e:	4bb7      	ldr	r3, [pc, #732]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002a90:	681a      	ldr	r2, [r3, #0]
 8002a92:	4bb6      	ldr	r3, [pc, #728]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002a94:	2180      	movs	r1, #128	@ 0x80
 8002a96:	02c9      	lsls	r1, r1, #11
 8002a98:	430a      	orrs	r2, r1
 8002a9a:	601a      	str	r2, [r3, #0]
 8002a9c:	4bb3      	ldr	r3, [pc, #716]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002a9e:	681a      	ldr	r2, [r3, #0]
 8002aa0:	4bb2      	ldr	r3, [pc, #712]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002aa2:	2180      	movs	r1, #128	@ 0x80
 8002aa4:	0249      	lsls	r1, r1, #9
 8002aa6:	430a      	orrs	r2, r1
 8002aa8:	601a      	str	r2, [r3, #0]
 8002aaa:	e00b      	b.n	8002ac4 <HAL_RCC_OscConfig+0x98>
 8002aac:	4baf      	ldr	r3, [pc, #700]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002aae:	681a      	ldr	r2, [r3, #0]
 8002ab0:	4bae      	ldr	r3, [pc, #696]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002ab2:	49af      	ldr	r1, [pc, #700]	@ (8002d70 <HAL_RCC_OscConfig+0x344>)
 8002ab4:	400a      	ands	r2, r1
 8002ab6:	601a      	str	r2, [r3, #0]
 8002ab8:	4bac      	ldr	r3, [pc, #688]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002aba:	681a      	ldr	r2, [r3, #0]
 8002abc:	4bab      	ldr	r3, [pc, #684]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002abe:	49ad      	ldr	r1, [pc, #692]	@ (8002d74 <HAL_RCC_OscConfig+0x348>)
 8002ac0:	400a      	ands	r2, r1
 8002ac2:	601a      	str	r2, [r3, #0]
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	685b      	ldr	r3, [r3, #4]
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d014      	beq.n	8002af6 <HAL_RCC_OscConfig+0xca>
 8002acc:	f7ff f83a 	bl	8001b44 <HAL_GetTick>
 8002ad0:	0003      	movs	r3, r0
 8002ad2:	613b      	str	r3, [r7, #16]
 8002ad4:	e008      	b.n	8002ae8 <HAL_RCC_OscConfig+0xbc>
 8002ad6:	f7ff f835 	bl	8001b44 <HAL_GetTick>
 8002ada:	0002      	movs	r2, r0
 8002adc:	693b      	ldr	r3, [r7, #16]
 8002ade:	1ad3      	subs	r3, r2, r3
 8002ae0:	2b64      	cmp	r3, #100	@ 0x64
 8002ae2:	d901      	bls.n	8002ae8 <HAL_RCC_OscConfig+0xbc>
 8002ae4:	2303      	movs	r3, #3
 8002ae6:	e1ba      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002ae8:	4ba0      	ldr	r3, [pc, #640]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002aea:	681a      	ldr	r2, [r3, #0]
 8002aec:	2380      	movs	r3, #128	@ 0x80
 8002aee:	029b      	lsls	r3, r3, #10
 8002af0:	4013      	ands	r3, r2
 8002af2:	d0f0      	beq.n	8002ad6 <HAL_RCC_OscConfig+0xaa>
 8002af4:	e013      	b.n	8002b1e <HAL_RCC_OscConfig+0xf2>
 8002af6:	f7ff f825 	bl	8001b44 <HAL_GetTick>
 8002afa:	0003      	movs	r3, r0
 8002afc:	613b      	str	r3, [r7, #16]
 8002afe:	e008      	b.n	8002b12 <HAL_RCC_OscConfig+0xe6>
 8002b00:	f7ff f820 	bl	8001b44 <HAL_GetTick>
 8002b04:	0002      	movs	r2, r0
 8002b06:	693b      	ldr	r3, [r7, #16]
 8002b08:	1ad3      	subs	r3, r2, r3
 8002b0a:	2b64      	cmp	r3, #100	@ 0x64
 8002b0c:	d901      	bls.n	8002b12 <HAL_RCC_OscConfig+0xe6>
 8002b0e:	2303      	movs	r3, #3
 8002b10:	e1a5      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002b12:	4b96      	ldr	r3, [pc, #600]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002b14:	681a      	ldr	r2, [r3, #0]
 8002b16:	2380      	movs	r3, #128	@ 0x80
 8002b18:	029b      	lsls	r3, r3, #10
 8002b1a:	4013      	ands	r3, r2
 8002b1c:	d1f0      	bne.n	8002b00 <HAL_RCC_OscConfig+0xd4>
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	2202      	movs	r2, #2
 8002b24:	4013      	ands	r3, r2
 8002b26:	d100      	bne.n	8002b2a <HAL_RCC_OscConfig+0xfe>
 8002b28:	e086      	b.n	8002c38 <HAL_RCC_OscConfig+0x20c>
 8002b2a:	4b90      	ldr	r3, [pc, #576]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002b2c:	689b      	ldr	r3, [r3, #8]
 8002b2e:	2238      	movs	r2, #56	@ 0x38
 8002b30:	4013      	ands	r3, r2
 8002b32:	617b      	str	r3, [r7, #20]
 8002b34:	697b      	ldr	r3, [r7, #20]
 8002b36:	2b00      	cmp	r3, #0
 8002b38:	d12f      	bne.n	8002b9a <HAL_RCC_OscConfig+0x16e>
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	68db      	ldr	r3, [r3, #12]
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d101      	bne.n	8002b46 <HAL_RCC_OscConfig+0x11a>
 8002b42:	2301      	movs	r3, #1
 8002b44:	e18b      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002b46:	4b89      	ldr	r3, [pc, #548]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002b48:	685b      	ldr	r3, [r3, #4]
 8002b4a:	4a8b      	ldr	r2, [pc, #556]	@ (8002d78 <HAL_RCC_OscConfig+0x34c>)
 8002b4c:	4013      	ands	r3, r2
 8002b4e:	0019      	movs	r1, r3
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	695b      	ldr	r3, [r3, #20]
 8002b54:	021a      	lsls	r2, r3, #8
 8002b56:	4b85      	ldr	r3, [pc, #532]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002b58:	430a      	orrs	r2, r1
 8002b5a:	605a      	str	r2, [r3, #4]
 8002b5c:	697b      	ldr	r3, [r7, #20]
 8002b5e:	2b00      	cmp	r3, #0
 8002b60:	d112      	bne.n	8002b88 <HAL_RCC_OscConfig+0x15c>
 8002b62:	4b82      	ldr	r3, [pc, #520]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	4a85      	ldr	r2, [pc, #532]	@ (8002d7c <HAL_RCC_OscConfig+0x350>)
 8002b68:	4013      	ands	r3, r2
 8002b6a:	0019      	movs	r1, r3
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	691a      	ldr	r2, [r3, #16]
 8002b70:	4b7e      	ldr	r3, [pc, #504]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002b72:	430a      	orrs	r2, r1
 8002b74:	601a      	str	r2, [r3, #0]
 8002b76:	4b7d      	ldr	r3, [pc, #500]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	0adb      	lsrs	r3, r3, #11
 8002b7c:	2207      	movs	r2, #7
 8002b7e:	4013      	ands	r3, r2
 8002b80:	4a7f      	ldr	r2, [pc, #508]	@ (8002d80 <HAL_RCC_OscConfig+0x354>)
 8002b82:	40da      	lsrs	r2, r3
 8002b84:	4b7f      	ldr	r3, [pc, #508]	@ (8002d84 <HAL_RCC_OscConfig+0x358>)
 8002b86:	601a      	str	r2, [r3, #0]
 8002b88:	4b7f      	ldr	r3, [pc, #508]	@ (8002d88 <HAL_RCC_OscConfig+0x35c>)
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	0018      	movs	r0, r3
 8002b8e:	f7fe ff7d 	bl	8001a8c <HAL_InitTick>
 8002b92:	1e03      	subs	r3, r0, #0
 8002b94:	d050      	beq.n	8002c38 <HAL_RCC_OscConfig+0x20c>
 8002b96:	2301      	movs	r3, #1
 8002b98:	e161      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	68db      	ldr	r3, [r3, #12]
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d030      	beq.n	8002c04 <HAL_RCC_OscConfig+0x1d8>
 8002ba2:	4b72      	ldr	r3, [pc, #456]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	4a75      	ldr	r2, [pc, #468]	@ (8002d7c <HAL_RCC_OscConfig+0x350>)
 8002ba8:	4013      	ands	r3, r2
 8002baa:	0019      	movs	r1, r3
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	691a      	ldr	r2, [r3, #16]
 8002bb0:	4b6e      	ldr	r3, [pc, #440]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002bb2:	430a      	orrs	r2, r1
 8002bb4:	601a      	str	r2, [r3, #0]
 8002bb6:	4b6d      	ldr	r3, [pc, #436]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002bb8:	681a      	ldr	r2, [r3, #0]
 8002bba:	4b6c      	ldr	r3, [pc, #432]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002bbc:	2180      	movs	r1, #128	@ 0x80
 8002bbe:	0049      	lsls	r1, r1, #1
 8002bc0:	430a      	orrs	r2, r1
 8002bc2:	601a      	str	r2, [r3, #0]
 8002bc4:	f7fe ffbe 	bl	8001b44 <HAL_GetTick>
 8002bc8:	0003      	movs	r3, r0
 8002bca:	613b      	str	r3, [r7, #16]
 8002bcc:	e008      	b.n	8002be0 <HAL_RCC_OscConfig+0x1b4>
 8002bce:	f7fe ffb9 	bl	8001b44 <HAL_GetTick>
 8002bd2:	0002      	movs	r2, r0
 8002bd4:	693b      	ldr	r3, [r7, #16]
 8002bd6:	1ad3      	subs	r3, r2, r3
 8002bd8:	2b02      	cmp	r3, #2
 8002bda:	d901      	bls.n	8002be0 <HAL_RCC_OscConfig+0x1b4>
 8002bdc:	2303      	movs	r3, #3
 8002bde:	e13e      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002be0:	4b62      	ldr	r3, [pc, #392]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002be2:	681a      	ldr	r2, [r3, #0]
 8002be4:	2380      	movs	r3, #128	@ 0x80
 8002be6:	00db      	lsls	r3, r3, #3
 8002be8:	4013      	ands	r3, r2
 8002bea:	d0f0      	beq.n	8002bce <HAL_RCC_OscConfig+0x1a2>
 8002bec:	4b5f      	ldr	r3, [pc, #380]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002bee:	685b      	ldr	r3, [r3, #4]
 8002bf0:	4a61      	ldr	r2, [pc, #388]	@ (8002d78 <HAL_RCC_OscConfig+0x34c>)
 8002bf2:	4013      	ands	r3, r2
 8002bf4:	0019      	movs	r1, r3
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	695b      	ldr	r3, [r3, #20]
 8002bfa:	021a      	lsls	r2, r3, #8
 8002bfc:	4b5b      	ldr	r3, [pc, #364]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002bfe:	430a      	orrs	r2, r1
 8002c00:	605a      	str	r2, [r3, #4]
 8002c02:	e019      	b.n	8002c38 <HAL_RCC_OscConfig+0x20c>
 8002c04:	4b59      	ldr	r3, [pc, #356]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c06:	681a      	ldr	r2, [r3, #0]
 8002c08:	4b58      	ldr	r3, [pc, #352]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c0a:	4960      	ldr	r1, [pc, #384]	@ (8002d8c <HAL_RCC_OscConfig+0x360>)
 8002c0c:	400a      	ands	r2, r1
 8002c0e:	601a      	str	r2, [r3, #0]
 8002c10:	f7fe ff98 	bl	8001b44 <HAL_GetTick>
 8002c14:	0003      	movs	r3, r0
 8002c16:	613b      	str	r3, [r7, #16]
 8002c18:	e008      	b.n	8002c2c <HAL_RCC_OscConfig+0x200>
 8002c1a:	f7fe ff93 	bl	8001b44 <HAL_GetTick>
 8002c1e:	0002      	movs	r2, r0
 8002c20:	693b      	ldr	r3, [r7, #16]
 8002c22:	1ad3      	subs	r3, r2, r3
 8002c24:	2b02      	cmp	r3, #2
 8002c26:	d901      	bls.n	8002c2c <HAL_RCC_OscConfig+0x200>
 8002c28:	2303      	movs	r3, #3
 8002c2a:	e118      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002c2c:	4b4f      	ldr	r3, [pc, #316]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c2e:	681a      	ldr	r2, [r3, #0]
 8002c30:	2380      	movs	r3, #128	@ 0x80
 8002c32:	00db      	lsls	r3, r3, #3
 8002c34:	4013      	ands	r3, r2
 8002c36:	d1f0      	bne.n	8002c1a <HAL_RCC_OscConfig+0x1ee>
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	2208      	movs	r2, #8
 8002c3e:	4013      	ands	r3, r2
 8002c40:	d042      	beq.n	8002cc8 <HAL_RCC_OscConfig+0x29c>
 8002c42:	4b4a      	ldr	r3, [pc, #296]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c44:	689b      	ldr	r3, [r3, #8]
 8002c46:	2238      	movs	r2, #56	@ 0x38
 8002c48:	4013      	ands	r3, r2
 8002c4a:	2b18      	cmp	r3, #24
 8002c4c:	d105      	bne.n	8002c5a <HAL_RCC_OscConfig+0x22e>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	699b      	ldr	r3, [r3, #24]
 8002c52:	2b00      	cmp	r3, #0
 8002c54:	d138      	bne.n	8002cc8 <HAL_RCC_OscConfig+0x29c>
 8002c56:	2301      	movs	r3, #1
 8002c58:	e101      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	699b      	ldr	r3, [r3, #24]
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	d019      	beq.n	8002c96 <HAL_RCC_OscConfig+0x26a>
 8002c62:	4b42      	ldr	r3, [pc, #264]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c64:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8002c66:	4b41      	ldr	r3, [pc, #260]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c68:	2101      	movs	r1, #1
 8002c6a:	430a      	orrs	r2, r1
 8002c6c:	661a      	str	r2, [r3, #96]	@ 0x60
 8002c6e:	f7fe ff69 	bl	8001b44 <HAL_GetTick>
 8002c72:	0003      	movs	r3, r0
 8002c74:	613b      	str	r3, [r7, #16]
 8002c76:	e008      	b.n	8002c8a <HAL_RCC_OscConfig+0x25e>
 8002c78:	f7fe ff64 	bl	8001b44 <HAL_GetTick>
 8002c7c:	0002      	movs	r2, r0
 8002c7e:	693b      	ldr	r3, [r7, #16]
 8002c80:	1ad3      	subs	r3, r2, r3
 8002c82:	2b02      	cmp	r3, #2
 8002c84:	d901      	bls.n	8002c8a <HAL_RCC_OscConfig+0x25e>
 8002c86:	2303      	movs	r3, #3
 8002c88:	e0e9      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002c8a:	4b38      	ldr	r3, [pc, #224]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c8c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002c8e:	2202      	movs	r2, #2
 8002c90:	4013      	ands	r3, r2
 8002c92:	d0f1      	beq.n	8002c78 <HAL_RCC_OscConfig+0x24c>
 8002c94:	e018      	b.n	8002cc8 <HAL_RCC_OscConfig+0x29c>
 8002c96:	4b35      	ldr	r3, [pc, #212]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c98:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8002c9a:	4b34      	ldr	r3, [pc, #208]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002c9c:	2101      	movs	r1, #1
 8002c9e:	438a      	bics	r2, r1
 8002ca0:	661a      	str	r2, [r3, #96]	@ 0x60
 8002ca2:	f7fe ff4f 	bl	8001b44 <HAL_GetTick>
 8002ca6:	0003      	movs	r3, r0
 8002ca8:	613b      	str	r3, [r7, #16]
 8002caa:	e008      	b.n	8002cbe <HAL_RCC_OscConfig+0x292>
 8002cac:	f7fe ff4a 	bl	8001b44 <HAL_GetTick>
 8002cb0:	0002      	movs	r2, r0
 8002cb2:	693b      	ldr	r3, [r7, #16]
 8002cb4:	1ad3      	subs	r3, r2, r3
 8002cb6:	2b02      	cmp	r3, #2
 8002cb8:	d901      	bls.n	8002cbe <HAL_RCC_OscConfig+0x292>
 8002cba:	2303      	movs	r3, #3
 8002cbc:	e0cf      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002cbe:	4b2b      	ldr	r3, [pc, #172]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002cc0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002cc2:	2202      	movs	r2, #2
 8002cc4:	4013      	ands	r3, r2
 8002cc6:	d1f1      	bne.n	8002cac <HAL_RCC_OscConfig+0x280>
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	2204      	movs	r2, #4
 8002cce:	4013      	ands	r3, r2
 8002cd0:	d100      	bne.n	8002cd4 <HAL_RCC_OscConfig+0x2a8>
 8002cd2:	e084      	b.n	8002dde <HAL_RCC_OscConfig+0x3b2>
 8002cd4:	230f      	movs	r3, #15
 8002cd6:	18fb      	adds	r3, r7, r3
 8002cd8:	2200      	movs	r2, #0
 8002cda:	701a      	strb	r2, [r3, #0]
 8002cdc:	4b23      	ldr	r3, [pc, #140]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002cde:	689b      	ldr	r3, [r3, #8]
 8002ce0:	2238      	movs	r2, #56	@ 0x38
 8002ce2:	4013      	ands	r3, r2
 8002ce4:	2b20      	cmp	r3, #32
 8002ce6:	d106      	bne.n	8002cf6 <HAL_RCC_OscConfig+0x2ca>
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	689b      	ldr	r3, [r3, #8]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d000      	beq.n	8002cf2 <HAL_RCC_OscConfig+0x2c6>
 8002cf0:	e075      	b.n	8002dde <HAL_RCC_OscConfig+0x3b2>
 8002cf2:	2301      	movs	r3, #1
 8002cf4:	e0b3      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	689b      	ldr	r3, [r3, #8]
 8002cfa:	2b01      	cmp	r3, #1
 8002cfc:	d106      	bne.n	8002d0c <HAL_RCC_OscConfig+0x2e0>
 8002cfe:	4b1b      	ldr	r3, [pc, #108]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d00:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d02:	4b1a      	ldr	r3, [pc, #104]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d04:	2101      	movs	r1, #1
 8002d06:	430a      	orrs	r2, r1
 8002d08:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d0a:	e01c      	b.n	8002d46 <HAL_RCC_OscConfig+0x31a>
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	689b      	ldr	r3, [r3, #8]
 8002d10:	2b05      	cmp	r3, #5
 8002d12:	d10c      	bne.n	8002d2e <HAL_RCC_OscConfig+0x302>
 8002d14:	4b15      	ldr	r3, [pc, #84]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d16:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d18:	4b14      	ldr	r3, [pc, #80]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d1a:	2104      	movs	r1, #4
 8002d1c:	430a      	orrs	r2, r1
 8002d1e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d20:	4b12      	ldr	r3, [pc, #72]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d22:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d24:	4b11      	ldr	r3, [pc, #68]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d26:	2101      	movs	r1, #1
 8002d28:	430a      	orrs	r2, r1
 8002d2a:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d2c:	e00b      	b.n	8002d46 <HAL_RCC_OscConfig+0x31a>
 8002d2e:	4b0f      	ldr	r3, [pc, #60]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d30:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d32:	4b0e      	ldr	r3, [pc, #56]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d34:	2101      	movs	r1, #1
 8002d36:	438a      	bics	r2, r1
 8002d38:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d3a:	4b0c      	ldr	r3, [pc, #48]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d3c:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d3e:	4b0b      	ldr	r3, [pc, #44]	@ (8002d6c <HAL_RCC_OscConfig+0x340>)
 8002d40:	2104      	movs	r1, #4
 8002d42:	438a      	bics	r2, r1
 8002d44:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	689b      	ldr	r3, [r3, #8]
 8002d4a:	2b00      	cmp	r3, #0
 8002d4c:	d028      	beq.n	8002da0 <HAL_RCC_OscConfig+0x374>
 8002d4e:	f7fe fef9 	bl	8001b44 <HAL_GetTick>
 8002d52:	0003      	movs	r3, r0
 8002d54:	613b      	str	r3, [r7, #16]
 8002d56:	e01d      	b.n	8002d94 <HAL_RCC_OscConfig+0x368>
 8002d58:	f7fe fef4 	bl	8001b44 <HAL_GetTick>
 8002d5c:	0002      	movs	r2, r0
 8002d5e:	693b      	ldr	r3, [r7, #16]
 8002d60:	1ad3      	subs	r3, r2, r3
 8002d62:	4a0b      	ldr	r2, [pc, #44]	@ (8002d90 <HAL_RCC_OscConfig+0x364>)
 8002d64:	4293      	cmp	r3, r2
 8002d66:	d915      	bls.n	8002d94 <HAL_RCC_OscConfig+0x368>
 8002d68:	2303      	movs	r3, #3
 8002d6a:	e078      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002d6c:	40021000 	.word	0x40021000
 8002d70:	fffeffff 	.word	0xfffeffff
 8002d74:	fffbffff 	.word	0xfffbffff
 8002d78:	ffff80ff 	.word	0xffff80ff
 8002d7c:	ffffc7ff 	.word	0xffffc7ff
 8002d80:	02dc6c00 	.word	0x02dc6c00
 8002d84:	20000014 	.word	0x20000014
 8002d88:	20000018 	.word	0x20000018
 8002d8c:	fffffeff 	.word	0xfffffeff
 8002d90:	00001388 	.word	0x00001388
 8002d94:	4b34      	ldr	r3, [pc, #208]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002d96:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002d98:	2202      	movs	r2, #2
 8002d9a:	4013      	ands	r3, r2
 8002d9c:	d0dc      	beq.n	8002d58 <HAL_RCC_OscConfig+0x32c>
 8002d9e:	e013      	b.n	8002dc8 <HAL_RCC_OscConfig+0x39c>
 8002da0:	f7fe fed0 	bl	8001b44 <HAL_GetTick>
 8002da4:	0003      	movs	r3, r0
 8002da6:	613b      	str	r3, [r7, #16]
 8002da8:	e009      	b.n	8002dbe <HAL_RCC_OscConfig+0x392>
 8002daa:	f7fe fecb 	bl	8001b44 <HAL_GetTick>
 8002dae:	0002      	movs	r2, r0
 8002db0:	693b      	ldr	r3, [r7, #16]
 8002db2:	1ad3      	subs	r3, r2, r3
 8002db4:	4a2d      	ldr	r2, [pc, #180]	@ (8002e6c <HAL_RCC_OscConfig+0x440>)
 8002db6:	4293      	cmp	r3, r2
 8002db8:	d901      	bls.n	8002dbe <HAL_RCC_OscConfig+0x392>
 8002dba:	2303      	movs	r3, #3
 8002dbc:	e04f      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002dbe:	4b2a      	ldr	r3, [pc, #168]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002dc0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002dc2:	2202      	movs	r2, #2
 8002dc4:	4013      	ands	r3, r2
 8002dc6:	d1f0      	bne.n	8002daa <HAL_RCC_OscConfig+0x37e>
 8002dc8:	230f      	movs	r3, #15
 8002dca:	18fb      	adds	r3, r7, r3
 8002dcc:	781b      	ldrb	r3, [r3, #0]
 8002dce:	2b01      	cmp	r3, #1
 8002dd0:	d105      	bne.n	8002dde <HAL_RCC_OscConfig+0x3b2>
 8002dd2:	4b25      	ldr	r3, [pc, #148]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002dd4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8002dd6:	4b24      	ldr	r3, [pc, #144]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002dd8:	4925      	ldr	r1, [pc, #148]	@ (8002e70 <HAL_RCC_OscConfig+0x444>)
 8002dda:	400a      	ands	r2, r1
 8002ddc:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	2210      	movs	r2, #16
 8002de4:	4013      	ands	r3, r2
 8002de6:	d039      	beq.n	8002e5c <HAL_RCC_OscConfig+0x430>
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	69db      	ldr	r3, [r3, #28]
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d01b      	beq.n	8002e28 <HAL_RCC_OscConfig+0x3fc>
 8002df0:	4b1d      	ldr	r3, [pc, #116]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002df2:	681a      	ldr	r2, [r3, #0]
 8002df4:	4b1c      	ldr	r3, [pc, #112]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002df6:	2180      	movs	r1, #128	@ 0x80
 8002df8:	03c9      	lsls	r1, r1, #15
 8002dfa:	430a      	orrs	r2, r1
 8002dfc:	601a      	str	r2, [r3, #0]
 8002dfe:	f7fe fea1 	bl	8001b44 <HAL_GetTick>
 8002e02:	0003      	movs	r3, r0
 8002e04:	613b      	str	r3, [r7, #16]
 8002e06:	e008      	b.n	8002e1a <HAL_RCC_OscConfig+0x3ee>
 8002e08:	f7fe fe9c 	bl	8001b44 <HAL_GetTick>
 8002e0c:	0002      	movs	r2, r0
 8002e0e:	693b      	ldr	r3, [r7, #16]
 8002e10:	1ad3      	subs	r3, r2, r3
 8002e12:	2b02      	cmp	r3, #2
 8002e14:	d901      	bls.n	8002e1a <HAL_RCC_OscConfig+0x3ee>
 8002e16:	2303      	movs	r3, #3
 8002e18:	e021      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002e1a:	4b13      	ldr	r3, [pc, #76]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002e1c:	681a      	ldr	r2, [r3, #0]
 8002e1e:	2380      	movs	r3, #128	@ 0x80
 8002e20:	041b      	lsls	r3, r3, #16
 8002e22:	4013      	ands	r3, r2
 8002e24:	d0f0      	beq.n	8002e08 <HAL_RCC_OscConfig+0x3dc>
 8002e26:	e019      	b.n	8002e5c <HAL_RCC_OscConfig+0x430>
 8002e28:	4b0f      	ldr	r3, [pc, #60]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002e2a:	681a      	ldr	r2, [r3, #0]
 8002e2c:	4b0e      	ldr	r3, [pc, #56]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002e2e:	4911      	ldr	r1, [pc, #68]	@ (8002e74 <HAL_RCC_OscConfig+0x448>)
 8002e30:	400a      	ands	r2, r1
 8002e32:	601a      	str	r2, [r3, #0]
 8002e34:	f7fe fe86 	bl	8001b44 <HAL_GetTick>
 8002e38:	0003      	movs	r3, r0
 8002e3a:	613b      	str	r3, [r7, #16]
 8002e3c:	e008      	b.n	8002e50 <HAL_RCC_OscConfig+0x424>
 8002e3e:	f7fe fe81 	bl	8001b44 <HAL_GetTick>
 8002e42:	0002      	movs	r2, r0
 8002e44:	693b      	ldr	r3, [r7, #16]
 8002e46:	1ad3      	subs	r3, r2, r3
 8002e48:	2b02      	cmp	r3, #2
 8002e4a:	d901      	bls.n	8002e50 <HAL_RCC_OscConfig+0x424>
 8002e4c:	2303      	movs	r3, #3
 8002e4e:	e006      	b.n	8002e5e <HAL_RCC_OscConfig+0x432>
 8002e50:	4b05      	ldr	r3, [pc, #20]	@ (8002e68 <HAL_RCC_OscConfig+0x43c>)
 8002e52:	681a      	ldr	r2, [r3, #0]
 8002e54:	2380      	movs	r3, #128	@ 0x80
 8002e56:	041b      	lsls	r3, r3, #16
 8002e58:	4013      	ands	r3, r2
 8002e5a:	d1f0      	bne.n	8002e3e <HAL_RCC_OscConfig+0x412>
 8002e5c:	2300      	movs	r3, #0
 8002e5e:	0018      	movs	r0, r3
 8002e60:	46bd      	mov	sp, r7
 8002e62:	b006      	add	sp, #24
 8002e64:	bd80      	pop	{r7, pc}
 8002e66:	46c0      	nop			@ (mov r8, r8)
 8002e68:	40021000 	.word	0x40021000
 8002e6c:	00001388 	.word	0x00001388
 8002e70:	efffffff 	.word	0xefffffff
 8002e74:	ffbfffff 	.word	0xffbfffff

08002e78 <HAL_RCC_ClockConfig>:
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	b084      	sub	sp, #16
 8002e7c:	af00      	add	r7, sp, #0
 8002e7e:	6078      	str	r0, [r7, #4]
 8002e80:	6039      	str	r1, [r7, #0]
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	2b00      	cmp	r3, #0
 8002e86:	d101      	bne.n	8002e8c <HAL_RCC_ClockConfig+0x14>
 8002e88:	2301      	movs	r3, #1
 8002e8a:	e0f6      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002e8c:	4b7d      	ldr	r3, [pc, #500]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	2207      	movs	r2, #7
 8002e92:	4013      	ands	r3, r2
 8002e94:	683a      	ldr	r2, [r7, #0]
 8002e96:	429a      	cmp	r2, r3
 8002e98:	d91e      	bls.n	8002ed8 <HAL_RCC_ClockConfig+0x60>
 8002e9a:	4b7a      	ldr	r3, [pc, #488]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	2207      	movs	r2, #7
 8002ea0:	4393      	bics	r3, r2
 8002ea2:	0019      	movs	r1, r3
 8002ea4:	4b77      	ldr	r3, [pc, #476]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8002ea6:	683a      	ldr	r2, [r7, #0]
 8002ea8:	430a      	orrs	r2, r1
 8002eaa:	601a      	str	r2, [r3, #0]
 8002eac:	f7fe fe4a 	bl	8001b44 <HAL_GetTick>
 8002eb0:	0003      	movs	r3, r0
 8002eb2:	60fb      	str	r3, [r7, #12]
 8002eb4:	e009      	b.n	8002eca <HAL_RCC_ClockConfig+0x52>
 8002eb6:	f7fe fe45 	bl	8001b44 <HAL_GetTick>
 8002eba:	0002      	movs	r2, r0
 8002ebc:	68fb      	ldr	r3, [r7, #12]
 8002ebe:	1ad3      	subs	r3, r2, r3
 8002ec0:	4a71      	ldr	r2, [pc, #452]	@ (8003088 <HAL_RCC_ClockConfig+0x210>)
 8002ec2:	4293      	cmp	r3, r2
 8002ec4:	d901      	bls.n	8002eca <HAL_RCC_ClockConfig+0x52>
 8002ec6:	2303      	movs	r3, #3
 8002ec8:	e0d7      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002eca:	4b6e      	ldr	r3, [pc, #440]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	2207      	movs	r2, #7
 8002ed0:	4013      	ands	r3, r2
 8002ed2:	683a      	ldr	r2, [r7, #0]
 8002ed4:	429a      	cmp	r2, r3
 8002ed6:	d1ee      	bne.n	8002eb6 <HAL_RCC_ClockConfig+0x3e>
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	2202      	movs	r2, #2
 8002ede:	4013      	ands	r3, r2
 8002ee0:	d017      	beq.n	8002f12 <HAL_RCC_ClockConfig+0x9a>
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	2204      	movs	r2, #4
 8002ee8:	4013      	ands	r3, r2
 8002eea:	d008      	beq.n	8002efe <HAL_RCC_ClockConfig+0x86>
 8002eec:	4b67      	ldr	r3, [pc, #412]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002eee:	689b      	ldr	r3, [r3, #8]
 8002ef0:	4a67      	ldr	r2, [pc, #412]	@ (8003090 <HAL_RCC_ClockConfig+0x218>)
 8002ef2:	401a      	ands	r2, r3
 8002ef4:	4b65      	ldr	r3, [pc, #404]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002ef6:	21b0      	movs	r1, #176	@ 0xb0
 8002ef8:	0109      	lsls	r1, r1, #4
 8002efa:	430a      	orrs	r2, r1
 8002efc:	609a      	str	r2, [r3, #8]
 8002efe:	4b63      	ldr	r3, [pc, #396]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f00:	689b      	ldr	r3, [r3, #8]
 8002f02:	4a64      	ldr	r2, [pc, #400]	@ (8003094 <HAL_RCC_ClockConfig+0x21c>)
 8002f04:	4013      	ands	r3, r2
 8002f06:	0019      	movs	r1, r3
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	68da      	ldr	r2, [r3, #12]
 8002f0c:	4b5f      	ldr	r3, [pc, #380]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f0e:	430a      	orrs	r2, r1
 8002f10:	609a      	str	r2, [r3, #8]
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	2201      	movs	r2, #1
 8002f18:	4013      	ands	r3, r2
 8002f1a:	d100      	bne.n	8002f1e <HAL_RCC_ClockConfig+0xa6>
 8002f1c:	e061      	b.n	8002fe2 <HAL_RCC_ClockConfig+0x16a>
 8002f1e:	4b5b      	ldr	r3, [pc, #364]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	221c      	movs	r2, #28
 8002f24:	4393      	bics	r3, r2
 8002f26:	0019      	movs	r1, r3
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	689a      	ldr	r2, [r3, #8]
 8002f2c:	4b57      	ldr	r3, [pc, #348]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f2e:	430a      	orrs	r2, r1
 8002f30:	601a      	str	r2, [r3, #0]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	685b      	ldr	r3, [r3, #4]
 8002f36:	2b01      	cmp	r3, #1
 8002f38:	d107      	bne.n	8002f4a <HAL_RCC_ClockConfig+0xd2>
 8002f3a:	4b54      	ldr	r3, [pc, #336]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f3c:	681a      	ldr	r2, [r3, #0]
 8002f3e:	2380      	movs	r3, #128	@ 0x80
 8002f40:	029b      	lsls	r3, r3, #10
 8002f42:	4013      	ands	r3, r2
 8002f44:	d12b      	bne.n	8002f9e <HAL_RCC_ClockConfig+0x126>
 8002f46:	2301      	movs	r3, #1
 8002f48:	e097      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d107      	bne.n	8002f62 <HAL_RCC_ClockConfig+0xea>
 8002f52:	4b4e      	ldr	r3, [pc, #312]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f54:	681a      	ldr	r2, [r3, #0]
 8002f56:	2380      	movs	r3, #128	@ 0x80
 8002f58:	00db      	lsls	r3, r3, #3
 8002f5a:	4013      	ands	r3, r2
 8002f5c:	d11f      	bne.n	8002f9e <HAL_RCC_ClockConfig+0x126>
 8002f5e:	2301      	movs	r3, #1
 8002f60:	e08b      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	685b      	ldr	r3, [r3, #4]
 8002f66:	2b02      	cmp	r3, #2
 8002f68:	d107      	bne.n	8002f7a <HAL_RCC_ClockConfig+0x102>
 8002f6a:	4b48      	ldr	r3, [pc, #288]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f6c:	681a      	ldr	r2, [r3, #0]
 8002f6e:	2380      	movs	r3, #128	@ 0x80
 8002f70:	041b      	lsls	r3, r3, #16
 8002f72:	4013      	ands	r3, r2
 8002f74:	d113      	bne.n	8002f9e <HAL_RCC_ClockConfig+0x126>
 8002f76:	2301      	movs	r3, #1
 8002f78:	e07f      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	685b      	ldr	r3, [r3, #4]
 8002f7e:	2b03      	cmp	r3, #3
 8002f80:	d106      	bne.n	8002f90 <HAL_RCC_ClockConfig+0x118>
 8002f82:	4b42      	ldr	r3, [pc, #264]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f84:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002f86:	2202      	movs	r2, #2
 8002f88:	4013      	ands	r3, r2
 8002f8a:	d108      	bne.n	8002f9e <HAL_RCC_ClockConfig+0x126>
 8002f8c:	2301      	movs	r3, #1
 8002f8e:	e074      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002f90:	4b3e      	ldr	r3, [pc, #248]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002f92:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002f94:	2202      	movs	r2, #2
 8002f96:	4013      	ands	r3, r2
 8002f98:	d101      	bne.n	8002f9e <HAL_RCC_ClockConfig+0x126>
 8002f9a:	2301      	movs	r3, #1
 8002f9c:	e06d      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002f9e:	4b3b      	ldr	r3, [pc, #236]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002fa0:	689b      	ldr	r3, [r3, #8]
 8002fa2:	2207      	movs	r2, #7
 8002fa4:	4393      	bics	r3, r2
 8002fa6:	0019      	movs	r1, r3
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	685a      	ldr	r2, [r3, #4]
 8002fac:	4b37      	ldr	r3, [pc, #220]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002fae:	430a      	orrs	r2, r1
 8002fb0:	609a      	str	r2, [r3, #8]
 8002fb2:	f7fe fdc7 	bl	8001b44 <HAL_GetTick>
 8002fb6:	0003      	movs	r3, r0
 8002fb8:	60fb      	str	r3, [r7, #12]
 8002fba:	e009      	b.n	8002fd0 <HAL_RCC_ClockConfig+0x158>
 8002fbc:	f7fe fdc2 	bl	8001b44 <HAL_GetTick>
 8002fc0:	0002      	movs	r2, r0
 8002fc2:	68fb      	ldr	r3, [r7, #12]
 8002fc4:	1ad3      	subs	r3, r2, r3
 8002fc6:	4a30      	ldr	r2, [pc, #192]	@ (8003088 <HAL_RCC_ClockConfig+0x210>)
 8002fc8:	4293      	cmp	r3, r2
 8002fca:	d901      	bls.n	8002fd0 <HAL_RCC_ClockConfig+0x158>
 8002fcc:	2303      	movs	r3, #3
 8002fce:	e054      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8002fd0:	4b2e      	ldr	r3, [pc, #184]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8002fd2:	689b      	ldr	r3, [r3, #8]
 8002fd4:	2238      	movs	r2, #56	@ 0x38
 8002fd6:	401a      	ands	r2, r3
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	685b      	ldr	r3, [r3, #4]
 8002fdc:	00db      	lsls	r3, r3, #3
 8002fde:	429a      	cmp	r2, r3
 8002fe0:	d1ec      	bne.n	8002fbc <HAL_RCC_ClockConfig+0x144>
 8002fe2:	4b28      	ldr	r3, [pc, #160]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	2207      	movs	r2, #7
 8002fe8:	4013      	ands	r3, r2
 8002fea:	683a      	ldr	r2, [r7, #0]
 8002fec:	429a      	cmp	r2, r3
 8002fee:	d21e      	bcs.n	800302e <HAL_RCC_ClockConfig+0x1b6>
 8002ff0:	4b24      	ldr	r3, [pc, #144]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	2207      	movs	r2, #7
 8002ff6:	4393      	bics	r3, r2
 8002ff8:	0019      	movs	r1, r3
 8002ffa:	4b22      	ldr	r3, [pc, #136]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8002ffc:	683a      	ldr	r2, [r7, #0]
 8002ffe:	430a      	orrs	r2, r1
 8003000:	601a      	str	r2, [r3, #0]
 8003002:	f7fe fd9f 	bl	8001b44 <HAL_GetTick>
 8003006:	0003      	movs	r3, r0
 8003008:	60fb      	str	r3, [r7, #12]
 800300a:	e009      	b.n	8003020 <HAL_RCC_ClockConfig+0x1a8>
 800300c:	f7fe fd9a 	bl	8001b44 <HAL_GetTick>
 8003010:	0002      	movs	r2, r0
 8003012:	68fb      	ldr	r3, [r7, #12]
 8003014:	1ad3      	subs	r3, r2, r3
 8003016:	4a1c      	ldr	r2, [pc, #112]	@ (8003088 <HAL_RCC_ClockConfig+0x210>)
 8003018:	4293      	cmp	r3, r2
 800301a:	d901      	bls.n	8003020 <HAL_RCC_ClockConfig+0x1a8>
 800301c:	2303      	movs	r3, #3
 800301e:	e02c      	b.n	800307a <HAL_RCC_ClockConfig+0x202>
 8003020:	4b18      	ldr	r3, [pc, #96]	@ (8003084 <HAL_RCC_ClockConfig+0x20c>)
 8003022:	681b      	ldr	r3, [r3, #0]
 8003024:	2207      	movs	r2, #7
 8003026:	4013      	ands	r3, r2
 8003028:	683a      	ldr	r2, [r7, #0]
 800302a:	429a      	cmp	r2, r3
 800302c:	d1ee      	bne.n	800300c <HAL_RCC_ClockConfig+0x194>
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	2204      	movs	r2, #4
 8003034:	4013      	ands	r3, r2
 8003036:	d009      	beq.n	800304c <HAL_RCC_ClockConfig+0x1d4>
 8003038:	4b14      	ldr	r3, [pc, #80]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 800303a:	689b      	ldr	r3, [r3, #8]
 800303c:	4a16      	ldr	r2, [pc, #88]	@ (8003098 <HAL_RCC_ClockConfig+0x220>)
 800303e:	4013      	ands	r3, r2
 8003040:	0019      	movs	r1, r3
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	691a      	ldr	r2, [r3, #16]
 8003046:	4b11      	ldr	r3, [pc, #68]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8003048:	430a      	orrs	r2, r1
 800304a:	609a      	str	r2, [r3, #8]
 800304c:	f000 f82c 	bl	80030a8 <HAL_RCC_GetSysClockFreq>
 8003050:	0001      	movs	r1, r0
 8003052:	4b0e      	ldr	r3, [pc, #56]	@ (800308c <HAL_RCC_ClockConfig+0x214>)
 8003054:	689b      	ldr	r3, [r3, #8]
 8003056:	0a1b      	lsrs	r3, r3, #8
 8003058:	220f      	movs	r2, #15
 800305a:	401a      	ands	r2, r3
 800305c:	4b0f      	ldr	r3, [pc, #60]	@ (800309c <HAL_RCC_ClockConfig+0x224>)
 800305e:	0092      	lsls	r2, r2, #2
 8003060:	58d3      	ldr	r3, [r2, r3]
 8003062:	221f      	movs	r2, #31
 8003064:	4013      	ands	r3, r2
 8003066:	000a      	movs	r2, r1
 8003068:	40da      	lsrs	r2, r3
 800306a:	4b0d      	ldr	r3, [pc, #52]	@ (80030a0 <HAL_RCC_ClockConfig+0x228>)
 800306c:	601a      	str	r2, [r3, #0]
 800306e:	4b0d      	ldr	r3, [pc, #52]	@ (80030a4 <HAL_RCC_ClockConfig+0x22c>)
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	0018      	movs	r0, r3
 8003074:	f7fe fd0a 	bl	8001a8c <HAL_InitTick>
 8003078:	0003      	movs	r3, r0
 800307a:	0018      	movs	r0, r3
 800307c:	46bd      	mov	sp, r7
 800307e:	b004      	add	sp, #16
 8003080:	bd80      	pop	{r7, pc}
 8003082:	46c0      	nop			@ (mov r8, r8)
 8003084:	40022000 	.word	0x40022000
 8003088:	00001388 	.word	0x00001388
 800308c:	40021000 	.word	0x40021000
 8003090:	ffff84ff 	.word	0xffff84ff
 8003094:	fffff0ff 	.word	0xfffff0ff
 8003098:	ffff8fff 	.word	0xffff8fff
 800309c:	080052c8 	.word	0x080052c8
 80030a0:	20000014 	.word	0x20000014
 80030a4:	20000018 	.word	0x20000018

080030a8 <HAL_RCC_GetSysClockFreq>:
 80030a8:	b580      	push	{r7, lr}
 80030aa:	b084      	sub	sp, #16
 80030ac:	af00      	add	r7, sp, #0
 80030ae:	4b27      	ldr	r3, [pc, #156]	@ (800314c <HAL_RCC_GetSysClockFreq+0xa4>)
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	089b      	lsrs	r3, r3, #2
 80030b4:	2207      	movs	r2, #7
 80030b6:	4013      	ands	r3, r2
 80030b8:	3301      	adds	r3, #1
 80030ba:	60bb      	str	r3, [r7, #8]
 80030bc:	4b23      	ldr	r3, [pc, #140]	@ (800314c <HAL_RCC_GetSysClockFreq+0xa4>)
 80030be:	689b      	ldr	r3, [r3, #8]
 80030c0:	2238      	movs	r2, #56	@ 0x38
 80030c2:	4013      	ands	r3, r2
 80030c4:	d10f      	bne.n	80030e6 <HAL_RCC_GetSysClockFreq+0x3e>
 80030c6:	4b21      	ldr	r3, [pc, #132]	@ (800314c <HAL_RCC_GetSysClockFreq+0xa4>)
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	0adb      	lsrs	r3, r3, #11
 80030cc:	2207      	movs	r2, #7
 80030ce:	4013      	ands	r3, r2
 80030d0:	2201      	movs	r2, #1
 80030d2:	409a      	lsls	r2, r3
 80030d4:	0013      	movs	r3, r2
 80030d6:	607b      	str	r3, [r7, #4]
 80030d8:	6879      	ldr	r1, [r7, #4]
 80030da:	481d      	ldr	r0, [pc, #116]	@ (8003150 <HAL_RCC_GetSysClockFreq+0xa8>)
 80030dc:	f7fd f814 	bl	8000108 <__udivsi3>
 80030e0:	0003      	movs	r3, r0
 80030e2:	60fb      	str	r3, [r7, #12]
 80030e4:	e027      	b.n	8003136 <HAL_RCC_GetSysClockFreq+0x8e>
 80030e6:	4b19      	ldr	r3, [pc, #100]	@ (800314c <HAL_RCC_GetSysClockFreq+0xa4>)
 80030e8:	689b      	ldr	r3, [r3, #8]
 80030ea:	2238      	movs	r2, #56	@ 0x38
 80030ec:	4013      	ands	r3, r2
 80030ee:	2b08      	cmp	r3, #8
 80030f0:	d102      	bne.n	80030f8 <HAL_RCC_GetSysClockFreq+0x50>
 80030f2:	4b18      	ldr	r3, [pc, #96]	@ (8003154 <HAL_RCC_GetSysClockFreq+0xac>)
 80030f4:	60fb      	str	r3, [r7, #12]
 80030f6:	e01e      	b.n	8003136 <HAL_RCC_GetSysClockFreq+0x8e>
 80030f8:	4b14      	ldr	r3, [pc, #80]	@ (800314c <HAL_RCC_GetSysClockFreq+0xa4>)
 80030fa:	689b      	ldr	r3, [r3, #8]
 80030fc:	2238      	movs	r2, #56	@ 0x38
 80030fe:	4013      	ands	r3, r2
 8003100:	2b20      	cmp	r3, #32
 8003102:	d103      	bne.n	800310c <HAL_RCC_GetSysClockFreq+0x64>
 8003104:	2380      	movs	r3, #128	@ 0x80
 8003106:	021b      	lsls	r3, r3, #8
 8003108:	60fb      	str	r3, [r7, #12]
 800310a:	e014      	b.n	8003136 <HAL_RCC_GetSysClockFreq+0x8e>
 800310c:	4b0f      	ldr	r3, [pc, #60]	@ (800314c <HAL_RCC_GetSysClockFreq+0xa4>)
 800310e:	689b      	ldr	r3, [r3, #8]
 8003110:	2238      	movs	r2, #56	@ 0x38
 8003112:	4013      	ands	r3, r2
 8003114:	2b18      	cmp	r3, #24
 8003116:	d103      	bne.n	8003120 <HAL_RCC_GetSysClockFreq+0x78>
 8003118:	23fa      	movs	r3, #250	@ 0xfa
 800311a:	01db      	lsls	r3, r3, #7
 800311c:	60fb      	str	r3, [r7, #12]
 800311e:	e00a      	b.n	8003136 <HAL_RCC_GetSysClockFreq+0x8e>
 8003120:	4b0a      	ldr	r3, [pc, #40]	@ (800314c <HAL_RCC_GetSysClockFreq+0xa4>)
 8003122:	689b      	ldr	r3, [r3, #8]
 8003124:	2238      	movs	r2, #56	@ 0x38
 8003126:	4013      	ands	r3, r2
 8003128:	2b10      	cmp	r3, #16
 800312a:	d102      	bne.n	8003132 <HAL_RCC_GetSysClockFreq+0x8a>
 800312c:	4b08      	ldr	r3, [pc, #32]	@ (8003150 <HAL_RCC_GetSysClockFreq+0xa8>)
 800312e:	60fb      	str	r3, [r7, #12]
 8003130:	e001      	b.n	8003136 <HAL_RCC_GetSysClockFreq+0x8e>
 8003132:	2300      	movs	r3, #0
 8003134:	60fb      	str	r3, [r7, #12]
 8003136:	68b9      	ldr	r1, [r7, #8]
 8003138:	68f8      	ldr	r0, [r7, #12]
 800313a:	f7fc ffe5 	bl	8000108 <__udivsi3>
 800313e:	0003      	movs	r3, r0
 8003140:	60fb      	str	r3, [r7, #12]
 8003142:	68fb      	ldr	r3, [r7, #12]
 8003144:	0018      	movs	r0, r3
 8003146:	46bd      	mov	sp, r7
 8003148:	b004      	add	sp, #16
 800314a:	bd80      	pop	{r7, pc}
 800314c:	40021000 	.word	0x40021000
 8003150:	02dc6c00 	.word	0x02dc6c00
 8003154:	007a1200 	.word	0x007a1200

08003158 <HAL_RCC_GetHCLKFreq>:
 8003158:	b580      	push	{r7, lr}
 800315a:	af00      	add	r7, sp, #0
 800315c:	f7ff ffa4 	bl	80030a8 <HAL_RCC_GetSysClockFreq>
 8003160:	0001      	movs	r1, r0
 8003162:	4b09      	ldr	r3, [pc, #36]	@ (8003188 <HAL_RCC_GetHCLKFreq+0x30>)
 8003164:	689b      	ldr	r3, [r3, #8]
 8003166:	0a1b      	lsrs	r3, r3, #8
 8003168:	220f      	movs	r2, #15
 800316a:	401a      	ands	r2, r3
 800316c:	4b07      	ldr	r3, [pc, #28]	@ (800318c <HAL_RCC_GetHCLKFreq+0x34>)
 800316e:	0092      	lsls	r2, r2, #2
 8003170:	58d3      	ldr	r3, [r2, r3]
 8003172:	221f      	movs	r2, #31
 8003174:	4013      	ands	r3, r2
 8003176:	000a      	movs	r2, r1
 8003178:	40da      	lsrs	r2, r3
 800317a:	4b05      	ldr	r3, [pc, #20]	@ (8003190 <HAL_RCC_GetHCLKFreq+0x38>)
 800317c:	601a      	str	r2, [r3, #0]
 800317e:	4b04      	ldr	r3, [pc, #16]	@ (8003190 <HAL_RCC_GetHCLKFreq+0x38>)
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	0018      	movs	r0, r3
 8003184:	46bd      	mov	sp, r7
 8003186:	bd80      	pop	{r7, pc}
 8003188:	40021000 	.word	0x40021000
 800318c:	080052c8 	.word	0x080052c8
 8003190:	20000014 	.word	0x20000014

08003194 <HAL_RCC_GetPCLK1Freq>:
 8003194:	b580      	push	{r7, lr}
 8003196:	af00      	add	r7, sp, #0
 8003198:	f7ff ffde 	bl	8003158 <HAL_RCC_GetHCLKFreq>
 800319c:	0001      	movs	r1, r0
 800319e:	4b07      	ldr	r3, [pc, #28]	@ (80031bc <HAL_RCC_GetPCLK1Freq+0x28>)
 80031a0:	689b      	ldr	r3, [r3, #8]
 80031a2:	0b1b      	lsrs	r3, r3, #12
 80031a4:	2207      	movs	r2, #7
 80031a6:	401a      	ands	r2, r3
 80031a8:	4b05      	ldr	r3, [pc, #20]	@ (80031c0 <HAL_RCC_GetPCLK1Freq+0x2c>)
 80031aa:	0092      	lsls	r2, r2, #2
 80031ac:	58d3      	ldr	r3, [r2, r3]
 80031ae:	221f      	movs	r2, #31
 80031b0:	4013      	ands	r3, r2
 80031b2:	40d9      	lsrs	r1, r3
 80031b4:	000b      	movs	r3, r1
 80031b6:	0018      	movs	r0, r3
 80031b8:	46bd      	mov	sp, r7
 80031ba:	bd80      	pop	{r7, pc}
 80031bc:	40021000 	.word	0x40021000
 80031c0:	08005308 	.word	0x08005308

080031c4 <HAL_RCCEx_PeriphCLKConfig>:
 80031c4:	b580      	push	{r7, lr}
 80031c6:	b086      	sub	sp, #24
 80031c8:	af00      	add	r7, sp, #0
 80031ca:	6078      	str	r0, [r7, #4]
 80031cc:	2313      	movs	r3, #19
 80031ce:	18fb      	adds	r3, r7, r3
 80031d0:	2200      	movs	r2, #0
 80031d2:	701a      	strb	r2, [r3, #0]
 80031d4:	2312      	movs	r3, #18
 80031d6:	18fb      	adds	r3, r7, r3
 80031d8:	2200      	movs	r2, #0
 80031da:	701a      	strb	r2, [r3, #0]
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	2240      	movs	r2, #64	@ 0x40
 80031e2:	4013      	ands	r3, r2
 80031e4:	d100      	bne.n	80031e8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80031e6:	e079      	b.n	80032dc <HAL_RCCEx_PeriphCLKConfig+0x118>
 80031e8:	2011      	movs	r0, #17
 80031ea:	183b      	adds	r3, r7, r0
 80031ec:	2200      	movs	r2, #0
 80031ee:	701a      	strb	r2, [r3, #0]
 80031f0:	4b6a      	ldr	r3, [pc, #424]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80031f2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80031f4:	2380      	movs	r3, #128	@ 0x80
 80031f6:	055b      	lsls	r3, r3, #21
 80031f8:	4013      	ands	r3, r2
 80031fa:	d110      	bne.n	800321e <HAL_RCCEx_PeriphCLKConfig+0x5a>
 80031fc:	4b67      	ldr	r3, [pc, #412]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80031fe:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8003200:	4b66      	ldr	r3, [pc, #408]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003202:	2180      	movs	r1, #128	@ 0x80
 8003204:	0549      	lsls	r1, r1, #21
 8003206:	430a      	orrs	r2, r1
 8003208:	63da      	str	r2, [r3, #60]	@ 0x3c
 800320a:	4b64      	ldr	r3, [pc, #400]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800320c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800320e:	2380      	movs	r3, #128	@ 0x80
 8003210:	055b      	lsls	r3, r3, #21
 8003212:	4013      	ands	r3, r2
 8003214:	60bb      	str	r3, [r7, #8]
 8003216:	68bb      	ldr	r3, [r7, #8]
 8003218:	183b      	adds	r3, r7, r0
 800321a:	2201      	movs	r2, #1
 800321c:	701a      	strb	r2, [r3, #0]
 800321e:	4b5f      	ldr	r3, [pc, #380]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003220:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003222:	23c0      	movs	r3, #192	@ 0xc0
 8003224:	009b      	lsls	r3, r3, #2
 8003226:	4013      	ands	r3, r2
 8003228:	617b      	str	r3, [r7, #20]
 800322a:	697b      	ldr	r3, [r7, #20]
 800322c:	2b00      	cmp	r3, #0
 800322e:	d019      	beq.n	8003264 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	69db      	ldr	r3, [r3, #28]
 8003234:	697a      	ldr	r2, [r7, #20]
 8003236:	429a      	cmp	r2, r3
 8003238:	d014      	beq.n	8003264 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 800323a:	4b58      	ldr	r3, [pc, #352]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800323c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800323e:	4a58      	ldr	r2, [pc, #352]	@ (80033a0 <HAL_RCCEx_PeriphCLKConfig+0x1dc>)
 8003240:	4013      	ands	r3, r2
 8003242:	617b      	str	r3, [r7, #20]
 8003244:	4b55      	ldr	r3, [pc, #340]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003246:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003248:	4b54      	ldr	r3, [pc, #336]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800324a:	2180      	movs	r1, #128	@ 0x80
 800324c:	0249      	lsls	r1, r1, #9
 800324e:	430a      	orrs	r2, r1
 8003250:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003252:	4b52      	ldr	r3, [pc, #328]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003254:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8003256:	4b51      	ldr	r3, [pc, #324]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003258:	4952      	ldr	r1, [pc, #328]	@ (80033a4 <HAL_RCCEx_PeriphCLKConfig+0x1e0>)
 800325a:	400a      	ands	r2, r1
 800325c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800325e:	4b4f      	ldr	r3, [pc, #316]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003260:	697a      	ldr	r2, [r7, #20]
 8003262:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003264:	697b      	ldr	r3, [r7, #20]
 8003266:	2201      	movs	r2, #1
 8003268:	4013      	ands	r3, r2
 800326a:	d016      	beq.n	800329a <HAL_RCCEx_PeriphCLKConfig+0xd6>
 800326c:	f7fe fc6a 	bl	8001b44 <HAL_GetTick>
 8003270:	0003      	movs	r3, r0
 8003272:	60fb      	str	r3, [r7, #12]
 8003274:	e00c      	b.n	8003290 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8003276:	f7fe fc65 	bl	8001b44 <HAL_GetTick>
 800327a:	0002      	movs	r2, r0
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	1ad3      	subs	r3, r2, r3
 8003280:	4a49      	ldr	r2, [pc, #292]	@ (80033a8 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 8003282:	4293      	cmp	r3, r2
 8003284:	d904      	bls.n	8003290 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8003286:	2313      	movs	r3, #19
 8003288:	18fb      	adds	r3, r7, r3
 800328a:	2203      	movs	r2, #3
 800328c:	701a      	strb	r2, [r3, #0]
 800328e:	e004      	b.n	800329a <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8003290:	4b42      	ldr	r3, [pc, #264]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003292:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003294:	2202      	movs	r2, #2
 8003296:	4013      	ands	r3, r2
 8003298:	d0ed      	beq.n	8003276 <HAL_RCCEx_PeriphCLKConfig+0xb2>
 800329a:	2313      	movs	r3, #19
 800329c:	18fb      	adds	r3, r7, r3
 800329e:	781b      	ldrb	r3, [r3, #0]
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d10a      	bne.n	80032ba <HAL_RCCEx_PeriphCLKConfig+0xf6>
 80032a4:	4b3d      	ldr	r3, [pc, #244]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80032a8:	4a3d      	ldr	r2, [pc, #244]	@ (80033a0 <HAL_RCCEx_PeriphCLKConfig+0x1dc>)
 80032aa:	4013      	ands	r3, r2
 80032ac:	0019      	movs	r1, r3
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	69da      	ldr	r2, [r3, #28]
 80032b2:	4b3a      	ldr	r3, [pc, #232]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032b4:	430a      	orrs	r2, r1
 80032b6:	65da      	str	r2, [r3, #92]	@ 0x5c
 80032b8:	e005      	b.n	80032c6 <HAL_RCCEx_PeriphCLKConfig+0x102>
 80032ba:	2312      	movs	r3, #18
 80032bc:	18fb      	adds	r3, r7, r3
 80032be:	2213      	movs	r2, #19
 80032c0:	18ba      	adds	r2, r7, r2
 80032c2:	7812      	ldrb	r2, [r2, #0]
 80032c4:	701a      	strb	r2, [r3, #0]
 80032c6:	2311      	movs	r3, #17
 80032c8:	18fb      	adds	r3, r7, r3
 80032ca:	781b      	ldrb	r3, [r3, #0]
 80032cc:	2b01      	cmp	r3, #1
 80032ce:	d105      	bne.n	80032dc <HAL_RCCEx_PeriphCLKConfig+0x118>
 80032d0:	4b32      	ldr	r3, [pc, #200]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032d2:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80032d4:	4b31      	ldr	r3, [pc, #196]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032d6:	4935      	ldr	r1, [pc, #212]	@ (80033ac <HAL_RCCEx_PeriphCLKConfig+0x1e8>)
 80032d8:	400a      	ands	r2, r1
 80032da:	63da      	str	r2, [r3, #60]	@ 0x3c
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	2201      	movs	r2, #1
 80032e2:	4013      	ands	r3, r2
 80032e4:	d009      	beq.n	80032fa <HAL_RCCEx_PeriphCLKConfig+0x136>
 80032e6:	4b2d      	ldr	r3, [pc, #180]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80032ea:	2203      	movs	r2, #3
 80032ec:	4393      	bics	r3, r2
 80032ee:	0019      	movs	r1, r3
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	689a      	ldr	r2, [r3, #8]
 80032f4:	4b29      	ldr	r3, [pc, #164]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032f6:	430a      	orrs	r2, r1
 80032f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	2202      	movs	r2, #2
 8003300:	4013      	ands	r3, r2
 8003302:	d009      	beq.n	8003318 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8003304:	4b25      	ldr	r3, [pc, #148]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003306:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003308:	4a29      	ldr	r2, [pc, #164]	@ (80033b0 <HAL_RCCEx_PeriphCLKConfig+0x1ec>)
 800330a:	4013      	ands	r3, r2
 800330c:	0019      	movs	r1, r3
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	68da      	ldr	r2, [r3, #12]
 8003312:	4b22      	ldr	r3, [pc, #136]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003314:	430a      	orrs	r2, r1
 8003316:	655a      	str	r2, [r3, #84]	@ 0x54
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	2220      	movs	r2, #32
 800331e:	4013      	ands	r3, r2
 8003320:	d008      	beq.n	8003334 <HAL_RCCEx_PeriphCLKConfig+0x170>
 8003322:	4b1e      	ldr	r3, [pc, #120]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003324:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003326:	009b      	lsls	r3, r3, #2
 8003328:	0899      	lsrs	r1, r3, #2
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	699a      	ldr	r2, [r3, #24]
 800332e:	4b1b      	ldr	r3, [pc, #108]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003330:	430a      	orrs	r2, r1
 8003332:	655a      	str	r2, [r3, #84]	@ 0x54
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	2208      	movs	r2, #8
 800333a:	4013      	ands	r3, r2
 800333c:	d009      	beq.n	8003352 <HAL_RCCEx_PeriphCLKConfig+0x18e>
 800333e:	4b17      	ldr	r3, [pc, #92]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003340:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003342:	4a1c      	ldr	r2, [pc, #112]	@ (80033b4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>)
 8003344:	4013      	ands	r3, r2
 8003346:	0019      	movs	r1, r3
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	695a      	ldr	r2, [r3, #20]
 800334c:	4b13      	ldr	r3, [pc, #76]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800334e:	430a      	orrs	r2, r1
 8003350:	659a      	str	r2, [r3, #88]	@ 0x58
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	681b      	ldr	r3, [r3, #0]
 8003356:	2204      	movs	r2, #4
 8003358:	4013      	ands	r3, r2
 800335a:	d009      	beq.n	8003370 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
 800335c:	4b0f      	ldr	r3, [pc, #60]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800335e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003360:	4a15      	ldr	r2, [pc, #84]	@ (80033b8 <HAL_RCCEx_PeriphCLKConfig+0x1f4>)
 8003362:	4013      	ands	r3, r2
 8003364:	0019      	movs	r1, r3
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	691a      	ldr	r2, [r3, #16]
 800336a:	4b0c      	ldr	r3, [pc, #48]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800336c:	430a      	orrs	r2, r1
 800336e:	655a      	str	r2, [r3, #84]	@ 0x54
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	2280      	movs	r2, #128	@ 0x80
 8003376:	4013      	ands	r3, r2
 8003378:	d009      	beq.n	800338e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
 800337a:	4b08      	ldr	r3, [pc, #32]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	22e0      	movs	r2, #224	@ 0xe0
 8003380:	4393      	bics	r3, r2
 8003382:	0019      	movs	r1, r3
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	685a      	ldr	r2, [r3, #4]
 8003388:	4b04      	ldr	r3, [pc, #16]	@ (800339c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800338a:	430a      	orrs	r2, r1
 800338c:	601a      	str	r2, [r3, #0]
 800338e:	2312      	movs	r3, #18
 8003390:	18fb      	adds	r3, r7, r3
 8003392:	781b      	ldrb	r3, [r3, #0]
 8003394:	0018      	movs	r0, r3
 8003396:	46bd      	mov	sp, r7
 8003398:	b006      	add	sp, #24
 800339a:	bd80      	pop	{r7, pc}
 800339c:	40021000 	.word	0x40021000
 80033a0:	fffffcff 	.word	0xfffffcff
 80033a4:	fffeffff 	.word	0xfffeffff
 80033a8:	00001388 	.word	0x00001388
 80033ac:	efffffff 	.word	0xefffffff
 80033b0:	ffffcfff 	.word	0xffffcfff
 80033b4:	ffffefff 	.word	0xffffefff
 80033b8:	ffff3fff 	.word	0xffff3fff

080033bc <HAL_UART_DeInit>:
 80033bc:	b580      	push	{r7, lr}
 80033be:	b082      	sub	sp, #8
 80033c0:	af00      	add	r7, sp, #0
 80033c2:	6078      	str	r0, [r7, #4]
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	2b00      	cmp	r3, #0
 80033c8:	d101      	bne.n	80033ce <HAL_UART_DeInit+0x12>
 80033ca:	2301      	movs	r3, #1
 80033cc:	e032      	b.n	8003434 <HAL_UART_DeInit+0x78>
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	2288      	movs	r2, #136	@ 0x88
 80033d2:	2124      	movs	r1, #36	@ 0x24
 80033d4:	5099      	str	r1, [r3, r2]
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	681a      	ldr	r2, [r3, #0]
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	2101      	movs	r1, #1
 80033e2:	438a      	bics	r2, r1
 80033e4:	601a      	str	r2, [r3, #0]
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	2200      	movs	r2, #0
 80033ec:	601a      	str	r2, [r3, #0]
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	2200      	movs	r2, #0
 80033f4:	605a      	str	r2, [r3, #4]
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	2200      	movs	r2, #0
 80033fc:	609a      	str	r2, [r3, #8]
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	0018      	movs	r0, r3
 8003402:	f7fe fa79 	bl	80018f8 <HAL_UART_MspDeInit>
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	2290      	movs	r2, #144	@ 0x90
 800340a:	2100      	movs	r1, #0
 800340c:	5099      	str	r1, [r3, r2]
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	2288      	movs	r2, #136	@ 0x88
 8003412:	2100      	movs	r1, #0
 8003414:	5099      	str	r1, [r3, r2]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	228c      	movs	r2, #140	@ 0x8c
 800341a:	2100      	movs	r1, #0
 800341c:	5099      	str	r1, [r3, r2]
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	2200      	movs	r2, #0
 8003422:	66da      	str	r2, [r3, #108]	@ 0x6c
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	2200      	movs	r2, #0
 8003428:	671a      	str	r2, [r3, #112]	@ 0x70
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	2284      	movs	r2, #132	@ 0x84
 800342e:	2100      	movs	r1, #0
 8003430:	5499      	strb	r1, [r3, r2]
 8003432:	2300      	movs	r3, #0
 8003434:	0018      	movs	r0, r3
 8003436:	46bd      	mov	sp, r7
 8003438:	b002      	add	sp, #8
 800343a:	bd80      	pop	{r7, pc}

0800343c <HAL_UART_Transmit_DMA>:
 800343c:	b580      	push	{r7, lr}
 800343e:	b088      	sub	sp, #32
 8003440:	af00      	add	r7, sp, #0
 8003442:	60f8      	str	r0, [r7, #12]
 8003444:	60b9      	str	r1, [r7, #8]
 8003446:	1dbb      	adds	r3, r7, #6
 8003448:	801a      	strh	r2, [r3, #0]
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	2288      	movs	r2, #136	@ 0x88
 800344e:	589b      	ldr	r3, [r3, r2]
 8003450:	2b20      	cmp	r3, #32
 8003452:	d000      	beq.n	8003456 <HAL_UART_Transmit_DMA+0x1a>
 8003454:	e079      	b.n	800354a <HAL_UART_Transmit_DMA+0x10e>
 8003456:	68bb      	ldr	r3, [r7, #8]
 8003458:	2b00      	cmp	r3, #0
 800345a:	d003      	beq.n	8003464 <HAL_UART_Transmit_DMA+0x28>
 800345c:	1dbb      	adds	r3, r7, #6
 800345e:	881b      	ldrh	r3, [r3, #0]
 8003460:	2b00      	cmp	r3, #0
 8003462:	d101      	bne.n	8003468 <HAL_UART_Transmit_DMA+0x2c>
 8003464:	2301      	movs	r3, #1
 8003466:	e071      	b.n	800354c <HAL_UART_Transmit_DMA+0x110>
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	689a      	ldr	r2, [r3, #8]
 800346c:	2380      	movs	r3, #128	@ 0x80
 800346e:	015b      	lsls	r3, r3, #5
 8003470:	429a      	cmp	r2, r3
 8003472:	d109      	bne.n	8003488 <HAL_UART_Transmit_DMA+0x4c>
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	691b      	ldr	r3, [r3, #16]
 8003478:	2b00      	cmp	r3, #0
 800347a:	d105      	bne.n	8003488 <HAL_UART_Transmit_DMA+0x4c>
 800347c:	68bb      	ldr	r3, [r7, #8]
 800347e:	2201      	movs	r2, #1
 8003480:	4013      	ands	r3, r2
 8003482:	d001      	beq.n	8003488 <HAL_UART_Transmit_DMA+0x4c>
 8003484:	2301      	movs	r3, #1
 8003486:	e061      	b.n	800354c <HAL_UART_Transmit_DMA+0x110>
 8003488:	68fb      	ldr	r3, [r7, #12]
 800348a:	68ba      	ldr	r2, [r7, #8]
 800348c:	651a      	str	r2, [r3, #80]	@ 0x50
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	1dba      	adds	r2, r7, #6
 8003492:	2154      	movs	r1, #84	@ 0x54
 8003494:	8812      	ldrh	r2, [r2, #0]
 8003496:	525a      	strh	r2, [r3, r1]
 8003498:	68fb      	ldr	r3, [r7, #12]
 800349a:	1dba      	adds	r2, r7, #6
 800349c:	2156      	movs	r1, #86	@ 0x56
 800349e:	8812      	ldrh	r2, [r2, #0]
 80034a0:	525a      	strh	r2, [r3, r1]
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	2290      	movs	r2, #144	@ 0x90
 80034a6:	2100      	movs	r1, #0
 80034a8:	5099      	str	r1, [r3, r2]
 80034aa:	68fb      	ldr	r3, [r7, #12]
 80034ac:	2288      	movs	r2, #136	@ 0x88
 80034ae:	2121      	movs	r1, #33	@ 0x21
 80034b0:	5099      	str	r1, [r3, r2]
 80034b2:	68fb      	ldr	r3, [r7, #12]
 80034b4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d028      	beq.n	800350c <HAL_UART_Transmit_DMA+0xd0>
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80034be:	4a25      	ldr	r2, [pc, #148]	@ (8003554 <HAL_UART_Transmit_DMA+0x118>)
 80034c0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80034c6:	4a24      	ldr	r2, [pc, #144]	@ (8003558 <HAL_UART_Transmit_DMA+0x11c>)
 80034c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80034ce:	4a23      	ldr	r2, [pc, #140]	@ (800355c <HAL_UART_Transmit_DMA+0x120>)
 80034d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80034d6:	2200      	movs	r2, #0
 80034d8:	639a      	str	r2, [r3, #56]	@ 0x38
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80034e2:	0019      	movs	r1, r3
 80034e4:	68fb      	ldr	r3, [r7, #12]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	3328      	adds	r3, #40	@ 0x28
 80034ea:	001a      	movs	r2, r3
 80034ec:	1dbb      	adds	r3, r7, #6
 80034ee:	881b      	ldrh	r3, [r3, #0]
 80034f0:	f7fe fd68 	bl	8001fc4 <HAL_DMA_Start_IT>
 80034f4:	1e03      	subs	r3, r0, #0
 80034f6:	d009      	beq.n	800350c <HAL_UART_Transmit_DMA+0xd0>
 80034f8:	68fb      	ldr	r3, [r7, #12]
 80034fa:	2290      	movs	r2, #144	@ 0x90
 80034fc:	2110      	movs	r1, #16
 80034fe:	5099      	str	r1, [r3, r2]
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	2288      	movs	r2, #136	@ 0x88
 8003504:	2120      	movs	r1, #32
 8003506:	5099      	str	r1, [r3, r2]
 8003508:	2301      	movs	r3, #1
 800350a:	e01f      	b.n	800354c <HAL_UART_Transmit_DMA+0x110>
 800350c:	68fb      	ldr	r3, [r7, #12]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	2240      	movs	r2, #64	@ 0x40
 8003512:	621a      	str	r2, [r3, #32]
 8003514:	f3ef 8310 	mrs	r3, PRIMASK
 8003518:	613b      	str	r3, [r7, #16]
 800351a:	693b      	ldr	r3, [r7, #16]
 800351c:	61fb      	str	r3, [r7, #28]
 800351e:	2301      	movs	r3, #1
 8003520:	617b      	str	r3, [r7, #20]
 8003522:	697b      	ldr	r3, [r7, #20]
 8003524:	f383 8810 	msr	PRIMASK, r3
 8003528:	46c0      	nop			@ (mov r8, r8)
 800352a:	68fb      	ldr	r3, [r7, #12]
 800352c:	681b      	ldr	r3, [r3, #0]
 800352e:	689a      	ldr	r2, [r3, #8]
 8003530:	68fb      	ldr	r3, [r7, #12]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	2180      	movs	r1, #128	@ 0x80
 8003536:	430a      	orrs	r2, r1
 8003538:	609a      	str	r2, [r3, #8]
 800353a:	69fb      	ldr	r3, [r7, #28]
 800353c:	61bb      	str	r3, [r7, #24]
 800353e:	69bb      	ldr	r3, [r7, #24]
 8003540:	f383 8810 	msr	PRIMASK, r3
 8003544:	46c0      	nop			@ (mov r8, r8)
 8003546:	2300      	movs	r3, #0
 8003548:	e000      	b.n	800354c <HAL_UART_Transmit_DMA+0x110>
 800354a:	2302      	movs	r3, #2
 800354c:	0018      	movs	r0, r3
 800354e:	46bd      	mov	sp, r7
 8003550:	b008      	add	sp, #32
 8003552:	bd80      	pop	{r7, pc}
 8003554:	080048cd 	.word	0x080048cd
 8003558:	08004965 	.word	0x08004965
 800355c:	08004af7 	.word	0x08004af7

08003560 <HAL_UART_Abort>:
 8003560:	b580      	push	{r7, lr}
 8003562:	b096      	sub	sp, #88	@ 0x58
 8003564:	af00      	add	r7, sp, #0
 8003566:	6078      	str	r0, [r7, #4]
 8003568:	f3ef 8310 	mrs	r3, PRIMASK
 800356c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800356e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003570:	657b      	str	r3, [r7, #84]	@ 0x54
 8003572:	2301      	movs	r3, #1
 8003574:	633b      	str	r3, [r7, #48]	@ 0x30
 8003576:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003578:	f383 8810 	msr	PRIMASK, r3
 800357c:	46c0      	nop			@ (mov r8, r8)
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	681a      	ldr	r2, [r3, #0]
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	4979      	ldr	r1, [pc, #484]	@ (8003770 <HAL_UART_Abort+0x210>)
 800358a:	400a      	ands	r2, r1
 800358c:	601a      	str	r2, [r3, #0]
 800358e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003590:	637b      	str	r3, [r7, #52]	@ 0x34
 8003592:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003594:	f383 8810 	msr	PRIMASK, r3
 8003598:	46c0      	nop			@ (mov r8, r8)
 800359a:	f3ef 8310 	mrs	r3, PRIMASK
 800359e:	63bb      	str	r3, [r7, #56]	@ 0x38
 80035a0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80035a2:	653b      	str	r3, [r7, #80]	@ 0x50
 80035a4:	2301      	movs	r3, #1
 80035a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80035a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80035aa:	f383 8810 	msr	PRIMASK, r3
 80035ae:	46c0      	nop			@ (mov r8, r8)
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	681b      	ldr	r3, [r3, #0]
 80035b4:	689a      	ldr	r2, [r3, #8]
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	496e      	ldr	r1, [pc, #440]	@ (8003774 <HAL_UART_Abort+0x214>)
 80035bc:	400a      	ands	r2, r1
 80035be:	609a      	str	r2, [r3, #8]
 80035c0:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80035c2:	643b      	str	r3, [r7, #64]	@ 0x40
 80035c4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80035c6:	f383 8810 	msr	PRIMASK, r3
 80035ca:	46c0      	nop			@ (mov r8, r8)
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80035d0:	2b01      	cmp	r3, #1
 80035d2:	d118      	bne.n	8003606 <HAL_UART_Abort+0xa6>
 80035d4:	f3ef 8310 	mrs	r3, PRIMASK
 80035d8:	623b      	str	r3, [r7, #32]
 80035da:	6a3b      	ldr	r3, [r7, #32]
 80035dc:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80035de:	2301      	movs	r3, #1
 80035e0:	627b      	str	r3, [r7, #36]	@ 0x24
 80035e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035e4:	f383 8810 	msr	PRIMASK, r3
 80035e8:	46c0      	nop			@ (mov r8, r8)
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	681a      	ldr	r2, [r3, #0]
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	2110      	movs	r1, #16
 80035f6:	438a      	bics	r2, r1
 80035f8:	601a      	str	r2, [r3, #0]
 80035fa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80035fc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80035fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003600:	f383 8810 	msr	PRIMASK, r3
 8003604:	46c0      	nop			@ (mov r8, r8)
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	689b      	ldr	r3, [r3, #8]
 800360c:	2280      	movs	r2, #128	@ 0x80
 800360e:	4013      	ands	r3, r2
 8003610:	2b80      	cmp	r3, #128	@ 0x80
 8003612:	d135      	bne.n	8003680 <HAL_UART_Abort+0x120>
 8003614:	f3ef 8310 	mrs	r3, PRIMASK
 8003618:	617b      	str	r3, [r7, #20]
 800361a:	697b      	ldr	r3, [r7, #20]
 800361c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800361e:	2301      	movs	r3, #1
 8003620:	61bb      	str	r3, [r7, #24]
 8003622:	69bb      	ldr	r3, [r7, #24]
 8003624:	f383 8810 	msr	PRIMASK, r3
 8003628:	46c0      	nop			@ (mov r8, r8)
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	689a      	ldr	r2, [r3, #8]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	2180      	movs	r1, #128	@ 0x80
 8003636:	438a      	bics	r2, r1
 8003638:	609a      	str	r2, [r3, #8]
 800363a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800363c:	61fb      	str	r3, [r7, #28]
 800363e:	69fb      	ldr	r3, [r7, #28]
 8003640:	f383 8810 	msr	PRIMASK, r3
 8003644:	46c0      	nop			@ (mov r8, r8)
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800364a:	2b00      	cmp	r3, #0
 800364c:	d018      	beq.n	8003680 <HAL_UART_Abort+0x120>
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003652:	2200      	movs	r2, #0
 8003654:	639a      	str	r2, [r3, #56]	@ 0x38
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800365a:	0018      	movs	r0, r3
 800365c:	f7fe fd3a 	bl	80020d4 <HAL_DMA_Abort>
 8003660:	1e03      	subs	r3, r0, #0
 8003662:	d00d      	beq.n	8003680 <HAL_UART_Abort+0x120>
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003668:	0018      	movs	r0, r3
 800366a:	f7fe fec1 	bl	80023f0 <HAL_DMA_GetError>
 800366e:	0003      	movs	r3, r0
 8003670:	2b20      	cmp	r3, #32
 8003672:	d105      	bne.n	8003680 <HAL_UART_Abort+0x120>
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	2290      	movs	r2, #144	@ 0x90
 8003678:	2110      	movs	r1, #16
 800367a:	5099      	str	r1, [r3, r2]
 800367c:	2303      	movs	r3, #3
 800367e:	e072      	b.n	8003766 <HAL_UART_Abort+0x206>
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	689b      	ldr	r3, [r3, #8]
 8003686:	2240      	movs	r2, #64	@ 0x40
 8003688:	4013      	ands	r3, r2
 800368a:	2b40      	cmp	r3, #64	@ 0x40
 800368c:	d139      	bne.n	8003702 <HAL_UART_Abort+0x1a2>
 800368e:	f3ef 8310 	mrs	r3, PRIMASK
 8003692:	60bb      	str	r3, [r7, #8]
 8003694:	68bb      	ldr	r3, [r7, #8]
 8003696:	647b      	str	r3, [r7, #68]	@ 0x44
 8003698:	2301      	movs	r3, #1
 800369a:	60fb      	str	r3, [r7, #12]
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	f383 8810 	msr	PRIMASK, r3
 80036a2:	46c0      	nop			@ (mov r8, r8)
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	689a      	ldr	r2, [r3, #8]
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	681b      	ldr	r3, [r3, #0]
 80036ae:	2140      	movs	r1, #64	@ 0x40
 80036b0:	438a      	bics	r2, r1
 80036b2:	609a      	str	r2, [r3, #8]
 80036b4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80036b6:	613b      	str	r3, [r7, #16]
 80036b8:	693b      	ldr	r3, [r7, #16]
 80036ba:	f383 8810 	msr	PRIMASK, r3
 80036be:	46c0      	nop			@ (mov r8, r8)
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	2280      	movs	r2, #128	@ 0x80
 80036c4:	589b      	ldr	r3, [r3, r2]
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	d01b      	beq.n	8003702 <HAL_UART_Abort+0x1a2>
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	2280      	movs	r2, #128	@ 0x80
 80036ce:	589b      	ldr	r3, [r3, r2]
 80036d0:	2200      	movs	r2, #0
 80036d2:	639a      	str	r2, [r3, #56]	@ 0x38
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	2280      	movs	r2, #128	@ 0x80
 80036d8:	589b      	ldr	r3, [r3, r2]
 80036da:	0018      	movs	r0, r3
 80036dc:	f7fe fcfa 	bl	80020d4 <HAL_DMA_Abort>
 80036e0:	1e03      	subs	r3, r0, #0
 80036e2:	d00e      	beq.n	8003702 <HAL_UART_Abort+0x1a2>
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	2280      	movs	r2, #128	@ 0x80
 80036e8:	589b      	ldr	r3, [r3, r2]
 80036ea:	0018      	movs	r0, r3
 80036ec:	f7fe fe80 	bl	80023f0 <HAL_DMA_GetError>
 80036f0:	0003      	movs	r3, r0
 80036f2:	2b20      	cmp	r3, #32
 80036f4:	d105      	bne.n	8003702 <HAL_UART_Abort+0x1a2>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	2290      	movs	r2, #144	@ 0x90
 80036fa:	2110      	movs	r1, #16
 80036fc:	5099      	str	r1, [r3, r2]
 80036fe:	2303      	movs	r3, #3
 8003700:	e031      	b.n	8003766 <HAL_UART_Abort+0x206>
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	2256      	movs	r2, #86	@ 0x56
 8003706:	2100      	movs	r1, #0
 8003708:	5299      	strh	r1, [r3, r2]
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	225e      	movs	r2, #94	@ 0x5e
 800370e:	2100      	movs	r1, #0
 8003710:	5299      	strh	r1, [r3, r2]
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	681b      	ldr	r3, [r3, #0]
 8003716:	220f      	movs	r2, #15
 8003718:	621a      	str	r2, [r3, #32]
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 800371e:	2380      	movs	r3, #128	@ 0x80
 8003720:	059b      	lsls	r3, r3, #22
 8003722:	429a      	cmp	r2, r3
 8003724:	d107      	bne.n	8003736 <HAL_UART_Abort+0x1d6>
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	681b      	ldr	r3, [r3, #0]
 800372a:	699a      	ldr	r2, [r3, #24]
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	2110      	movs	r1, #16
 8003732:	430a      	orrs	r2, r1
 8003734:	619a      	str	r2, [r3, #24]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	699a      	ldr	r2, [r3, #24]
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	2108      	movs	r1, #8
 8003742:	430a      	orrs	r2, r1
 8003744:	619a      	str	r2, [r3, #24]
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	2288      	movs	r2, #136	@ 0x88
 800374a:	2120      	movs	r1, #32
 800374c:	5099      	str	r1, [r3, r2]
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	228c      	movs	r2, #140	@ 0x8c
 8003752:	2120      	movs	r1, #32
 8003754:	5099      	str	r1, [r3, r2]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	2200      	movs	r2, #0
 800375a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	2290      	movs	r2, #144	@ 0x90
 8003760:	2100      	movs	r1, #0
 8003762:	5099      	str	r1, [r3, r2]
 8003764:	2300      	movs	r3, #0
 8003766:	0018      	movs	r0, r3
 8003768:	46bd      	mov	sp, r7
 800376a:	b016      	add	sp, #88	@ 0x58
 800376c:	bd80      	pop	{r7, pc}
 800376e:	46c0      	nop			@ (mov r8, r8)
 8003770:	fffffe1f 	.word	0xfffffe1f
 8003774:	ef7ffffe 	.word	0xef7ffffe

08003778 <HAL_UART_AbortReceive>:
 8003778:	b580      	push	{r7, lr}
 800377a:	b092      	sub	sp, #72	@ 0x48
 800377c:	af00      	add	r7, sp, #0
 800377e:	6078      	str	r0, [r7, #4]
 8003780:	f3ef 8310 	mrs	r3, PRIMASK
 8003784:	623b      	str	r3, [r7, #32]
 8003786:	6a3b      	ldr	r3, [r7, #32]
 8003788:	647b      	str	r3, [r7, #68]	@ 0x44
 800378a:	2301      	movs	r3, #1
 800378c:	627b      	str	r3, [r7, #36]	@ 0x24
 800378e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003790:	f383 8810 	msr	PRIMASK, r3
 8003794:	46c0      	nop			@ (mov r8, r8)
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	681a      	ldr	r2, [r3, #0]
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	494d      	ldr	r1, [pc, #308]	@ (80038d8 <HAL_UART_AbortReceive+0x160>)
 80037a2:	400a      	ands	r2, r1
 80037a4:	601a      	str	r2, [r3, #0]
 80037a6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80037a8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80037aa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80037ac:	f383 8810 	msr	PRIMASK, r3
 80037b0:	46c0      	nop			@ (mov r8, r8)
 80037b2:	f3ef 8310 	mrs	r3, PRIMASK
 80037b6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80037b8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80037ba:	643b      	str	r3, [r7, #64]	@ 0x40
 80037bc:	2301      	movs	r3, #1
 80037be:	633b      	str	r3, [r7, #48]	@ 0x30
 80037c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80037c2:	f383 8810 	msr	PRIMASK, r3
 80037c6:	46c0      	nop			@ (mov r8, r8)
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	689a      	ldr	r2, [r3, #8]
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	4942      	ldr	r1, [pc, #264]	@ (80038dc <HAL_UART_AbortReceive+0x164>)
 80037d4:	400a      	ands	r2, r1
 80037d6:	609a      	str	r2, [r3, #8]
 80037d8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80037da:	637b      	str	r3, [r7, #52]	@ 0x34
 80037dc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80037de:	f383 8810 	msr	PRIMASK, r3
 80037e2:	46c0      	nop			@ (mov r8, r8)
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80037e8:	2b01      	cmp	r3, #1
 80037ea:	d118      	bne.n	800381e <HAL_UART_AbortReceive+0xa6>
 80037ec:	f3ef 8310 	mrs	r3, PRIMASK
 80037f0:	617b      	str	r3, [r7, #20]
 80037f2:	697b      	ldr	r3, [r7, #20]
 80037f4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80037f6:	2301      	movs	r3, #1
 80037f8:	61bb      	str	r3, [r7, #24]
 80037fa:	69bb      	ldr	r3, [r7, #24]
 80037fc:	f383 8810 	msr	PRIMASK, r3
 8003800:	46c0      	nop			@ (mov r8, r8)
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	681a      	ldr	r2, [r3, #0]
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	2110      	movs	r1, #16
 800380e:	438a      	bics	r2, r1
 8003810:	601a      	str	r2, [r3, #0]
 8003812:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003814:	61fb      	str	r3, [r7, #28]
 8003816:	69fb      	ldr	r3, [r7, #28]
 8003818:	f383 8810 	msr	PRIMASK, r3
 800381c:	46c0      	nop			@ (mov r8, r8)
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	689b      	ldr	r3, [r3, #8]
 8003824:	2240      	movs	r2, #64	@ 0x40
 8003826:	4013      	ands	r3, r2
 8003828:	2b40      	cmp	r3, #64	@ 0x40
 800382a:	d139      	bne.n	80038a0 <HAL_UART_AbortReceive+0x128>
 800382c:	f3ef 8310 	mrs	r3, PRIMASK
 8003830:	60bb      	str	r3, [r7, #8]
 8003832:	68bb      	ldr	r3, [r7, #8]
 8003834:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003836:	2301      	movs	r3, #1
 8003838:	60fb      	str	r3, [r7, #12]
 800383a:	68fb      	ldr	r3, [r7, #12]
 800383c:	f383 8810 	msr	PRIMASK, r3
 8003840:	46c0      	nop			@ (mov r8, r8)
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	689a      	ldr	r2, [r3, #8]
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	2140      	movs	r1, #64	@ 0x40
 800384e:	438a      	bics	r2, r1
 8003850:	609a      	str	r2, [r3, #8]
 8003852:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003854:	613b      	str	r3, [r7, #16]
 8003856:	693b      	ldr	r3, [r7, #16]
 8003858:	f383 8810 	msr	PRIMASK, r3
 800385c:	46c0      	nop			@ (mov r8, r8)
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	2280      	movs	r2, #128	@ 0x80
 8003862:	589b      	ldr	r3, [r3, r2]
 8003864:	2b00      	cmp	r3, #0
 8003866:	d01b      	beq.n	80038a0 <HAL_UART_AbortReceive+0x128>
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	2280      	movs	r2, #128	@ 0x80
 800386c:	589b      	ldr	r3, [r3, r2]
 800386e:	2200      	movs	r2, #0
 8003870:	639a      	str	r2, [r3, #56]	@ 0x38
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	2280      	movs	r2, #128	@ 0x80
 8003876:	589b      	ldr	r3, [r3, r2]
 8003878:	0018      	movs	r0, r3
 800387a:	f7fe fc2b 	bl	80020d4 <HAL_DMA_Abort>
 800387e:	1e03      	subs	r3, r0, #0
 8003880:	d00e      	beq.n	80038a0 <HAL_UART_AbortReceive+0x128>
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	2280      	movs	r2, #128	@ 0x80
 8003886:	589b      	ldr	r3, [r3, r2]
 8003888:	0018      	movs	r0, r3
 800388a:	f7fe fdb1 	bl	80023f0 <HAL_DMA_GetError>
 800388e:	0003      	movs	r3, r0
 8003890:	2b20      	cmp	r3, #32
 8003892:	d105      	bne.n	80038a0 <HAL_UART_AbortReceive+0x128>
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	2290      	movs	r2, #144	@ 0x90
 8003898:	2110      	movs	r1, #16
 800389a:	5099      	str	r1, [r3, r2]
 800389c:	2303      	movs	r3, #3
 800389e:	e017      	b.n	80038d0 <HAL_UART_AbortReceive+0x158>
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	225e      	movs	r2, #94	@ 0x5e
 80038a4:	2100      	movs	r1, #0
 80038a6:	5299      	strh	r1, [r3, r2]
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	220f      	movs	r2, #15
 80038ae:	621a      	str	r2, [r3, #32]
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	699a      	ldr	r2, [r3, #24]
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	681b      	ldr	r3, [r3, #0]
 80038ba:	2108      	movs	r1, #8
 80038bc:	430a      	orrs	r2, r1
 80038be:	619a      	str	r2, [r3, #24]
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	228c      	movs	r2, #140	@ 0x8c
 80038c4:	2120      	movs	r1, #32
 80038c6:	5099      	str	r1, [r3, r2]
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	2200      	movs	r2, #0
 80038cc:	66da      	str	r2, [r3, #108]	@ 0x6c
 80038ce:	2300      	movs	r3, #0
 80038d0:	0018      	movs	r0, r3
 80038d2:	46bd      	mov	sp, r7
 80038d4:	b012      	add	sp, #72	@ 0x48
 80038d6:	bd80      	pop	{r7, pc}
 80038d8:	fffffedf 	.word	0xfffffedf
 80038dc:	effffffe 	.word	0xeffffffe

080038e0 <HAL_UART_IRQHandler>:
 80038e0:	b5b0      	push	{r4, r5, r7, lr}
 80038e2:	b0aa      	sub	sp, #168	@ 0xa8
 80038e4:	af00      	add	r7, sp, #0
 80038e6:	6078      	str	r0, [r7, #4]
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	69db      	ldr	r3, [r3, #28]
 80038ee:	22a4      	movs	r2, #164	@ 0xa4
 80038f0:	18b9      	adds	r1, r7, r2
 80038f2:	600b      	str	r3, [r1, #0]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	20a0      	movs	r0, #160	@ 0xa0
 80038fc:	1839      	adds	r1, r7, r0
 80038fe:	600b      	str	r3, [r1, #0]
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	689b      	ldr	r3, [r3, #8]
 8003906:	249c      	movs	r4, #156	@ 0x9c
 8003908:	1939      	adds	r1, r7, r4
 800390a:	600b      	str	r3, [r1, #0]
 800390c:	0011      	movs	r1, r2
 800390e:	18bb      	adds	r3, r7, r2
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	4aa2      	ldr	r2, [pc, #648]	@ (8003b9c <HAL_UART_IRQHandler+0x2bc>)
 8003914:	4013      	ands	r3, r2
 8003916:	2298      	movs	r2, #152	@ 0x98
 8003918:	18bd      	adds	r5, r7, r2
 800391a:	602b      	str	r3, [r5, #0]
 800391c:	18bb      	adds	r3, r7, r2
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	2b00      	cmp	r3, #0
 8003922:	d11a      	bne.n	800395a <HAL_UART_IRQHandler+0x7a>
 8003924:	187b      	adds	r3, r7, r1
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	2220      	movs	r2, #32
 800392a:	4013      	ands	r3, r2
 800392c:	d015      	beq.n	800395a <HAL_UART_IRQHandler+0x7a>
 800392e:	183b      	adds	r3, r7, r0
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	2220      	movs	r2, #32
 8003934:	4013      	ands	r3, r2
 8003936:	d105      	bne.n	8003944 <HAL_UART_IRQHandler+0x64>
 8003938:	193b      	adds	r3, r7, r4
 800393a:	681a      	ldr	r2, [r3, #0]
 800393c:	2380      	movs	r3, #128	@ 0x80
 800393e:	055b      	lsls	r3, r3, #21
 8003940:	4013      	ands	r3, r2
 8003942:	d00a      	beq.n	800395a <HAL_UART_IRQHandler+0x7a>
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003948:	2b00      	cmp	r3, #0
 800394a:	d100      	bne.n	800394e <HAL_UART_IRQHandler+0x6e>
 800394c:	e2fb      	b.n	8003f46 <HAL_UART_IRQHandler+0x666>
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003952:	687a      	ldr	r2, [r7, #4]
 8003954:	0010      	movs	r0, r2
 8003956:	4798      	blx	r3
 8003958:	e2f5      	b.n	8003f46 <HAL_UART_IRQHandler+0x666>
 800395a:	2398      	movs	r3, #152	@ 0x98
 800395c:	18fb      	adds	r3, r7, r3
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	2b00      	cmp	r3, #0
 8003962:	d100      	bne.n	8003966 <HAL_UART_IRQHandler+0x86>
 8003964:	e122      	b.n	8003bac <HAL_UART_IRQHandler+0x2cc>
 8003966:	239c      	movs	r3, #156	@ 0x9c
 8003968:	18fb      	adds	r3, r7, r3
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	4a8c      	ldr	r2, [pc, #560]	@ (8003ba0 <HAL_UART_IRQHandler+0x2c0>)
 800396e:	4013      	ands	r3, r2
 8003970:	d106      	bne.n	8003980 <HAL_UART_IRQHandler+0xa0>
 8003972:	23a0      	movs	r3, #160	@ 0xa0
 8003974:	18fb      	adds	r3, r7, r3
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	4a8a      	ldr	r2, [pc, #552]	@ (8003ba4 <HAL_UART_IRQHandler+0x2c4>)
 800397a:	4013      	ands	r3, r2
 800397c:	d100      	bne.n	8003980 <HAL_UART_IRQHandler+0xa0>
 800397e:	e115      	b.n	8003bac <HAL_UART_IRQHandler+0x2cc>
 8003980:	23a4      	movs	r3, #164	@ 0xa4
 8003982:	18fb      	adds	r3, r7, r3
 8003984:	681b      	ldr	r3, [r3, #0]
 8003986:	2201      	movs	r2, #1
 8003988:	4013      	ands	r3, r2
 800398a:	d012      	beq.n	80039b2 <HAL_UART_IRQHandler+0xd2>
 800398c:	23a0      	movs	r3, #160	@ 0xa0
 800398e:	18fb      	adds	r3, r7, r3
 8003990:	681a      	ldr	r2, [r3, #0]
 8003992:	2380      	movs	r3, #128	@ 0x80
 8003994:	005b      	lsls	r3, r3, #1
 8003996:	4013      	ands	r3, r2
 8003998:	d00b      	beq.n	80039b2 <HAL_UART_IRQHandler+0xd2>
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	681b      	ldr	r3, [r3, #0]
 800399e:	2201      	movs	r2, #1
 80039a0:	621a      	str	r2, [r3, #32]
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	2290      	movs	r2, #144	@ 0x90
 80039a6:	589b      	ldr	r3, [r3, r2]
 80039a8:	2201      	movs	r2, #1
 80039aa:	431a      	orrs	r2, r3
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	2190      	movs	r1, #144	@ 0x90
 80039b0:	505a      	str	r2, [r3, r1]
 80039b2:	23a4      	movs	r3, #164	@ 0xa4
 80039b4:	18fb      	adds	r3, r7, r3
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	2202      	movs	r2, #2
 80039ba:	4013      	ands	r3, r2
 80039bc:	d011      	beq.n	80039e2 <HAL_UART_IRQHandler+0x102>
 80039be:	239c      	movs	r3, #156	@ 0x9c
 80039c0:	18fb      	adds	r3, r7, r3
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	2201      	movs	r2, #1
 80039c6:	4013      	ands	r3, r2
 80039c8:	d00b      	beq.n	80039e2 <HAL_UART_IRQHandler+0x102>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	2202      	movs	r2, #2
 80039d0:	621a      	str	r2, [r3, #32]
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	2290      	movs	r2, #144	@ 0x90
 80039d6:	589b      	ldr	r3, [r3, r2]
 80039d8:	2204      	movs	r2, #4
 80039da:	431a      	orrs	r2, r3
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	2190      	movs	r1, #144	@ 0x90
 80039e0:	505a      	str	r2, [r3, r1]
 80039e2:	23a4      	movs	r3, #164	@ 0xa4
 80039e4:	18fb      	adds	r3, r7, r3
 80039e6:	681b      	ldr	r3, [r3, #0]
 80039e8:	2204      	movs	r2, #4
 80039ea:	4013      	ands	r3, r2
 80039ec:	d011      	beq.n	8003a12 <HAL_UART_IRQHandler+0x132>
 80039ee:	239c      	movs	r3, #156	@ 0x9c
 80039f0:	18fb      	adds	r3, r7, r3
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	2201      	movs	r2, #1
 80039f6:	4013      	ands	r3, r2
 80039f8:	d00b      	beq.n	8003a12 <HAL_UART_IRQHandler+0x132>
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	681b      	ldr	r3, [r3, #0]
 80039fe:	2204      	movs	r2, #4
 8003a00:	621a      	str	r2, [r3, #32]
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	2290      	movs	r2, #144	@ 0x90
 8003a06:	589b      	ldr	r3, [r3, r2]
 8003a08:	2202      	movs	r2, #2
 8003a0a:	431a      	orrs	r2, r3
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	2190      	movs	r1, #144	@ 0x90
 8003a10:	505a      	str	r2, [r3, r1]
 8003a12:	23a4      	movs	r3, #164	@ 0xa4
 8003a14:	18fb      	adds	r3, r7, r3
 8003a16:	681b      	ldr	r3, [r3, #0]
 8003a18:	2208      	movs	r2, #8
 8003a1a:	4013      	ands	r3, r2
 8003a1c:	d017      	beq.n	8003a4e <HAL_UART_IRQHandler+0x16e>
 8003a1e:	23a0      	movs	r3, #160	@ 0xa0
 8003a20:	18fb      	adds	r3, r7, r3
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	2220      	movs	r2, #32
 8003a26:	4013      	ands	r3, r2
 8003a28:	d105      	bne.n	8003a36 <HAL_UART_IRQHandler+0x156>
 8003a2a:	239c      	movs	r3, #156	@ 0x9c
 8003a2c:	18fb      	adds	r3, r7, r3
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	4a5b      	ldr	r2, [pc, #364]	@ (8003ba0 <HAL_UART_IRQHandler+0x2c0>)
 8003a32:	4013      	ands	r3, r2
 8003a34:	d00b      	beq.n	8003a4e <HAL_UART_IRQHandler+0x16e>
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	2208      	movs	r2, #8
 8003a3c:	621a      	str	r2, [r3, #32]
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	2290      	movs	r2, #144	@ 0x90
 8003a42:	589b      	ldr	r3, [r3, r2]
 8003a44:	2208      	movs	r2, #8
 8003a46:	431a      	orrs	r2, r3
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	2190      	movs	r1, #144	@ 0x90
 8003a4c:	505a      	str	r2, [r3, r1]
 8003a4e:	23a4      	movs	r3, #164	@ 0xa4
 8003a50:	18fb      	adds	r3, r7, r3
 8003a52:	681a      	ldr	r2, [r3, #0]
 8003a54:	2380      	movs	r3, #128	@ 0x80
 8003a56:	011b      	lsls	r3, r3, #4
 8003a58:	4013      	ands	r3, r2
 8003a5a:	d013      	beq.n	8003a84 <HAL_UART_IRQHandler+0x1a4>
 8003a5c:	23a0      	movs	r3, #160	@ 0xa0
 8003a5e:	18fb      	adds	r3, r7, r3
 8003a60:	681a      	ldr	r2, [r3, #0]
 8003a62:	2380      	movs	r3, #128	@ 0x80
 8003a64:	04db      	lsls	r3, r3, #19
 8003a66:	4013      	ands	r3, r2
 8003a68:	d00c      	beq.n	8003a84 <HAL_UART_IRQHandler+0x1a4>
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	2280      	movs	r2, #128	@ 0x80
 8003a70:	0112      	lsls	r2, r2, #4
 8003a72:	621a      	str	r2, [r3, #32]
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	2290      	movs	r2, #144	@ 0x90
 8003a78:	589b      	ldr	r3, [r3, r2]
 8003a7a:	2220      	movs	r2, #32
 8003a7c:	431a      	orrs	r2, r3
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	2190      	movs	r1, #144	@ 0x90
 8003a82:	505a      	str	r2, [r3, r1]
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	2290      	movs	r2, #144	@ 0x90
 8003a88:	589b      	ldr	r3, [r3, r2]
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d100      	bne.n	8003a90 <HAL_UART_IRQHandler+0x1b0>
 8003a8e:	e25c      	b.n	8003f4a <HAL_UART_IRQHandler+0x66a>
 8003a90:	23a4      	movs	r3, #164	@ 0xa4
 8003a92:	18fb      	adds	r3, r7, r3
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	2220      	movs	r2, #32
 8003a98:	4013      	ands	r3, r2
 8003a9a:	d015      	beq.n	8003ac8 <HAL_UART_IRQHandler+0x1e8>
 8003a9c:	23a0      	movs	r3, #160	@ 0xa0
 8003a9e:	18fb      	adds	r3, r7, r3
 8003aa0:	681b      	ldr	r3, [r3, #0]
 8003aa2:	2220      	movs	r2, #32
 8003aa4:	4013      	ands	r3, r2
 8003aa6:	d106      	bne.n	8003ab6 <HAL_UART_IRQHandler+0x1d6>
 8003aa8:	239c      	movs	r3, #156	@ 0x9c
 8003aaa:	18fb      	adds	r3, r7, r3
 8003aac:	681a      	ldr	r2, [r3, #0]
 8003aae:	2380      	movs	r3, #128	@ 0x80
 8003ab0:	055b      	lsls	r3, r3, #21
 8003ab2:	4013      	ands	r3, r2
 8003ab4:	d008      	beq.n	8003ac8 <HAL_UART_IRQHandler+0x1e8>
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d004      	beq.n	8003ac8 <HAL_UART_IRQHandler+0x1e8>
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003ac2:	687a      	ldr	r2, [r7, #4]
 8003ac4:	0010      	movs	r0, r2
 8003ac6:	4798      	blx	r3
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	2290      	movs	r2, #144	@ 0x90
 8003acc:	589b      	ldr	r3, [r3, r2]
 8003ace:	2194      	movs	r1, #148	@ 0x94
 8003ad0:	187a      	adds	r2, r7, r1
 8003ad2:	6013      	str	r3, [r2, #0]
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	689b      	ldr	r3, [r3, #8]
 8003ada:	2240      	movs	r2, #64	@ 0x40
 8003adc:	4013      	ands	r3, r2
 8003ade:	2b40      	cmp	r3, #64	@ 0x40
 8003ae0:	d004      	beq.n	8003aec <HAL_UART_IRQHandler+0x20c>
 8003ae2:	187b      	adds	r3, r7, r1
 8003ae4:	681b      	ldr	r3, [r3, #0]
 8003ae6:	2228      	movs	r2, #40	@ 0x28
 8003ae8:	4013      	ands	r3, r2
 8003aea:	d04c      	beq.n	8003b86 <HAL_UART_IRQHandler+0x2a6>
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	0018      	movs	r0, r3
 8003af0:	f000 fe86 	bl	8004800 <UART_EndRxTransfer>
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	689b      	ldr	r3, [r3, #8]
 8003afa:	2240      	movs	r2, #64	@ 0x40
 8003afc:	4013      	ands	r3, r2
 8003afe:	2b40      	cmp	r3, #64	@ 0x40
 8003b00:	d13c      	bne.n	8003b7c <HAL_UART_IRQHandler+0x29c>
 8003b02:	f3ef 8310 	mrs	r3, PRIMASK
 8003b06:	663b      	str	r3, [r7, #96]	@ 0x60
 8003b08:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003b0a:	2090      	movs	r0, #144	@ 0x90
 8003b0c:	183a      	adds	r2, r7, r0
 8003b0e:	6013      	str	r3, [r2, #0]
 8003b10:	2301      	movs	r3, #1
 8003b12:	667b      	str	r3, [r7, #100]	@ 0x64
 8003b14:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003b16:	f383 8810 	msr	PRIMASK, r3
 8003b1a:	46c0      	nop			@ (mov r8, r8)
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	689a      	ldr	r2, [r3, #8]
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	2140      	movs	r1, #64	@ 0x40
 8003b28:	438a      	bics	r2, r1
 8003b2a:	609a      	str	r2, [r3, #8]
 8003b2c:	183b      	adds	r3, r7, r0
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003b32:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003b34:	f383 8810 	msr	PRIMASK, r3
 8003b38:	46c0      	nop			@ (mov r8, r8)
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	2280      	movs	r2, #128	@ 0x80
 8003b3e:	589b      	ldr	r3, [r3, r2]
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	d016      	beq.n	8003b72 <HAL_UART_IRQHandler+0x292>
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	2280      	movs	r2, #128	@ 0x80
 8003b48:	589b      	ldr	r3, [r3, r2]
 8003b4a:	4a17      	ldr	r2, [pc, #92]	@ (8003ba8 <HAL_UART_IRQHandler+0x2c8>)
 8003b4c:	639a      	str	r2, [r3, #56]	@ 0x38
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	2280      	movs	r2, #128	@ 0x80
 8003b52:	589b      	ldr	r3, [r3, r2]
 8003b54:	0018      	movs	r0, r3
 8003b56:	f7fe fb1f 	bl	8002198 <HAL_DMA_Abort_IT>
 8003b5a:	1e03      	subs	r3, r0, #0
 8003b5c:	d01c      	beq.n	8003b98 <HAL_UART_IRQHandler+0x2b8>
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	2280      	movs	r2, #128	@ 0x80
 8003b62:	589b      	ldr	r3, [r3, r2]
 8003b64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003b66:	687a      	ldr	r2, [r7, #4]
 8003b68:	2180      	movs	r1, #128	@ 0x80
 8003b6a:	5852      	ldr	r2, [r2, r1]
 8003b6c:	0010      	movs	r0, r2
 8003b6e:	4798      	blx	r3
 8003b70:	e012      	b.n	8003b98 <HAL_UART_IRQHandler+0x2b8>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	0018      	movs	r0, r3
 8003b76:	f7fd f80d 	bl	8000b94 <HAL_UART_ErrorCallback>
 8003b7a:	e00d      	b.n	8003b98 <HAL_UART_IRQHandler+0x2b8>
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	0018      	movs	r0, r3
 8003b80:	f7fd f808 	bl	8000b94 <HAL_UART_ErrorCallback>
 8003b84:	e008      	b.n	8003b98 <HAL_UART_IRQHandler+0x2b8>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	0018      	movs	r0, r3
 8003b8a:	f7fd f803 	bl	8000b94 <HAL_UART_ErrorCallback>
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	2290      	movs	r2, #144	@ 0x90
 8003b92:	2100      	movs	r1, #0
 8003b94:	5099      	str	r1, [r3, r2]
 8003b96:	e1d8      	b.n	8003f4a <HAL_UART_IRQHandler+0x66a>
 8003b98:	46c0      	nop			@ (mov r8, r8)
 8003b9a:	e1d6      	b.n	8003f4a <HAL_UART_IRQHandler+0x66a>
 8003b9c:	0000080f 	.word	0x0000080f
 8003ba0:	10000001 	.word	0x10000001
 8003ba4:	04000120 	.word	0x04000120
 8003ba8:	08004b7d 	.word	0x08004b7d
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003bb0:	2b01      	cmp	r3, #1
 8003bb2:	d000      	beq.n	8003bb6 <HAL_UART_IRQHandler+0x2d6>
 8003bb4:	e15d      	b.n	8003e72 <HAL_UART_IRQHandler+0x592>
 8003bb6:	23a4      	movs	r3, #164	@ 0xa4
 8003bb8:	18fb      	adds	r3, r7, r3
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	2210      	movs	r2, #16
 8003bbe:	4013      	ands	r3, r2
 8003bc0:	d100      	bne.n	8003bc4 <HAL_UART_IRQHandler+0x2e4>
 8003bc2:	e156      	b.n	8003e72 <HAL_UART_IRQHandler+0x592>
 8003bc4:	23a0      	movs	r3, #160	@ 0xa0
 8003bc6:	18fb      	adds	r3, r7, r3
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	2210      	movs	r2, #16
 8003bcc:	4013      	ands	r3, r2
 8003bce:	d100      	bne.n	8003bd2 <HAL_UART_IRQHandler+0x2f2>
 8003bd0:	e14f      	b.n	8003e72 <HAL_UART_IRQHandler+0x592>
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	2210      	movs	r2, #16
 8003bd8:	621a      	str	r2, [r3, #32]
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	689b      	ldr	r3, [r3, #8]
 8003be0:	2240      	movs	r2, #64	@ 0x40
 8003be2:	4013      	ands	r3, r2
 8003be4:	2b40      	cmp	r3, #64	@ 0x40
 8003be6:	d000      	beq.n	8003bea <HAL_UART_IRQHandler+0x30a>
 8003be8:	e0c3      	b.n	8003d72 <HAL_UART_IRQHandler+0x492>
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	2280      	movs	r2, #128	@ 0x80
 8003bee:	589b      	ldr	r3, [r3, r2]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	685a      	ldr	r2, [r3, #4]
 8003bf4:	217e      	movs	r1, #126	@ 0x7e
 8003bf6:	187b      	adds	r3, r7, r1
 8003bf8:	801a      	strh	r2, [r3, #0]
 8003bfa:	187b      	adds	r3, r7, r1
 8003bfc:	881b      	ldrh	r3, [r3, #0]
 8003bfe:	2b00      	cmp	r3, #0
 8003c00:	d100      	bne.n	8003c04 <HAL_UART_IRQHandler+0x324>
 8003c02:	e097      	b.n	8003d34 <HAL_UART_IRQHandler+0x454>
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	225c      	movs	r2, #92	@ 0x5c
 8003c08:	5a9b      	ldrh	r3, [r3, r2]
 8003c0a:	187a      	adds	r2, r7, r1
 8003c0c:	8812      	ldrh	r2, [r2, #0]
 8003c0e:	429a      	cmp	r2, r3
 8003c10:	d300      	bcc.n	8003c14 <HAL_UART_IRQHandler+0x334>
 8003c12:	e08f      	b.n	8003d34 <HAL_UART_IRQHandler+0x454>
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	187a      	adds	r2, r7, r1
 8003c18:	215e      	movs	r1, #94	@ 0x5e
 8003c1a:	8812      	ldrh	r2, [r2, #0]
 8003c1c:	525a      	strh	r2, [r3, r1]
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	2280      	movs	r2, #128	@ 0x80
 8003c22:	589b      	ldr	r3, [r3, r2]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	2220      	movs	r2, #32
 8003c2a:	4013      	ands	r3, r2
 8003c2c:	d170      	bne.n	8003d10 <HAL_UART_IRQHandler+0x430>
 8003c2e:	f3ef 8310 	mrs	r3, PRIMASK
 8003c32:	633b      	str	r3, [r7, #48]	@ 0x30
 8003c34:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003c36:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003c38:	2301      	movs	r3, #1
 8003c3a:	637b      	str	r3, [r7, #52]	@ 0x34
 8003c3c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003c3e:	f383 8810 	msr	PRIMASK, r3
 8003c42:	46c0      	nop			@ (mov r8, r8)
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	681a      	ldr	r2, [r3, #0]
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	49c4      	ldr	r1, [pc, #784]	@ (8003f60 <HAL_UART_IRQHandler+0x680>)
 8003c50:	400a      	ands	r2, r1
 8003c52:	601a      	str	r2, [r3, #0]
 8003c54:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003c56:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003c58:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003c5a:	f383 8810 	msr	PRIMASK, r3
 8003c5e:	46c0      	nop			@ (mov r8, r8)
 8003c60:	f3ef 8310 	mrs	r3, PRIMASK
 8003c64:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003c66:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003c68:	677b      	str	r3, [r7, #116]	@ 0x74
 8003c6a:	2301      	movs	r3, #1
 8003c6c:	643b      	str	r3, [r7, #64]	@ 0x40
 8003c6e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003c70:	f383 8810 	msr	PRIMASK, r3
 8003c74:	46c0      	nop			@ (mov r8, r8)
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	689a      	ldr	r2, [r3, #8]
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	2101      	movs	r1, #1
 8003c82:	438a      	bics	r2, r1
 8003c84:	609a      	str	r2, [r3, #8]
 8003c86:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003c88:	647b      	str	r3, [r7, #68]	@ 0x44
 8003c8a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003c8c:	f383 8810 	msr	PRIMASK, r3
 8003c90:	46c0      	nop			@ (mov r8, r8)
 8003c92:	f3ef 8310 	mrs	r3, PRIMASK
 8003c96:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003c98:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003c9a:	673b      	str	r3, [r7, #112]	@ 0x70
 8003c9c:	2301      	movs	r3, #1
 8003c9e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003ca0:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003ca2:	f383 8810 	msr	PRIMASK, r3
 8003ca6:	46c0      	nop			@ (mov r8, r8)
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	689a      	ldr	r2, [r3, #8]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	2140      	movs	r1, #64	@ 0x40
 8003cb4:	438a      	bics	r2, r1
 8003cb6:	609a      	str	r2, [r3, #8]
 8003cb8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003cba:	653b      	str	r3, [r7, #80]	@ 0x50
 8003cbc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003cbe:	f383 8810 	msr	PRIMASK, r3
 8003cc2:	46c0      	nop			@ (mov r8, r8)
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	228c      	movs	r2, #140	@ 0x8c
 8003cc8:	2120      	movs	r1, #32
 8003cca:	5099      	str	r1, [r3, r2]
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	2200      	movs	r2, #0
 8003cd0:	66da      	str	r2, [r3, #108]	@ 0x6c
 8003cd2:	f3ef 8310 	mrs	r3, PRIMASK
 8003cd6:	657b      	str	r3, [r7, #84]	@ 0x54
 8003cd8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003cda:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003cdc:	2301      	movs	r3, #1
 8003cde:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003ce0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003ce2:	f383 8810 	msr	PRIMASK, r3
 8003ce6:	46c0      	nop			@ (mov r8, r8)
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	681a      	ldr	r2, [r3, #0]
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	2110      	movs	r1, #16
 8003cf4:	438a      	bics	r2, r1
 8003cf6:	601a      	str	r2, [r3, #0]
 8003cf8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003cfa:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003cfc:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003cfe:	f383 8810 	msr	PRIMASK, r3
 8003d02:	46c0      	nop			@ (mov r8, r8)
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	2280      	movs	r2, #128	@ 0x80
 8003d08:	589b      	ldr	r3, [r3, r2]
 8003d0a:	0018      	movs	r0, r3
 8003d0c:	f7fe f9e2 	bl	80020d4 <HAL_DMA_Abort>
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	2202      	movs	r2, #2
 8003d14:	671a      	str	r2, [r3, #112]	@ 0x70
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	225c      	movs	r2, #92	@ 0x5c
 8003d1a:	5a9a      	ldrh	r2, [r3, r2]
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	215e      	movs	r1, #94	@ 0x5e
 8003d20:	5a5b      	ldrh	r3, [r3, r1]
 8003d22:	b29b      	uxth	r3, r3
 8003d24:	1ad3      	subs	r3, r2, r3
 8003d26:	b29a      	uxth	r2, r3
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	0011      	movs	r1, r2
 8003d2c:	0018      	movs	r0, r3
 8003d2e:	f7fc fec7 	bl	8000ac0 <HAL_UARTEx_RxEventCallback>
 8003d32:	e10c      	b.n	8003f4e <HAL_UART_IRQHandler+0x66e>
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	225c      	movs	r2, #92	@ 0x5c
 8003d38:	5a9b      	ldrh	r3, [r3, r2]
 8003d3a:	227e      	movs	r2, #126	@ 0x7e
 8003d3c:	18ba      	adds	r2, r7, r2
 8003d3e:	8812      	ldrh	r2, [r2, #0]
 8003d40:	429a      	cmp	r2, r3
 8003d42:	d000      	beq.n	8003d46 <HAL_UART_IRQHandler+0x466>
 8003d44:	e103      	b.n	8003f4e <HAL_UART_IRQHandler+0x66e>
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	2280      	movs	r2, #128	@ 0x80
 8003d4a:	589b      	ldr	r3, [r3, r2]
 8003d4c:	681b      	ldr	r3, [r3, #0]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	2220      	movs	r2, #32
 8003d52:	4013      	ands	r3, r2
 8003d54:	2b20      	cmp	r3, #32
 8003d56:	d000      	beq.n	8003d5a <HAL_UART_IRQHandler+0x47a>
 8003d58:	e0f9      	b.n	8003f4e <HAL_UART_IRQHandler+0x66e>
 8003d5a:	687b      	ldr	r3, [r7, #4]
 8003d5c:	2202      	movs	r2, #2
 8003d5e:	671a      	str	r2, [r3, #112]	@ 0x70
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	225c      	movs	r2, #92	@ 0x5c
 8003d64:	5a9a      	ldrh	r2, [r3, r2]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	0011      	movs	r1, r2
 8003d6a:	0018      	movs	r0, r3
 8003d6c:	f7fc fea8 	bl	8000ac0 <HAL_UARTEx_RxEventCallback>
 8003d70:	e0ed      	b.n	8003f4e <HAL_UART_IRQHandler+0x66e>
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	225c      	movs	r2, #92	@ 0x5c
 8003d76:	5a99      	ldrh	r1, [r3, r2]
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	225e      	movs	r2, #94	@ 0x5e
 8003d7c:	5a9b      	ldrh	r3, [r3, r2]
 8003d7e:	b29a      	uxth	r2, r3
 8003d80:	208e      	movs	r0, #142	@ 0x8e
 8003d82:	183b      	adds	r3, r7, r0
 8003d84:	1a8a      	subs	r2, r1, r2
 8003d86:	801a      	strh	r2, [r3, #0]
 8003d88:	687b      	ldr	r3, [r7, #4]
 8003d8a:	225e      	movs	r2, #94	@ 0x5e
 8003d8c:	5a9b      	ldrh	r3, [r3, r2]
 8003d8e:	b29b      	uxth	r3, r3
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d100      	bne.n	8003d96 <HAL_UART_IRQHandler+0x4b6>
 8003d94:	e0dd      	b.n	8003f52 <HAL_UART_IRQHandler+0x672>
 8003d96:	183b      	adds	r3, r7, r0
 8003d98:	881b      	ldrh	r3, [r3, #0]
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d100      	bne.n	8003da0 <HAL_UART_IRQHandler+0x4c0>
 8003d9e:	e0d8      	b.n	8003f52 <HAL_UART_IRQHandler+0x672>
 8003da0:	f3ef 8310 	mrs	r3, PRIMASK
 8003da4:	60fb      	str	r3, [r7, #12]
 8003da6:	68fb      	ldr	r3, [r7, #12]
 8003da8:	2488      	movs	r4, #136	@ 0x88
 8003daa:	193a      	adds	r2, r7, r4
 8003dac:	6013      	str	r3, [r2, #0]
 8003dae:	2301      	movs	r3, #1
 8003db0:	613b      	str	r3, [r7, #16]
 8003db2:	693b      	ldr	r3, [r7, #16]
 8003db4:	f383 8810 	msr	PRIMASK, r3
 8003db8:	46c0      	nop			@ (mov r8, r8)
 8003dba:	687b      	ldr	r3, [r7, #4]
 8003dbc:	681b      	ldr	r3, [r3, #0]
 8003dbe:	681a      	ldr	r2, [r3, #0]
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	4967      	ldr	r1, [pc, #412]	@ (8003f64 <HAL_UART_IRQHandler+0x684>)
 8003dc6:	400a      	ands	r2, r1
 8003dc8:	601a      	str	r2, [r3, #0]
 8003dca:	193b      	adds	r3, r7, r4
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	617b      	str	r3, [r7, #20]
 8003dd0:	697b      	ldr	r3, [r7, #20]
 8003dd2:	f383 8810 	msr	PRIMASK, r3
 8003dd6:	46c0      	nop			@ (mov r8, r8)
 8003dd8:	f3ef 8310 	mrs	r3, PRIMASK
 8003ddc:	61bb      	str	r3, [r7, #24]
 8003dde:	69bb      	ldr	r3, [r7, #24]
 8003de0:	2484      	movs	r4, #132	@ 0x84
 8003de2:	193a      	adds	r2, r7, r4
 8003de4:	6013      	str	r3, [r2, #0]
 8003de6:	2301      	movs	r3, #1
 8003de8:	61fb      	str	r3, [r7, #28]
 8003dea:	69fb      	ldr	r3, [r7, #28]
 8003dec:	f383 8810 	msr	PRIMASK, r3
 8003df0:	46c0      	nop			@ (mov r8, r8)
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	689a      	ldr	r2, [r3, #8]
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	495a      	ldr	r1, [pc, #360]	@ (8003f68 <HAL_UART_IRQHandler+0x688>)
 8003dfe:	400a      	ands	r2, r1
 8003e00:	609a      	str	r2, [r3, #8]
 8003e02:	193b      	adds	r3, r7, r4
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	623b      	str	r3, [r7, #32]
 8003e08:	6a3b      	ldr	r3, [r7, #32]
 8003e0a:	f383 8810 	msr	PRIMASK, r3
 8003e0e:	46c0      	nop			@ (mov r8, r8)
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	228c      	movs	r2, #140	@ 0x8c
 8003e14:	2120      	movs	r1, #32
 8003e16:	5099      	str	r1, [r3, r2]
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	2200      	movs	r2, #0
 8003e1c:	66da      	str	r2, [r3, #108]	@ 0x6c
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	2200      	movs	r2, #0
 8003e22:	675a      	str	r2, [r3, #116]	@ 0x74
 8003e24:	f3ef 8310 	mrs	r3, PRIMASK
 8003e28:	627b      	str	r3, [r7, #36]	@ 0x24
 8003e2a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e2c:	2480      	movs	r4, #128	@ 0x80
 8003e2e:	193a      	adds	r2, r7, r4
 8003e30:	6013      	str	r3, [r2, #0]
 8003e32:	2301      	movs	r3, #1
 8003e34:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003e36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003e38:	f383 8810 	msr	PRIMASK, r3
 8003e3c:	46c0      	nop			@ (mov r8, r8)
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	681a      	ldr	r2, [r3, #0]
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	2110      	movs	r1, #16
 8003e4a:	438a      	bics	r2, r1
 8003e4c:	601a      	str	r2, [r3, #0]
 8003e4e:	193b      	adds	r3, r7, r4
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003e54:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003e56:	f383 8810 	msr	PRIMASK, r3
 8003e5a:	46c0      	nop			@ (mov r8, r8)
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	2202      	movs	r2, #2
 8003e60:	671a      	str	r2, [r3, #112]	@ 0x70
 8003e62:	183b      	adds	r3, r7, r0
 8003e64:	881a      	ldrh	r2, [r3, #0]
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	0011      	movs	r1, r2
 8003e6a:	0018      	movs	r0, r3
 8003e6c:	f7fc fe28 	bl	8000ac0 <HAL_UARTEx_RxEventCallback>
 8003e70:	e06f      	b.n	8003f52 <HAL_UART_IRQHandler+0x672>
 8003e72:	23a4      	movs	r3, #164	@ 0xa4
 8003e74:	18fb      	adds	r3, r7, r3
 8003e76:	681a      	ldr	r2, [r3, #0]
 8003e78:	2380      	movs	r3, #128	@ 0x80
 8003e7a:	035b      	lsls	r3, r3, #13
 8003e7c:	4013      	ands	r3, r2
 8003e7e:	d010      	beq.n	8003ea2 <HAL_UART_IRQHandler+0x5c2>
 8003e80:	239c      	movs	r3, #156	@ 0x9c
 8003e82:	18fb      	adds	r3, r7, r3
 8003e84:	681a      	ldr	r2, [r3, #0]
 8003e86:	2380      	movs	r3, #128	@ 0x80
 8003e88:	03db      	lsls	r3, r3, #15
 8003e8a:	4013      	ands	r3, r2
 8003e8c:	d009      	beq.n	8003ea2 <HAL_UART_IRQHandler+0x5c2>
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	2280      	movs	r2, #128	@ 0x80
 8003e94:	0352      	lsls	r2, r2, #13
 8003e96:	621a      	str	r2, [r3, #32]
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	0018      	movs	r0, r3
 8003e9c:	f000 ff24 	bl	8004ce8 <HAL_UARTEx_WakeupCallback>
 8003ea0:	e05a      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003ea2:	23a4      	movs	r3, #164	@ 0xa4
 8003ea4:	18fb      	adds	r3, r7, r3
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	2280      	movs	r2, #128	@ 0x80
 8003eaa:	4013      	ands	r3, r2
 8003eac:	d016      	beq.n	8003edc <HAL_UART_IRQHandler+0x5fc>
 8003eae:	23a0      	movs	r3, #160	@ 0xa0
 8003eb0:	18fb      	adds	r3, r7, r3
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	2280      	movs	r2, #128	@ 0x80
 8003eb6:	4013      	ands	r3, r2
 8003eb8:	d106      	bne.n	8003ec8 <HAL_UART_IRQHandler+0x5e8>
 8003eba:	239c      	movs	r3, #156	@ 0x9c
 8003ebc:	18fb      	adds	r3, r7, r3
 8003ebe:	681a      	ldr	r2, [r3, #0]
 8003ec0:	2380      	movs	r3, #128	@ 0x80
 8003ec2:	041b      	lsls	r3, r3, #16
 8003ec4:	4013      	ands	r3, r2
 8003ec6:	d009      	beq.n	8003edc <HAL_UART_IRQHandler+0x5fc>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003ecc:	2b00      	cmp	r3, #0
 8003ece:	d042      	beq.n	8003f56 <HAL_UART_IRQHandler+0x676>
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003ed4:	687a      	ldr	r2, [r7, #4]
 8003ed6:	0010      	movs	r0, r2
 8003ed8:	4798      	blx	r3
 8003eda:	e03c      	b.n	8003f56 <HAL_UART_IRQHandler+0x676>
 8003edc:	23a4      	movs	r3, #164	@ 0xa4
 8003ede:	18fb      	adds	r3, r7, r3
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	2240      	movs	r2, #64	@ 0x40
 8003ee4:	4013      	ands	r3, r2
 8003ee6:	d00a      	beq.n	8003efe <HAL_UART_IRQHandler+0x61e>
 8003ee8:	23a0      	movs	r3, #160	@ 0xa0
 8003eea:	18fb      	adds	r3, r7, r3
 8003eec:	681b      	ldr	r3, [r3, #0]
 8003eee:	2240      	movs	r2, #64	@ 0x40
 8003ef0:	4013      	ands	r3, r2
 8003ef2:	d004      	beq.n	8003efe <HAL_UART_IRQHandler+0x61e>
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	0018      	movs	r0, r3
 8003ef8:	f000 fe57 	bl	8004baa <UART_EndTransmit_IT>
 8003efc:	e02c      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003efe:	23a4      	movs	r3, #164	@ 0xa4
 8003f00:	18fb      	adds	r3, r7, r3
 8003f02:	681a      	ldr	r2, [r3, #0]
 8003f04:	2380      	movs	r3, #128	@ 0x80
 8003f06:	041b      	lsls	r3, r3, #16
 8003f08:	4013      	ands	r3, r2
 8003f0a:	d00b      	beq.n	8003f24 <HAL_UART_IRQHandler+0x644>
 8003f0c:	23a0      	movs	r3, #160	@ 0xa0
 8003f0e:	18fb      	adds	r3, r7, r3
 8003f10:	681a      	ldr	r2, [r3, #0]
 8003f12:	2380      	movs	r3, #128	@ 0x80
 8003f14:	05db      	lsls	r3, r3, #23
 8003f16:	4013      	ands	r3, r2
 8003f18:	d004      	beq.n	8003f24 <HAL_UART_IRQHandler+0x644>
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	0018      	movs	r0, r3
 8003f1e:	f000 fef3 	bl	8004d08 <HAL_UARTEx_TxFifoEmptyCallback>
 8003f22:	e019      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f24:	23a4      	movs	r3, #164	@ 0xa4
 8003f26:	18fb      	adds	r3, r7, r3
 8003f28:	681a      	ldr	r2, [r3, #0]
 8003f2a:	2380      	movs	r3, #128	@ 0x80
 8003f2c:	045b      	lsls	r3, r3, #17
 8003f2e:	4013      	ands	r3, r2
 8003f30:	d012      	beq.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f32:	23a0      	movs	r3, #160	@ 0xa0
 8003f34:	18fb      	adds	r3, r7, r3
 8003f36:	681b      	ldr	r3, [r3, #0]
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	da0d      	bge.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	0018      	movs	r0, r3
 8003f40:	f000 feda 	bl	8004cf8 <HAL_UARTEx_RxFifoFullCallback>
 8003f44:	e008      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f46:	46c0      	nop			@ (mov r8, r8)
 8003f48:	e006      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f4a:	46c0      	nop			@ (mov r8, r8)
 8003f4c:	e004      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f4e:	46c0      	nop			@ (mov r8, r8)
 8003f50:	e002      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f52:	46c0      	nop			@ (mov r8, r8)
 8003f54:	e000      	b.n	8003f58 <HAL_UART_IRQHandler+0x678>
 8003f56:	46c0      	nop			@ (mov r8, r8)
 8003f58:	46bd      	mov	sp, r7
 8003f5a:	b02a      	add	sp, #168	@ 0xa8
 8003f5c:	bdb0      	pop	{r4, r5, r7, pc}
 8003f5e:	46c0      	nop			@ (mov r8, r8)
 8003f60:	fffffeff 	.word	0xfffffeff
 8003f64:	fffffedf 	.word	0xfffffedf
 8003f68:	effffffe 	.word	0xeffffffe

08003f6c <HAL_UART_TxHalfCpltCallback>:
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b082      	sub	sp, #8
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	6078      	str	r0, [r7, #4]
 8003f74:	46c0      	nop			@ (mov r8, r8)
 8003f76:	46bd      	mov	sp, r7
 8003f78:	b002      	add	sp, #8
 8003f7a:	bd80      	pop	{r7, pc}

08003f7c <HAL_UART_RxCpltCallback>:
 8003f7c:	b580      	push	{r7, lr}
 8003f7e:	b082      	sub	sp, #8
 8003f80:	af00      	add	r7, sp, #0
 8003f82:	6078      	str	r0, [r7, #4]
 8003f84:	46c0      	nop			@ (mov r8, r8)
 8003f86:	46bd      	mov	sp, r7
 8003f88:	b002      	add	sp, #8
 8003f8a:	bd80      	pop	{r7, pc}

08003f8c <HAL_UART_RxHalfCpltCallback>:
 8003f8c:	b580      	push	{r7, lr}
 8003f8e:	b082      	sub	sp, #8
 8003f90:	af00      	add	r7, sp, #0
 8003f92:	6078      	str	r0, [r7, #4]
 8003f94:	46c0      	nop			@ (mov r8, r8)
 8003f96:	46bd      	mov	sp, r7
 8003f98:	b002      	add	sp, #8
 8003f9a:	bd80      	pop	{r7, pc}

08003f9c <UART_SetConfig>:
 8003f9c:	b580      	push	{r7, lr}
 8003f9e:	b088      	sub	sp, #32
 8003fa0:	af00      	add	r7, sp, #0
 8003fa2:	6078      	str	r0, [r7, #4]
 8003fa4:	231e      	movs	r3, #30
 8003fa6:	18fb      	adds	r3, r7, r3
 8003fa8:	2200      	movs	r2, #0
 8003faa:	701a      	strb	r2, [r3, #0]
 8003fac:	687b      	ldr	r3, [r7, #4]
 8003fae:	689a      	ldr	r2, [r3, #8]
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	691b      	ldr	r3, [r3, #16]
 8003fb4:	431a      	orrs	r2, r3
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	695b      	ldr	r3, [r3, #20]
 8003fba:	431a      	orrs	r2, r3
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	69db      	ldr	r3, [r3, #28]
 8003fc0:	4313      	orrs	r3, r2
 8003fc2:	617b      	str	r3, [r7, #20]
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	4aab      	ldr	r2, [pc, #684]	@ (8004278 <UART_SetConfig+0x2dc>)
 8003fcc:	4013      	ands	r3, r2
 8003fce:	0019      	movs	r1, r3
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	697a      	ldr	r2, [r7, #20]
 8003fd6:	430a      	orrs	r2, r1
 8003fd8:	601a      	str	r2, [r3, #0]
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	685b      	ldr	r3, [r3, #4]
 8003fe0:	4aa6      	ldr	r2, [pc, #664]	@ (800427c <UART_SetConfig+0x2e0>)
 8003fe2:	4013      	ands	r3, r2
 8003fe4:	0019      	movs	r1, r3
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	68da      	ldr	r2, [r3, #12]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	681b      	ldr	r3, [r3, #0]
 8003fee:	430a      	orrs	r2, r1
 8003ff0:	605a      	str	r2, [r3, #4]
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	699b      	ldr	r3, [r3, #24]
 8003ff6:	617b      	str	r3, [r7, #20]
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	6a1b      	ldr	r3, [r3, #32]
 8003ffc:	697a      	ldr	r2, [r7, #20]
 8003ffe:	4313      	orrs	r3, r2
 8004000:	617b      	str	r3, [r7, #20]
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	689b      	ldr	r3, [r3, #8]
 8004008:	4a9d      	ldr	r2, [pc, #628]	@ (8004280 <UART_SetConfig+0x2e4>)
 800400a:	4013      	ands	r3, r2
 800400c:	0019      	movs	r1, r3
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	697a      	ldr	r2, [r7, #20]
 8004014:	430a      	orrs	r2, r1
 8004016:	609a      	str	r2, [r3, #8]
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	681b      	ldr	r3, [r3, #0]
 800401c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800401e:	220f      	movs	r2, #15
 8004020:	4393      	bics	r3, r2
 8004022:	0019      	movs	r1, r3
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	430a      	orrs	r2, r1
 800402e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	4a93      	ldr	r2, [pc, #588]	@ (8004284 <UART_SetConfig+0x2e8>)
 8004036:	4293      	cmp	r3, r2
 8004038:	d127      	bne.n	800408a <UART_SetConfig+0xee>
 800403a:	4b93      	ldr	r3, [pc, #588]	@ (8004288 <UART_SetConfig+0x2ec>)
 800403c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800403e:	2203      	movs	r2, #3
 8004040:	4013      	ands	r3, r2
 8004042:	2b03      	cmp	r3, #3
 8004044:	d017      	beq.n	8004076 <UART_SetConfig+0xda>
 8004046:	d81b      	bhi.n	8004080 <UART_SetConfig+0xe4>
 8004048:	2b02      	cmp	r3, #2
 800404a:	d00a      	beq.n	8004062 <UART_SetConfig+0xc6>
 800404c:	d818      	bhi.n	8004080 <UART_SetConfig+0xe4>
 800404e:	2b00      	cmp	r3, #0
 8004050:	d002      	beq.n	8004058 <UART_SetConfig+0xbc>
 8004052:	2b01      	cmp	r3, #1
 8004054:	d00a      	beq.n	800406c <UART_SetConfig+0xd0>
 8004056:	e013      	b.n	8004080 <UART_SetConfig+0xe4>
 8004058:	231f      	movs	r3, #31
 800405a:	18fb      	adds	r3, r7, r3
 800405c:	2200      	movs	r2, #0
 800405e:	701a      	strb	r2, [r3, #0]
 8004060:	e021      	b.n	80040a6 <UART_SetConfig+0x10a>
 8004062:	231f      	movs	r3, #31
 8004064:	18fb      	adds	r3, r7, r3
 8004066:	2202      	movs	r2, #2
 8004068:	701a      	strb	r2, [r3, #0]
 800406a:	e01c      	b.n	80040a6 <UART_SetConfig+0x10a>
 800406c:	231f      	movs	r3, #31
 800406e:	18fb      	adds	r3, r7, r3
 8004070:	2204      	movs	r2, #4
 8004072:	701a      	strb	r2, [r3, #0]
 8004074:	e017      	b.n	80040a6 <UART_SetConfig+0x10a>
 8004076:	231f      	movs	r3, #31
 8004078:	18fb      	adds	r3, r7, r3
 800407a:	2208      	movs	r2, #8
 800407c:	701a      	strb	r2, [r3, #0]
 800407e:	e012      	b.n	80040a6 <UART_SetConfig+0x10a>
 8004080:	231f      	movs	r3, #31
 8004082:	18fb      	adds	r3, r7, r3
 8004084:	2210      	movs	r2, #16
 8004086:	701a      	strb	r2, [r3, #0]
 8004088:	e00d      	b.n	80040a6 <UART_SetConfig+0x10a>
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	4a7f      	ldr	r2, [pc, #508]	@ (800428c <UART_SetConfig+0x2f0>)
 8004090:	4293      	cmp	r3, r2
 8004092:	d104      	bne.n	800409e <UART_SetConfig+0x102>
 8004094:	231f      	movs	r3, #31
 8004096:	18fb      	adds	r3, r7, r3
 8004098:	2200      	movs	r2, #0
 800409a:	701a      	strb	r2, [r3, #0]
 800409c:	e003      	b.n	80040a6 <UART_SetConfig+0x10a>
 800409e:	231f      	movs	r3, #31
 80040a0:	18fb      	adds	r3, r7, r3
 80040a2:	2210      	movs	r2, #16
 80040a4:	701a      	strb	r2, [r3, #0]
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	69da      	ldr	r2, [r3, #28]
 80040aa:	2380      	movs	r3, #128	@ 0x80
 80040ac:	021b      	lsls	r3, r3, #8
 80040ae:	429a      	cmp	r2, r3
 80040b0:	d000      	beq.n	80040b4 <UART_SetConfig+0x118>
 80040b2:	e06f      	b.n	8004194 <UART_SetConfig+0x1f8>
 80040b4:	231f      	movs	r3, #31
 80040b6:	18fb      	adds	r3, r7, r3
 80040b8:	781b      	ldrb	r3, [r3, #0]
 80040ba:	2b08      	cmp	r3, #8
 80040bc:	d01f      	beq.n	80040fe <UART_SetConfig+0x162>
 80040be:	dc22      	bgt.n	8004106 <UART_SetConfig+0x16a>
 80040c0:	2b04      	cmp	r3, #4
 80040c2:	d017      	beq.n	80040f4 <UART_SetConfig+0x158>
 80040c4:	dc1f      	bgt.n	8004106 <UART_SetConfig+0x16a>
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d002      	beq.n	80040d0 <UART_SetConfig+0x134>
 80040ca:	2b02      	cmp	r3, #2
 80040cc:	d005      	beq.n	80040da <UART_SetConfig+0x13e>
 80040ce:	e01a      	b.n	8004106 <UART_SetConfig+0x16a>
 80040d0:	f7ff f860 	bl	8003194 <HAL_RCC_GetPCLK1Freq>
 80040d4:	0003      	movs	r3, r0
 80040d6:	61bb      	str	r3, [r7, #24]
 80040d8:	e01c      	b.n	8004114 <UART_SetConfig+0x178>
 80040da:	4b6b      	ldr	r3, [pc, #428]	@ (8004288 <UART_SetConfig+0x2ec>)
 80040dc:	681b      	ldr	r3, [r3, #0]
 80040de:	095b      	lsrs	r3, r3, #5
 80040e0:	2207      	movs	r2, #7
 80040e2:	4013      	ands	r3, r2
 80040e4:	3301      	adds	r3, #1
 80040e6:	0019      	movs	r1, r3
 80040e8:	4869      	ldr	r0, [pc, #420]	@ (8004290 <UART_SetConfig+0x2f4>)
 80040ea:	f7fc f80d 	bl	8000108 <__udivsi3>
 80040ee:	0003      	movs	r3, r0
 80040f0:	61bb      	str	r3, [r7, #24]
 80040f2:	e00f      	b.n	8004114 <UART_SetConfig+0x178>
 80040f4:	f7fe ffd8 	bl	80030a8 <HAL_RCC_GetSysClockFreq>
 80040f8:	0003      	movs	r3, r0
 80040fa:	61bb      	str	r3, [r7, #24]
 80040fc:	e00a      	b.n	8004114 <UART_SetConfig+0x178>
 80040fe:	2380      	movs	r3, #128	@ 0x80
 8004100:	021b      	lsls	r3, r3, #8
 8004102:	61bb      	str	r3, [r7, #24]
 8004104:	e006      	b.n	8004114 <UART_SetConfig+0x178>
 8004106:	2300      	movs	r3, #0
 8004108:	61bb      	str	r3, [r7, #24]
 800410a:	231e      	movs	r3, #30
 800410c:	18fb      	adds	r3, r7, r3
 800410e:	2201      	movs	r2, #1
 8004110:	701a      	strb	r2, [r3, #0]
 8004112:	46c0      	nop			@ (mov r8, r8)
 8004114:	69bb      	ldr	r3, [r7, #24]
 8004116:	2b00      	cmp	r3, #0
 8004118:	d100      	bne.n	800411c <UART_SetConfig+0x180>
 800411a:	e097      	b.n	800424c <UART_SetConfig+0x2b0>
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004120:	4b5c      	ldr	r3, [pc, #368]	@ (8004294 <UART_SetConfig+0x2f8>)
 8004122:	0052      	lsls	r2, r2, #1
 8004124:	5ad3      	ldrh	r3, [r2, r3]
 8004126:	0019      	movs	r1, r3
 8004128:	69b8      	ldr	r0, [r7, #24]
 800412a:	f7fb ffed 	bl	8000108 <__udivsi3>
 800412e:	0003      	movs	r3, r0
 8004130:	005a      	lsls	r2, r3, #1
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	685b      	ldr	r3, [r3, #4]
 8004136:	085b      	lsrs	r3, r3, #1
 8004138:	18d2      	adds	r2, r2, r3
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	685b      	ldr	r3, [r3, #4]
 800413e:	0019      	movs	r1, r3
 8004140:	0010      	movs	r0, r2
 8004142:	f7fb ffe1 	bl	8000108 <__udivsi3>
 8004146:	0003      	movs	r3, r0
 8004148:	613b      	str	r3, [r7, #16]
 800414a:	693b      	ldr	r3, [r7, #16]
 800414c:	2b0f      	cmp	r3, #15
 800414e:	d91c      	bls.n	800418a <UART_SetConfig+0x1ee>
 8004150:	693a      	ldr	r2, [r7, #16]
 8004152:	2380      	movs	r3, #128	@ 0x80
 8004154:	025b      	lsls	r3, r3, #9
 8004156:	429a      	cmp	r2, r3
 8004158:	d217      	bcs.n	800418a <UART_SetConfig+0x1ee>
 800415a:	693b      	ldr	r3, [r7, #16]
 800415c:	b29a      	uxth	r2, r3
 800415e:	200e      	movs	r0, #14
 8004160:	183b      	adds	r3, r7, r0
 8004162:	210f      	movs	r1, #15
 8004164:	438a      	bics	r2, r1
 8004166:	801a      	strh	r2, [r3, #0]
 8004168:	693b      	ldr	r3, [r7, #16]
 800416a:	085b      	lsrs	r3, r3, #1
 800416c:	b29b      	uxth	r3, r3
 800416e:	2207      	movs	r2, #7
 8004170:	4013      	ands	r3, r2
 8004172:	b299      	uxth	r1, r3
 8004174:	183b      	adds	r3, r7, r0
 8004176:	183a      	adds	r2, r7, r0
 8004178:	8812      	ldrh	r2, [r2, #0]
 800417a:	430a      	orrs	r2, r1
 800417c:	801a      	strh	r2, [r3, #0]
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	183a      	adds	r2, r7, r0
 8004184:	8812      	ldrh	r2, [r2, #0]
 8004186:	60da      	str	r2, [r3, #12]
 8004188:	e060      	b.n	800424c <UART_SetConfig+0x2b0>
 800418a:	231e      	movs	r3, #30
 800418c:	18fb      	adds	r3, r7, r3
 800418e:	2201      	movs	r2, #1
 8004190:	701a      	strb	r2, [r3, #0]
 8004192:	e05b      	b.n	800424c <UART_SetConfig+0x2b0>
 8004194:	231f      	movs	r3, #31
 8004196:	18fb      	adds	r3, r7, r3
 8004198:	781b      	ldrb	r3, [r3, #0]
 800419a:	2b08      	cmp	r3, #8
 800419c:	d01f      	beq.n	80041de <UART_SetConfig+0x242>
 800419e:	dc22      	bgt.n	80041e6 <UART_SetConfig+0x24a>
 80041a0:	2b04      	cmp	r3, #4
 80041a2:	d017      	beq.n	80041d4 <UART_SetConfig+0x238>
 80041a4:	dc1f      	bgt.n	80041e6 <UART_SetConfig+0x24a>
 80041a6:	2b00      	cmp	r3, #0
 80041a8:	d002      	beq.n	80041b0 <UART_SetConfig+0x214>
 80041aa:	2b02      	cmp	r3, #2
 80041ac:	d005      	beq.n	80041ba <UART_SetConfig+0x21e>
 80041ae:	e01a      	b.n	80041e6 <UART_SetConfig+0x24a>
 80041b0:	f7fe fff0 	bl	8003194 <HAL_RCC_GetPCLK1Freq>
 80041b4:	0003      	movs	r3, r0
 80041b6:	61bb      	str	r3, [r7, #24]
 80041b8:	e01c      	b.n	80041f4 <UART_SetConfig+0x258>
 80041ba:	4b33      	ldr	r3, [pc, #204]	@ (8004288 <UART_SetConfig+0x2ec>)
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	095b      	lsrs	r3, r3, #5
 80041c0:	2207      	movs	r2, #7
 80041c2:	4013      	ands	r3, r2
 80041c4:	3301      	adds	r3, #1
 80041c6:	0019      	movs	r1, r3
 80041c8:	4831      	ldr	r0, [pc, #196]	@ (8004290 <UART_SetConfig+0x2f4>)
 80041ca:	f7fb ff9d 	bl	8000108 <__udivsi3>
 80041ce:	0003      	movs	r3, r0
 80041d0:	61bb      	str	r3, [r7, #24]
 80041d2:	e00f      	b.n	80041f4 <UART_SetConfig+0x258>
 80041d4:	f7fe ff68 	bl	80030a8 <HAL_RCC_GetSysClockFreq>
 80041d8:	0003      	movs	r3, r0
 80041da:	61bb      	str	r3, [r7, #24]
 80041dc:	e00a      	b.n	80041f4 <UART_SetConfig+0x258>
 80041de:	2380      	movs	r3, #128	@ 0x80
 80041e0:	021b      	lsls	r3, r3, #8
 80041e2:	61bb      	str	r3, [r7, #24]
 80041e4:	e006      	b.n	80041f4 <UART_SetConfig+0x258>
 80041e6:	2300      	movs	r3, #0
 80041e8:	61bb      	str	r3, [r7, #24]
 80041ea:	231e      	movs	r3, #30
 80041ec:	18fb      	adds	r3, r7, r3
 80041ee:	2201      	movs	r2, #1
 80041f0:	701a      	strb	r2, [r3, #0]
 80041f2:	46c0      	nop			@ (mov r8, r8)
 80041f4:	69bb      	ldr	r3, [r7, #24]
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	d028      	beq.n	800424c <UART_SetConfig+0x2b0>
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80041fe:	4b25      	ldr	r3, [pc, #148]	@ (8004294 <UART_SetConfig+0x2f8>)
 8004200:	0052      	lsls	r2, r2, #1
 8004202:	5ad3      	ldrh	r3, [r2, r3]
 8004204:	0019      	movs	r1, r3
 8004206:	69b8      	ldr	r0, [r7, #24]
 8004208:	f7fb ff7e 	bl	8000108 <__udivsi3>
 800420c:	0003      	movs	r3, r0
 800420e:	001a      	movs	r2, r3
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	685b      	ldr	r3, [r3, #4]
 8004214:	085b      	lsrs	r3, r3, #1
 8004216:	18d2      	adds	r2, r2, r3
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	685b      	ldr	r3, [r3, #4]
 800421c:	0019      	movs	r1, r3
 800421e:	0010      	movs	r0, r2
 8004220:	f7fb ff72 	bl	8000108 <__udivsi3>
 8004224:	0003      	movs	r3, r0
 8004226:	613b      	str	r3, [r7, #16]
 8004228:	693b      	ldr	r3, [r7, #16]
 800422a:	2b0f      	cmp	r3, #15
 800422c:	d90a      	bls.n	8004244 <UART_SetConfig+0x2a8>
 800422e:	693a      	ldr	r2, [r7, #16]
 8004230:	2380      	movs	r3, #128	@ 0x80
 8004232:	025b      	lsls	r3, r3, #9
 8004234:	429a      	cmp	r2, r3
 8004236:	d205      	bcs.n	8004244 <UART_SetConfig+0x2a8>
 8004238:	693b      	ldr	r3, [r7, #16]
 800423a:	b29a      	uxth	r2, r3
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	60da      	str	r2, [r3, #12]
 8004242:	e003      	b.n	800424c <UART_SetConfig+0x2b0>
 8004244:	231e      	movs	r3, #30
 8004246:	18fb      	adds	r3, r7, r3
 8004248:	2201      	movs	r2, #1
 800424a:	701a      	strb	r2, [r3, #0]
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	226a      	movs	r2, #106	@ 0x6a
 8004250:	2101      	movs	r1, #1
 8004252:	5299      	strh	r1, [r3, r2]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	2268      	movs	r2, #104	@ 0x68
 8004258:	2101      	movs	r1, #1
 800425a:	5299      	strh	r1, [r3, r2]
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	2200      	movs	r2, #0
 8004260:	675a      	str	r2, [r3, #116]	@ 0x74
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	2200      	movs	r2, #0
 8004266:	679a      	str	r2, [r3, #120]	@ 0x78
 8004268:	231e      	movs	r3, #30
 800426a:	18fb      	adds	r3, r7, r3
 800426c:	781b      	ldrb	r3, [r3, #0]
 800426e:	0018      	movs	r0, r3
 8004270:	46bd      	mov	sp, r7
 8004272:	b008      	add	sp, #32
 8004274:	bd80      	pop	{r7, pc}
 8004276:	46c0      	nop			@ (mov r8, r8)
 8004278:	cfff69f3 	.word	0xcfff69f3
 800427c:	ffffcfff 	.word	0xffffcfff
 8004280:	11fff4ff 	.word	0x11fff4ff
 8004284:	40013800 	.word	0x40013800
 8004288:	40021000 	.word	0x40021000
 800428c:	40004400 	.word	0x40004400
 8004290:	02dc6c00 	.word	0x02dc6c00
 8004294:	08005328 	.word	0x08005328

08004298 <UART_AdvFeatureConfig>:
 8004298:	b580      	push	{r7, lr}
 800429a:	b082      	sub	sp, #8
 800429c:	af00      	add	r7, sp, #0
 800429e:	6078      	str	r0, [r7, #4]
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80042a4:	2208      	movs	r2, #8
 80042a6:	4013      	ands	r3, r2
 80042a8:	d00b      	beq.n	80042c2 <UART_AdvFeatureConfig+0x2a>
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	685b      	ldr	r3, [r3, #4]
 80042b0:	4a4a      	ldr	r2, [pc, #296]	@ (80043dc <UART_AdvFeatureConfig+0x144>)
 80042b2:	4013      	ands	r3, r2
 80042b4:	0019      	movs	r1, r3
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	430a      	orrs	r2, r1
 80042c0:	605a      	str	r2, [r3, #4]
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80042c6:	2201      	movs	r2, #1
 80042c8:	4013      	ands	r3, r2
 80042ca:	d00b      	beq.n	80042e4 <UART_AdvFeatureConfig+0x4c>
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	685b      	ldr	r3, [r3, #4]
 80042d2:	4a43      	ldr	r2, [pc, #268]	@ (80043e0 <UART_AdvFeatureConfig+0x148>)
 80042d4:	4013      	ands	r3, r2
 80042d6:	0019      	movs	r1, r3
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	430a      	orrs	r2, r1
 80042e2:	605a      	str	r2, [r3, #4]
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80042e8:	2202      	movs	r2, #2
 80042ea:	4013      	ands	r3, r2
 80042ec:	d00b      	beq.n	8004306 <UART_AdvFeatureConfig+0x6e>
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	685b      	ldr	r3, [r3, #4]
 80042f4:	4a3b      	ldr	r2, [pc, #236]	@ (80043e4 <UART_AdvFeatureConfig+0x14c>)
 80042f6:	4013      	ands	r3, r2
 80042f8:	0019      	movs	r1, r3
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	430a      	orrs	r2, r1
 8004304:	605a      	str	r2, [r3, #4]
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800430a:	2204      	movs	r2, #4
 800430c:	4013      	ands	r3, r2
 800430e:	d00b      	beq.n	8004328 <UART_AdvFeatureConfig+0x90>
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	685b      	ldr	r3, [r3, #4]
 8004316:	4a34      	ldr	r2, [pc, #208]	@ (80043e8 <UART_AdvFeatureConfig+0x150>)
 8004318:	4013      	ands	r3, r2
 800431a:	0019      	movs	r1, r3
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	430a      	orrs	r2, r1
 8004326:	605a      	str	r2, [r3, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800432c:	2210      	movs	r2, #16
 800432e:	4013      	ands	r3, r2
 8004330:	d00b      	beq.n	800434a <UART_AdvFeatureConfig+0xb2>
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	689b      	ldr	r3, [r3, #8]
 8004338:	4a2c      	ldr	r2, [pc, #176]	@ (80043ec <UART_AdvFeatureConfig+0x154>)
 800433a:	4013      	ands	r3, r2
 800433c:	0019      	movs	r1, r3
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	681b      	ldr	r3, [r3, #0]
 8004346:	430a      	orrs	r2, r1
 8004348:	609a      	str	r2, [r3, #8]
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800434e:	2220      	movs	r2, #32
 8004350:	4013      	ands	r3, r2
 8004352:	d00b      	beq.n	800436c <UART_AdvFeatureConfig+0xd4>
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	689b      	ldr	r3, [r3, #8]
 800435a:	4a25      	ldr	r2, [pc, #148]	@ (80043f0 <UART_AdvFeatureConfig+0x158>)
 800435c:	4013      	ands	r3, r2
 800435e:	0019      	movs	r1, r3
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	430a      	orrs	r2, r1
 800436a:	609a      	str	r2, [r3, #8]
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004370:	2240      	movs	r2, #64	@ 0x40
 8004372:	4013      	ands	r3, r2
 8004374:	d01d      	beq.n	80043b2 <UART_AdvFeatureConfig+0x11a>
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	685b      	ldr	r3, [r3, #4]
 800437c:	4a1d      	ldr	r2, [pc, #116]	@ (80043f4 <UART_AdvFeatureConfig+0x15c>)
 800437e:	4013      	ands	r3, r2
 8004380:	0019      	movs	r1, r3
 8004382:	687b      	ldr	r3, [r7, #4]
 8004384:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	430a      	orrs	r2, r1
 800438c:	605a      	str	r2, [r3, #4]
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004392:	2380      	movs	r3, #128	@ 0x80
 8004394:	035b      	lsls	r3, r3, #13
 8004396:	429a      	cmp	r2, r3
 8004398:	d10b      	bne.n	80043b2 <UART_AdvFeatureConfig+0x11a>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	685b      	ldr	r3, [r3, #4]
 80043a0:	4a15      	ldr	r2, [pc, #84]	@ (80043f8 <UART_AdvFeatureConfig+0x160>)
 80043a2:	4013      	ands	r3, r2
 80043a4:	0019      	movs	r1, r3
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	430a      	orrs	r2, r1
 80043b0:	605a      	str	r2, [r3, #4]
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043b6:	2280      	movs	r2, #128	@ 0x80
 80043b8:	4013      	ands	r3, r2
 80043ba:	d00b      	beq.n	80043d4 <UART_AdvFeatureConfig+0x13c>
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	685b      	ldr	r3, [r3, #4]
 80043c2:	4a0e      	ldr	r2, [pc, #56]	@ (80043fc <UART_AdvFeatureConfig+0x164>)
 80043c4:	4013      	ands	r3, r2
 80043c6:	0019      	movs	r1, r3
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	430a      	orrs	r2, r1
 80043d2:	605a      	str	r2, [r3, #4]
 80043d4:	46c0      	nop			@ (mov r8, r8)
 80043d6:	46bd      	mov	sp, r7
 80043d8:	b002      	add	sp, #8
 80043da:	bd80      	pop	{r7, pc}
 80043dc:	ffff7fff 	.word	0xffff7fff
 80043e0:	fffdffff 	.word	0xfffdffff
 80043e4:	fffeffff 	.word	0xfffeffff
 80043e8:	fffbffff 	.word	0xfffbffff
 80043ec:	ffffefff 	.word	0xffffefff
 80043f0:	ffffdfff 	.word	0xffffdfff
 80043f4:	ffefffff 	.word	0xffefffff
 80043f8:	ff9fffff 	.word	0xff9fffff
 80043fc:	fff7ffff 	.word	0xfff7ffff

08004400 <UART_CheckIdleState>:
 8004400:	b580      	push	{r7, lr}
 8004402:	b092      	sub	sp, #72	@ 0x48
 8004404:	af02      	add	r7, sp, #8
 8004406:	6078      	str	r0, [r7, #4]
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	2290      	movs	r2, #144	@ 0x90
 800440c:	2100      	movs	r1, #0
 800440e:	5099      	str	r1, [r3, r2]
 8004410:	f7fd fb98 	bl	8001b44 <HAL_GetTick>
 8004414:	0003      	movs	r3, r0
 8004416:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	681b      	ldr	r3, [r3, #0]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	2208      	movs	r2, #8
 8004420:	4013      	ands	r3, r2
 8004422:	2b08      	cmp	r3, #8
 8004424:	d12d      	bne.n	8004482 <UART_CheckIdleState+0x82>
 8004426:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004428:	2280      	movs	r2, #128	@ 0x80
 800442a:	0391      	lsls	r1, r2, #14
 800442c:	6878      	ldr	r0, [r7, #4]
 800442e:	4a47      	ldr	r2, [pc, #284]	@ (800454c <UART_CheckIdleState+0x14c>)
 8004430:	9200      	str	r2, [sp, #0]
 8004432:	2200      	movs	r2, #0
 8004434:	f000 f88e 	bl	8004554 <UART_WaitOnFlagUntilTimeout>
 8004438:	1e03      	subs	r3, r0, #0
 800443a:	d022      	beq.n	8004482 <UART_CheckIdleState+0x82>
 800443c:	f3ef 8310 	mrs	r3, PRIMASK
 8004440:	627b      	str	r3, [r7, #36]	@ 0x24
 8004442:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004444:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004446:	2301      	movs	r3, #1
 8004448:	62bb      	str	r3, [r7, #40]	@ 0x28
 800444a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800444c:	f383 8810 	msr	PRIMASK, r3
 8004450:	46c0      	nop			@ (mov r8, r8)
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	681a      	ldr	r2, [r3, #0]
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	2180      	movs	r1, #128	@ 0x80
 800445e:	438a      	bics	r2, r1
 8004460:	601a      	str	r2, [r3, #0]
 8004462:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004464:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004466:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004468:	f383 8810 	msr	PRIMASK, r3
 800446c:	46c0      	nop			@ (mov r8, r8)
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	2288      	movs	r2, #136	@ 0x88
 8004472:	2120      	movs	r1, #32
 8004474:	5099      	str	r1, [r3, r2]
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	2284      	movs	r2, #132	@ 0x84
 800447a:	2100      	movs	r1, #0
 800447c:	5499      	strb	r1, [r3, r2]
 800447e:	2303      	movs	r3, #3
 8004480:	e060      	b.n	8004544 <UART_CheckIdleState+0x144>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	2204      	movs	r2, #4
 800448a:	4013      	ands	r3, r2
 800448c:	2b04      	cmp	r3, #4
 800448e:	d146      	bne.n	800451e <UART_CheckIdleState+0x11e>
 8004490:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004492:	2280      	movs	r2, #128	@ 0x80
 8004494:	03d1      	lsls	r1, r2, #15
 8004496:	6878      	ldr	r0, [r7, #4]
 8004498:	4a2c      	ldr	r2, [pc, #176]	@ (800454c <UART_CheckIdleState+0x14c>)
 800449a:	9200      	str	r2, [sp, #0]
 800449c:	2200      	movs	r2, #0
 800449e:	f000 f859 	bl	8004554 <UART_WaitOnFlagUntilTimeout>
 80044a2:	1e03      	subs	r3, r0, #0
 80044a4:	d03b      	beq.n	800451e <UART_CheckIdleState+0x11e>
 80044a6:	f3ef 8310 	mrs	r3, PRIMASK
 80044aa:	60fb      	str	r3, [r7, #12]
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	637b      	str	r3, [r7, #52]	@ 0x34
 80044b0:	2301      	movs	r3, #1
 80044b2:	613b      	str	r3, [r7, #16]
 80044b4:	693b      	ldr	r3, [r7, #16]
 80044b6:	f383 8810 	msr	PRIMASK, r3
 80044ba:	46c0      	nop			@ (mov r8, r8)
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	681a      	ldr	r2, [r3, #0]
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	4922      	ldr	r1, [pc, #136]	@ (8004550 <UART_CheckIdleState+0x150>)
 80044c8:	400a      	ands	r2, r1
 80044ca:	601a      	str	r2, [r3, #0]
 80044cc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80044ce:	617b      	str	r3, [r7, #20]
 80044d0:	697b      	ldr	r3, [r7, #20]
 80044d2:	f383 8810 	msr	PRIMASK, r3
 80044d6:	46c0      	nop			@ (mov r8, r8)
 80044d8:	f3ef 8310 	mrs	r3, PRIMASK
 80044dc:	61bb      	str	r3, [r7, #24]
 80044de:	69bb      	ldr	r3, [r7, #24]
 80044e0:	633b      	str	r3, [r7, #48]	@ 0x30
 80044e2:	2301      	movs	r3, #1
 80044e4:	61fb      	str	r3, [r7, #28]
 80044e6:	69fb      	ldr	r3, [r7, #28]
 80044e8:	f383 8810 	msr	PRIMASK, r3
 80044ec:	46c0      	nop			@ (mov r8, r8)
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	689a      	ldr	r2, [r3, #8]
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	2101      	movs	r1, #1
 80044fa:	438a      	bics	r2, r1
 80044fc:	609a      	str	r2, [r3, #8]
 80044fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004500:	623b      	str	r3, [r7, #32]
 8004502:	6a3b      	ldr	r3, [r7, #32]
 8004504:	f383 8810 	msr	PRIMASK, r3
 8004508:	46c0      	nop			@ (mov r8, r8)
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	228c      	movs	r2, #140	@ 0x8c
 800450e:	2120      	movs	r1, #32
 8004510:	5099      	str	r1, [r3, r2]
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	2284      	movs	r2, #132	@ 0x84
 8004516:	2100      	movs	r1, #0
 8004518:	5499      	strb	r1, [r3, r2]
 800451a:	2303      	movs	r3, #3
 800451c:	e012      	b.n	8004544 <UART_CheckIdleState+0x144>
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	2288      	movs	r2, #136	@ 0x88
 8004522:	2120      	movs	r1, #32
 8004524:	5099      	str	r1, [r3, r2]
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	228c      	movs	r2, #140	@ 0x8c
 800452a:	2120      	movs	r1, #32
 800452c:	5099      	str	r1, [r3, r2]
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	2200      	movs	r2, #0
 8004532:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	2200      	movs	r2, #0
 8004538:	671a      	str	r2, [r3, #112]	@ 0x70
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	2284      	movs	r2, #132	@ 0x84
 800453e:	2100      	movs	r1, #0
 8004540:	5499      	strb	r1, [r3, r2]
 8004542:	2300      	movs	r3, #0
 8004544:	0018      	movs	r0, r3
 8004546:	46bd      	mov	sp, r7
 8004548:	b010      	add	sp, #64	@ 0x40
 800454a:	bd80      	pop	{r7, pc}
 800454c:	01ffffff 	.word	0x01ffffff
 8004550:	fffffedf 	.word	0xfffffedf

08004554 <UART_WaitOnFlagUntilTimeout>:
 8004554:	b580      	push	{r7, lr}
 8004556:	b084      	sub	sp, #16
 8004558:	af00      	add	r7, sp, #0
 800455a:	60f8      	str	r0, [r7, #12]
 800455c:	60b9      	str	r1, [r7, #8]
 800455e:	603b      	str	r3, [r7, #0]
 8004560:	1dfb      	adds	r3, r7, #7
 8004562:	701a      	strb	r2, [r3, #0]
 8004564:	e051      	b.n	800460a <UART_WaitOnFlagUntilTimeout+0xb6>
 8004566:	69bb      	ldr	r3, [r7, #24]
 8004568:	3301      	adds	r3, #1
 800456a:	d04e      	beq.n	800460a <UART_WaitOnFlagUntilTimeout+0xb6>
 800456c:	f7fd faea 	bl	8001b44 <HAL_GetTick>
 8004570:	0002      	movs	r2, r0
 8004572:	683b      	ldr	r3, [r7, #0]
 8004574:	1ad3      	subs	r3, r2, r3
 8004576:	69ba      	ldr	r2, [r7, #24]
 8004578:	429a      	cmp	r2, r3
 800457a:	d302      	bcc.n	8004582 <UART_WaitOnFlagUntilTimeout+0x2e>
 800457c:	69bb      	ldr	r3, [r7, #24]
 800457e:	2b00      	cmp	r3, #0
 8004580:	d101      	bne.n	8004586 <UART_WaitOnFlagUntilTimeout+0x32>
 8004582:	2303      	movs	r3, #3
 8004584:	e051      	b.n	800462a <UART_WaitOnFlagUntilTimeout+0xd6>
 8004586:	68fb      	ldr	r3, [r7, #12]
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	2204      	movs	r2, #4
 800458e:	4013      	ands	r3, r2
 8004590:	d03b      	beq.n	800460a <UART_WaitOnFlagUntilTimeout+0xb6>
 8004592:	68bb      	ldr	r3, [r7, #8]
 8004594:	2b80      	cmp	r3, #128	@ 0x80
 8004596:	d038      	beq.n	800460a <UART_WaitOnFlagUntilTimeout+0xb6>
 8004598:	68bb      	ldr	r3, [r7, #8]
 800459a:	2b40      	cmp	r3, #64	@ 0x40
 800459c:	d035      	beq.n	800460a <UART_WaitOnFlagUntilTimeout+0xb6>
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	69db      	ldr	r3, [r3, #28]
 80045a4:	2208      	movs	r2, #8
 80045a6:	4013      	ands	r3, r2
 80045a8:	2b08      	cmp	r3, #8
 80045aa:	d111      	bne.n	80045d0 <UART_WaitOnFlagUntilTimeout+0x7c>
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	2208      	movs	r2, #8
 80045b2:	621a      	str	r2, [r3, #32]
 80045b4:	68fb      	ldr	r3, [r7, #12]
 80045b6:	0018      	movs	r0, r3
 80045b8:	f000 f922 	bl	8004800 <UART_EndRxTransfer>
 80045bc:	68fb      	ldr	r3, [r7, #12]
 80045be:	2290      	movs	r2, #144	@ 0x90
 80045c0:	2108      	movs	r1, #8
 80045c2:	5099      	str	r1, [r3, r2]
 80045c4:	68fb      	ldr	r3, [r7, #12]
 80045c6:	2284      	movs	r2, #132	@ 0x84
 80045c8:	2100      	movs	r1, #0
 80045ca:	5499      	strb	r1, [r3, r2]
 80045cc:	2301      	movs	r3, #1
 80045ce:	e02c      	b.n	800462a <UART_WaitOnFlagUntilTimeout+0xd6>
 80045d0:	68fb      	ldr	r3, [r7, #12]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	69da      	ldr	r2, [r3, #28]
 80045d6:	2380      	movs	r3, #128	@ 0x80
 80045d8:	011b      	lsls	r3, r3, #4
 80045da:	401a      	ands	r2, r3
 80045dc:	2380      	movs	r3, #128	@ 0x80
 80045de:	011b      	lsls	r3, r3, #4
 80045e0:	429a      	cmp	r2, r3
 80045e2:	d112      	bne.n	800460a <UART_WaitOnFlagUntilTimeout+0xb6>
 80045e4:	68fb      	ldr	r3, [r7, #12]
 80045e6:	681b      	ldr	r3, [r3, #0]
 80045e8:	2280      	movs	r2, #128	@ 0x80
 80045ea:	0112      	lsls	r2, r2, #4
 80045ec:	621a      	str	r2, [r3, #32]
 80045ee:	68fb      	ldr	r3, [r7, #12]
 80045f0:	0018      	movs	r0, r3
 80045f2:	f000 f905 	bl	8004800 <UART_EndRxTransfer>
 80045f6:	68fb      	ldr	r3, [r7, #12]
 80045f8:	2290      	movs	r2, #144	@ 0x90
 80045fa:	2120      	movs	r1, #32
 80045fc:	5099      	str	r1, [r3, r2]
 80045fe:	68fb      	ldr	r3, [r7, #12]
 8004600:	2284      	movs	r2, #132	@ 0x84
 8004602:	2100      	movs	r1, #0
 8004604:	5499      	strb	r1, [r3, r2]
 8004606:	2303      	movs	r3, #3
 8004608:	e00f      	b.n	800462a <UART_WaitOnFlagUntilTimeout+0xd6>
 800460a:	68fb      	ldr	r3, [r7, #12]
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	69db      	ldr	r3, [r3, #28]
 8004610:	68ba      	ldr	r2, [r7, #8]
 8004612:	4013      	ands	r3, r2
 8004614:	68ba      	ldr	r2, [r7, #8]
 8004616:	1ad3      	subs	r3, r2, r3
 8004618:	425a      	negs	r2, r3
 800461a:	4153      	adcs	r3, r2
 800461c:	b2db      	uxtb	r3, r3
 800461e:	001a      	movs	r2, r3
 8004620:	1dfb      	adds	r3, r7, #7
 8004622:	781b      	ldrb	r3, [r3, #0]
 8004624:	429a      	cmp	r2, r3
 8004626:	d09e      	beq.n	8004566 <UART_WaitOnFlagUntilTimeout+0x12>
 8004628:	2300      	movs	r3, #0
 800462a:	0018      	movs	r0, r3
 800462c:	46bd      	mov	sp, r7
 800462e:	b004      	add	sp, #16
 8004630:	bd80      	pop	{r7, pc}
	...

08004634 <UART_Start_Receive_DMA>:
 8004634:	b580      	push	{r7, lr}
 8004636:	b090      	sub	sp, #64	@ 0x40
 8004638:	af00      	add	r7, sp, #0
 800463a:	60f8      	str	r0, [r7, #12]
 800463c:	60b9      	str	r1, [r7, #8]
 800463e:	1dbb      	adds	r3, r7, #6
 8004640:	801a      	strh	r2, [r3, #0]
 8004642:	68fb      	ldr	r3, [r7, #12]
 8004644:	68ba      	ldr	r2, [r7, #8]
 8004646:	659a      	str	r2, [r3, #88]	@ 0x58
 8004648:	68fb      	ldr	r3, [r7, #12]
 800464a:	1dba      	adds	r2, r7, #6
 800464c:	215c      	movs	r1, #92	@ 0x5c
 800464e:	8812      	ldrh	r2, [r2, #0]
 8004650:	525a      	strh	r2, [r3, r1]
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	2290      	movs	r2, #144	@ 0x90
 8004656:	2100      	movs	r1, #0
 8004658:	5099      	str	r1, [r3, r2]
 800465a:	68fb      	ldr	r3, [r7, #12]
 800465c:	228c      	movs	r2, #140	@ 0x8c
 800465e:	2122      	movs	r1, #34	@ 0x22
 8004660:	5099      	str	r1, [r3, r2]
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	2280      	movs	r2, #128	@ 0x80
 8004666:	589b      	ldr	r3, [r3, r2]
 8004668:	2b00      	cmp	r3, #0
 800466a:	d02d      	beq.n	80046c8 <UART_Start_Receive_DMA+0x94>
 800466c:	68fb      	ldr	r3, [r7, #12]
 800466e:	2280      	movs	r2, #128	@ 0x80
 8004670:	589b      	ldr	r3, [r3, r2]
 8004672:	4a40      	ldr	r2, [pc, #256]	@ (8004774 <UART_Start_Receive_DMA+0x140>)
 8004674:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	2280      	movs	r2, #128	@ 0x80
 800467a:	589b      	ldr	r3, [r3, r2]
 800467c:	4a3e      	ldr	r2, [pc, #248]	@ (8004778 <UART_Start_Receive_DMA+0x144>)
 800467e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	2280      	movs	r2, #128	@ 0x80
 8004684:	589b      	ldr	r3, [r3, r2]
 8004686:	4a3d      	ldr	r2, [pc, #244]	@ (800477c <UART_Start_Receive_DMA+0x148>)
 8004688:	635a      	str	r2, [r3, #52]	@ 0x34
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	2280      	movs	r2, #128	@ 0x80
 800468e:	589b      	ldr	r3, [r3, r2]
 8004690:	2200      	movs	r2, #0
 8004692:	639a      	str	r2, [r3, #56]	@ 0x38
 8004694:	68fb      	ldr	r3, [r7, #12]
 8004696:	2280      	movs	r2, #128	@ 0x80
 8004698:	5898      	ldr	r0, [r3, r2]
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	3324      	adds	r3, #36	@ 0x24
 80046a0:	0019      	movs	r1, r3
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80046a6:	001a      	movs	r2, r3
 80046a8:	1dbb      	adds	r3, r7, #6
 80046aa:	881b      	ldrh	r3, [r3, #0]
 80046ac:	f7fd fc8a 	bl	8001fc4 <HAL_DMA_Start_IT>
 80046b0:	1e03      	subs	r3, r0, #0
 80046b2:	d009      	beq.n	80046c8 <UART_Start_Receive_DMA+0x94>
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	2290      	movs	r2, #144	@ 0x90
 80046b8:	2110      	movs	r1, #16
 80046ba:	5099      	str	r1, [r3, r2]
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	228c      	movs	r2, #140	@ 0x8c
 80046c0:	2120      	movs	r1, #32
 80046c2:	5099      	str	r1, [r3, r2]
 80046c4:	2301      	movs	r3, #1
 80046c6:	e050      	b.n	800476a <UART_Start_Receive_DMA+0x136>
 80046c8:	68fb      	ldr	r3, [r7, #12]
 80046ca:	691b      	ldr	r3, [r3, #16]
 80046cc:	2b00      	cmp	r3, #0
 80046ce:	d019      	beq.n	8004704 <UART_Start_Receive_DMA+0xd0>
 80046d0:	f3ef 8310 	mrs	r3, PRIMASK
 80046d4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80046d6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80046d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80046da:	2301      	movs	r3, #1
 80046dc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80046de:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80046e0:	f383 8810 	msr	PRIMASK, r3
 80046e4:	46c0      	nop			@ (mov r8, r8)
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	681a      	ldr	r2, [r3, #0]
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	2180      	movs	r1, #128	@ 0x80
 80046f2:	0049      	lsls	r1, r1, #1
 80046f4:	430a      	orrs	r2, r1
 80046f6:	601a      	str	r2, [r3, #0]
 80046f8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80046fa:	633b      	str	r3, [r7, #48]	@ 0x30
 80046fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80046fe:	f383 8810 	msr	PRIMASK, r3
 8004702:	46c0      	nop			@ (mov r8, r8)
 8004704:	f3ef 8310 	mrs	r3, PRIMASK
 8004708:	613b      	str	r3, [r7, #16]
 800470a:	693b      	ldr	r3, [r7, #16]
 800470c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800470e:	2301      	movs	r3, #1
 8004710:	617b      	str	r3, [r7, #20]
 8004712:	697b      	ldr	r3, [r7, #20]
 8004714:	f383 8810 	msr	PRIMASK, r3
 8004718:	46c0      	nop			@ (mov r8, r8)
 800471a:	68fb      	ldr	r3, [r7, #12]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	689a      	ldr	r2, [r3, #8]
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	681b      	ldr	r3, [r3, #0]
 8004724:	2101      	movs	r1, #1
 8004726:	430a      	orrs	r2, r1
 8004728:	609a      	str	r2, [r3, #8]
 800472a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800472c:	61bb      	str	r3, [r7, #24]
 800472e:	69bb      	ldr	r3, [r7, #24]
 8004730:	f383 8810 	msr	PRIMASK, r3
 8004734:	46c0      	nop			@ (mov r8, r8)
 8004736:	f3ef 8310 	mrs	r3, PRIMASK
 800473a:	61fb      	str	r3, [r7, #28]
 800473c:	69fb      	ldr	r3, [r7, #28]
 800473e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004740:	2301      	movs	r3, #1
 8004742:	623b      	str	r3, [r7, #32]
 8004744:	6a3b      	ldr	r3, [r7, #32]
 8004746:	f383 8810 	msr	PRIMASK, r3
 800474a:	46c0      	nop			@ (mov r8, r8)
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	689a      	ldr	r2, [r3, #8]
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	2140      	movs	r1, #64	@ 0x40
 8004758:	430a      	orrs	r2, r1
 800475a:	609a      	str	r2, [r3, #8]
 800475c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800475e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004760:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004762:	f383 8810 	msr	PRIMASK, r3
 8004766:	46c0      	nop			@ (mov r8, r8)
 8004768:	2300      	movs	r3, #0
 800476a:	0018      	movs	r0, r3
 800476c:	46bd      	mov	sp, r7
 800476e:	b010      	add	sp, #64	@ 0x40
 8004770:	bd80      	pop	{r7, pc}
 8004772:	46c0      	nop			@ (mov r8, r8)
 8004774:	08004985 	.word	0x08004985
 8004778:	08004ab5 	.word	0x08004ab5
 800477c:	08004af7 	.word	0x08004af7

08004780 <UART_EndTxTransfer>:
 8004780:	b580      	push	{r7, lr}
 8004782:	b08a      	sub	sp, #40	@ 0x28
 8004784:	af00      	add	r7, sp, #0
 8004786:	6078      	str	r0, [r7, #4]
 8004788:	f3ef 8310 	mrs	r3, PRIMASK
 800478c:	60bb      	str	r3, [r7, #8]
 800478e:	68bb      	ldr	r3, [r7, #8]
 8004790:	627b      	str	r3, [r7, #36]	@ 0x24
 8004792:	2301      	movs	r3, #1
 8004794:	60fb      	str	r3, [r7, #12]
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	f383 8810 	msr	PRIMASK, r3
 800479c:	46c0      	nop			@ (mov r8, r8)
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	681a      	ldr	r2, [r3, #0]
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	21c0      	movs	r1, #192	@ 0xc0
 80047aa:	438a      	bics	r2, r1
 80047ac:	601a      	str	r2, [r3, #0]
 80047ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047b0:	613b      	str	r3, [r7, #16]
 80047b2:	693b      	ldr	r3, [r7, #16]
 80047b4:	f383 8810 	msr	PRIMASK, r3
 80047b8:	46c0      	nop			@ (mov r8, r8)
 80047ba:	f3ef 8310 	mrs	r3, PRIMASK
 80047be:	617b      	str	r3, [r7, #20]
 80047c0:	697b      	ldr	r3, [r7, #20]
 80047c2:	623b      	str	r3, [r7, #32]
 80047c4:	2301      	movs	r3, #1
 80047c6:	61bb      	str	r3, [r7, #24]
 80047c8:	69bb      	ldr	r3, [r7, #24]
 80047ca:	f383 8810 	msr	PRIMASK, r3
 80047ce:	46c0      	nop			@ (mov r8, r8)
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	689a      	ldr	r2, [r3, #8]
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	4908      	ldr	r1, [pc, #32]	@ (80047fc <UART_EndTxTransfer+0x7c>)
 80047dc:	400a      	ands	r2, r1
 80047de:	609a      	str	r2, [r3, #8]
 80047e0:	6a3b      	ldr	r3, [r7, #32]
 80047e2:	61fb      	str	r3, [r7, #28]
 80047e4:	69fb      	ldr	r3, [r7, #28]
 80047e6:	f383 8810 	msr	PRIMASK, r3
 80047ea:	46c0      	nop			@ (mov r8, r8)
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	2288      	movs	r2, #136	@ 0x88
 80047f0:	2120      	movs	r1, #32
 80047f2:	5099      	str	r1, [r3, r2]
 80047f4:	46c0      	nop			@ (mov r8, r8)
 80047f6:	46bd      	mov	sp, r7
 80047f8:	b00a      	add	sp, #40	@ 0x28
 80047fa:	bd80      	pop	{r7, pc}
 80047fc:	ff7fffff 	.word	0xff7fffff

08004800 <UART_EndRxTransfer>:
 8004800:	b580      	push	{r7, lr}
 8004802:	b08e      	sub	sp, #56	@ 0x38
 8004804:	af00      	add	r7, sp, #0
 8004806:	6078      	str	r0, [r7, #4]
 8004808:	f3ef 8310 	mrs	r3, PRIMASK
 800480c:	617b      	str	r3, [r7, #20]
 800480e:	697b      	ldr	r3, [r7, #20]
 8004810:	637b      	str	r3, [r7, #52]	@ 0x34
 8004812:	2301      	movs	r3, #1
 8004814:	61bb      	str	r3, [r7, #24]
 8004816:	69bb      	ldr	r3, [r7, #24]
 8004818:	f383 8810 	msr	PRIMASK, r3
 800481c:	46c0      	nop			@ (mov r8, r8)
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	681a      	ldr	r2, [r3, #0]
 8004824:	687b      	ldr	r3, [r7, #4]
 8004826:	681b      	ldr	r3, [r3, #0]
 8004828:	4926      	ldr	r1, [pc, #152]	@ (80048c4 <UART_EndRxTransfer+0xc4>)
 800482a:	400a      	ands	r2, r1
 800482c:	601a      	str	r2, [r3, #0]
 800482e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004830:	61fb      	str	r3, [r7, #28]
 8004832:	69fb      	ldr	r3, [r7, #28]
 8004834:	f383 8810 	msr	PRIMASK, r3
 8004838:	46c0      	nop			@ (mov r8, r8)
 800483a:	f3ef 8310 	mrs	r3, PRIMASK
 800483e:	623b      	str	r3, [r7, #32]
 8004840:	6a3b      	ldr	r3, [r7, #32]
 8004842:	633b      	str	r3, [r7, #48]	@ 0x30
 8004844:	2301      	movs	r3, #1
 8004846:	627b      	str	r3, [r7, #36]	@ 0x24
 8004848:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800484a:	f383 8810 	msr	PRIMASK, r3
 800484e:	46c0      	nop			@ (mov r8, r8)
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	689a      	ldr	r2, [r3, #8]
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	491b      	ldr	r1, [pc, #108]	@ (80048c8 <UART_EndRxTransfer+0xc8>)
 800485c:	400a      	ands	r2, r1
 800485e:	609a      	str	r2, [r3, #8]
 8004860:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004862:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004864:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004866:	f383 8810 	msr	PRIMASK, r3
 800486a:	46c0      	nop			@ (mov r8, r8)
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004870:	2b01      	cmp	r3, #1
 8004872:	d118      	bne.n	80048a6 <UART_EndRxTransfer+0xa6>
 8004874:	f3ef 8310 	mrs	r3, PRIMASK
 8004878:	60bb      	str	r3, [r7, #8]
 800487a:	68bb      	ldr	r3, [r7, #8]
 800487c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800487e:	2301      	movs	r3, #1
 8004880:	60fb      	str	r3, [r7, #12]
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	f383 8810 	msr	PRIMASK, r3
 8004888:	46c0      	nop			@ (mov r8, r8)
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	681a      	ldr	r2, [r3, #0]
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	2110      	movs	r1, #16
 8004896:	438a      	bics	r2, r1
 8004898:	601a      	str	r2, [r3, #0]
 800489a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800489c:	613b      	str	r3, [r7, #16]
 800489e:	693b      	ldr	r3, [r7, #16]
 80048a0:	f383 8810 	msr	PRIMASK, r3
 80048a4:	46c0      	nop			@ (mov r8, r8)
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	228c      	movs	r2, #140	@ 0x8c
 80048aa:	2120      	movs	r1, #32
 80048ac:	5099      	str	r1, [r3, r2]
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	2200      	movs	r2, #0
 80048b2:	66da      	str	r2, [r3, #108]	@ 0x6c
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	2200      	movs	r2, #0
 80048b8:	675a      	str	r2, [r3, #116]	@ 0x74
 80048ba:	46c0      	nop			@ (mov r8, r8)
 80048bc:	46bd      	mov	sp, r7
 80048be:	b00e      	add	sp, #56	@ 0x38
 80048c0:	bd80      	pop	{r7, pc}
 80048c2:	46c0      	nop			@ (mov r8, r8)
 80048c4:	fffffedf 	.word	0xfffffedf
 80048c8:	effffffe 	.word	0xeffffffe

080048cc <UART_DMATransmitCplt>:
 80048cc:	b580      	push	{r7, lr}
 80048ce:	b08c      	sub	sp, #48	@ 0x30
 80048d0:	af00      	add	r7, sp, #0
 80048d2:	6078      	str	r0, [r7, #4]
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80048d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	681b      	ldr	r3, [r3, #0]
 80048e0:	2220      	movs	r2, #32
 80048e2:	4013      	ands	r3, r2
 80048e4:	d135      	bne.n	8004952 <UART_DMATransmitCplt+0x86>
 80048e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80048e8:	2256      	movs	r2, #86	@ 0x56
 80048ea:	2100      	movs	r1, #0
 80048ec:	5299      	strh	r1, [r3, r2]
 80048ee:	f3ef 8310 	mrs	r3, PRIMASK
 80048f2:	60fb      	str	r3, [r7, #12]
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80048f8:	2301      	movs	r3, #1
 80048fa:	613b      	str	r3, [r7, #16]
 80048fc:	693b      	ldr	r3, [r7, #16]
 80048fe:	f383 8810 	msr	PRIMASK, r3
 8004902:	46c0      	nop			@ (mov r8, r8)
 8004904:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	689a      	ldr	r2, [r3, #8]
 800490a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	2180      	movs	r1, #128	@ 0x80
 8004910:	438a      	bics	r2, r1
 8004912:	609a      	str	r2, [r3, #8]
 8004914:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004916:	617b      	str	r3, [r7, #20]
 8004918:	697b      	ldr	r3, [r7, #20]
 800491a:	f383 8810 	msr	PRIMASK, r3
 800491e:	46c0      	nop			@ (mov r8, r8)
 8004920:	f3ef 8310 	mrs	r3, PRIMASK
 8004924:	61bb      	str	r3, [r7, #24]
 8004926:	69bb      	ldr	r3, [r7, #24]
 8004928:	627b      	str	r3, [r7, #36]	@ 0x24
 800492a:	2301      	movs	r3, #1
 800492c:	61fb      	str	r3, [r7, #28]
 800492e:	69fb      	ldr	r3, [r7, #28]
 8004930:	f383 8810 	msr	PRIMASK, r3
 8004934:	46c0      	nop			@ (mov r8, r8)
 8004936:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	681a      	ldr	r2, [r3, #0]
 800493c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	2140      	movs	r1, #64	@ 0x40
 8004942:	430a      	orrs	r2, r1
 8004944:	601a      	str	r2, [r3, #0]
 8004946:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004948:	623b      	str	r3, [r7, #32]
 800494a:	6a3b      	ldr	r3, [r7, #32]
 800494c:	f383 8810 	msr	PRIMASK, r3
 8004950:	e004      	b.n	800495c <UART_DMATransmitCplt+0x90>
 8004952:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004954:	0018      	movs	r0, r3
 8004956:	f7fc f90f 	bl	8000b78 <HAL_UART_TxCpltCallback>
 800495a:	46c0      	nop			@ (mov r8, r8)
 800495c:	46c0      	nop			@ (mov r8, r8)
 800495e:	46bd      	mov	sp, r7
 8004960:	b00c      	add	sp, #48	@ 0x30
 8004962:	bd80      	pop	{r7, pc}

08004964 <UART_DMATxHalfCplt>:
 8004964:	b580      	push	{r7, lr}
 8004966:	b084      	sub	sp, #16
 8004968:	af00      	add	r7, sp, #0
 800496a:	6078      	str	r0, [r7, #4]
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004970:	60fb      	str	r3, [r7, #12]
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	0018      	movs	r0, r3
 8004976:	f7ff faf9 	bl	8003f6c <HAL_UART_TxHalfCpltCallback>
 800497a:	46c0      	nop			@ (mov r8, r8)
 800497c:	46bd      	mov	sp, r7
 800497e:	b004      	add	sp, #16
 8004980:	bd80      	pop	{r7, pc}
	...

08004984 <UART_DMAReceiveCplt>:
 8004984:	b580      	push	{r7, lr}
 8004986:	b094      	sub	sp, #80	@ 0x50
 8004988:	af00      	add	r7, sp, #0
 800498a:	6078      	str	r0, [r7, #4]
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004990:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	2220      	movs	r2, #32
 800499a:	4013      	ands	r3, r2
 800499c:	d16f      	bne.n	8004a7e <UART_DMAReceiveCplt+0xfa>
 800499e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80049a0:	225e      	movs	r2, #94	@ 0x5e
 80049a2:	2100      	movs	r1, #0
 80049a4:	5299      	strh	r1, [r3, r2]
 80049a6:	f3ef 8310 	mrs	r3, PRIMASK
 80049aa:	61bb      	str	r3, [r7, #24]
 80049ac:	69bb      	ldr	r3, [r7, #24]
 80049ae:	64bb      	str	r3, [r7, #72]	@ 0x48
 80049b0:	2301      	movs	r3, #1
 80049b2:	61fb      	str	r3, [r7, #28]
 80049b4:	69fb      	ldr	r3, [r7, #28]
 80049b6:	f383 8810 	msr	PRIMASK, r3
 80049ba:	46c0      	nop			@ (mov r8, r8)
 80049bc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	681a      	ldr	r2, [r3, #0]
 80049c2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	493a      	ldr	r1, [pc, #232]	@ (8004ab0 <UART_DMAReceiveCplt+0x12c>)
 80049c8:	400a      	ands	r2, r1
 80049ca:	601a      	str	r2, [r3, #0]
 80049cc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80049ce:	623b      	str	r3, [r7, #32]
 80049d0:	6a3b      	ldr	r3, [r7, #32]
 80049d2:	f383 8810 	msr	PRIMASK, r3
 80049d6:	46c0      	nop			@ (mov r8, r8)
 80049d8:	f3ef 8310 	mrs	r3, PRIMASK
 80049dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80049de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049e0:	647b      	str	r3, [r7, #68]	@ 0x44
 80049e2:	2301      	movs	r3, #1
 80049e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80049e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049e8:	f383 8810 	msr	PRIMASK, r3
 80049ec:	46c0      	nop			@ (mov r8, r8)
 80049ee:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	689a      	ldr	r2, [r3, #8]
 80049f4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	2101      	movs	r1, #1
 80049fa:	438a      	bics	r2, r1
 80049fc:	609a      	str	r2, [r3, #8]
 80049fe:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004a00:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004a02:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a04:	f383 8810 	msr	PRIMASK, r3
 8004a08:	46c0      	nop			@ (mov r8, r8)
 8004a0a:	f3ef 8310 	mrs	r3, PRIMASK
 8004a0e:	633b      	str	r3, [r7, #48]	@ 0x30
 8004a10:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004a12:	643b      	str	r3, [r7, #64]	@ 0x40
 8004a14:	2301      	movs	r3, #1
 8004a16:	637b      	str	r3, [r7, #52]	@ 0x34
 8004a18:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004a1a:	f383 8810 	msr	PRIMASK, r3
 8004a1e:	46c0      	nop			@ (mov r8, r8)
 8004a20:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	689a      	ldr	r2, [r3, #8]
 8004a26:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	2140      	movs	r1, #64	@ 0x40
 8004a2c:	438a      	bics	r2, r1
 8004a2e:	609a      	str	r2, [r3, #8]
 8004a30:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004a32:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004a34:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004a36:	f383 8810 	msr	PRIMASK, r3
 8004a3a:	46c0      	nop			@ (mov r8, r8)
 8004a3c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a3e:	228c      	movs	r2, #140	@ 0x8c
 8004a40:	2120      	movs	r1, #32
 8004a42:	5099      	str	r1, [r3, r2]
 8004a44:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a46:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004a48:	2b01      	cmp	r3, #1
 8004a4a:	d118      	bne.n	8004a7e <UART_DMAReceiveCplt+0xfa>
 8004a4c:	f3ef 8310 	mrs	r3, PRIMASK
 8004a50:	60fb      	str	r3, [r7, #12]
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004a56:	2301      	movs	r3, #1
 8004a58:	613b      	str	r3, [r7, #16]
 8004a5a:	693b      	ldr	r3, [r7, #16]
 8004a5c:	f383 8810 	msr	PRIMASK, r3
 8004a60:	46c0      	nop			@ (mov r8, r8)
 8004a62:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	681a      	ldr	r2, [r3, #0]
 8004a68:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	2110      	movs	r1, #16
 8004a6e:	438a      	bics	r2, r1
 8004a70:	601a      	str	r2, [r3, #0]
 8004a72:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004a74:	617b      	str	r3, [r7, #20]
 8004a76:	697b      	ldr	r3, [r7, #20]
 8004a78:	f383 8810 	msr	PRIMASK, r3
 8004a7c:	46c0      	nop			@ (mov r8, r8)
 8004a7e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a80:	2200      	movs	r2, #0
 8004a82:	671a      	str	r2, [r3, #112]	@ 0x70
 8004a84:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a86:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004a88:	2b01      	cmp	r3, #1
 8004a8a:	d108      	bne.n	8004a9e <UART_DMAReceiveCplt+0x11a>
 8004a8c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a8e:	225c      	movs	r2, #92	@ 0x5c
 8004a90:	5a9a      	ldrh	r2, [r3, r2]
 8004a92:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a94:	0011      	movs	r1, r2
 8004a96:	0018      	movs	r0, r3
 8004a98:	f7fc f812 	bl	8000ac0 <HAL_UARTEx_RxEventCallback>
 8004a9c:	e003      	b.n	8004aa6 <UART_DMAReceiveCplt+0x122>
 8004a9e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004aa0:	0018      	movs	r0, r3
 8004aa2:	f7ff fa6b 	bl	8003f7c <HAL_UART_RxCpltCallback>
 8004aa6:	46c0      	nop			@ (mov r8, r8)
 8004aa8:	46bd      	mov	sp, r7
 8004aaa:	b014      	add	sp, #80	@ 0x50
 8004aac:	bd80      	pop	{r7, pc}
 8004aae:	46c0      	nop			@ (mov r8, r8)
 8004ab0:	fffffeff 	.word	0xfffffeff

08004ab4 <UART_DMARxHalfCplt>:
 8004ab4:	b580      	push	{r7, lr}
 8004ab6:	b084      	sub	sp, #16
 8004ab8:	af00      	add	r7, sp, #0
 8004aba:	6078      	str	r0, [r7, #4]
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ac0:	60fb      	str	r3, [r7, #12]
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	2201      	movs	r2, #1
 8004ac6:	671a      	str	r2, [r3, #112]	@ 0x70
 8004ac8:	68fb      	ldr	r3, [r7, #12]
 8004aca:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004acc:	2b01      	cmp	r3, #1
 8004ace:	d10a      	bne.n	8004ae6 <UART_DMARxHalfCplt+0x32>
 8004ad0:	68fb      	ldr	r3, [r7, #12]
 8004ad2:	225c      	movs	r2, #92	@ 0x5c
 8004ad4:	5a9b      	ldrh	r3, [r3, r2]
 8004ad6:	085b      	lsrs	r3, r3, #1
 8004ad8:	b29a      	uxth	r2, r3
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	0011      	movs	r1, r2
 8004ade:	0018      	movs	r0, r3
 8004ae0:	f7fb ffee 	bl	8000ac0 <HAL_UARTEx_RxEventCallback>
 8004ae4:	e003      	b.n	8004aee <UART_DMARxHalfCplt+0x3a>
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	0018      	movs	r0, r3
 8004aea:	f7ff fa4f 	bl	8003f8c <HAL_UART_RxHalfCpltCallback>
 8004aee:	46c0      	nop			@ (mov r8, r8)
 8004af0:	46bd      	mov	sp, r7
 8004af2:	b004      	add	sp, #16
 8004af4:	bd80      	pop	{r7, pc}

08004af6 <UART_DMAError>:
 8004af6:	b580      	push	{r7, lr}
 8004af8:	b086      	sub	sp, #24
 8004afa:	af00      	add	r7, sp, #0
 8004afc:	6078      	str	r0, [r7, #4]
 8004afe:	687b      	ldr	r3, [r7, #4]
 8004b00:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b02:	617b      	str	r3, [r7, #20]
 8004b04:	697b      	ldr	r3, [r7, #20]
 8004b06:	2288      	movs	r2, #136	@ 0x88
 8004b08:	589b      	ldr	r3, [r3, r2]
 8004b0a:	613b      	str	r3, [r7, #16]
 8004b0c:	697b      	ldr	r3, [r7, #20]
 8004b0e:	228c      	movs	r2, #140	@ 0x8c
 8004b10:	589b      	ldr	r3, [r3, r2]
 8004b12:	60fb      	str	r3, [r7, #12]
 8004b14:	697b      	ldr	r3, [r7, #20]
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	689b      	ldr	r3, [r3, #8]
 8004b1a:	2280      	movs	r2, #128	@ 0x80
 8004b1c:	4013      	ands	r3, r2
 8004b1e:	2b80      	cmp	r3, #128	@ 0x80
 8004b20:	d10a      	bne.n	8004b38 <UART_DMAError+0x42>
 8004b22:	693b      	ldr	r3, [r7, #16]
 8004b24:	2b21      	cmp	r3, #33	@ 0x21
 8004b26:	d107      	bne.n	8004b38 <UART_DMAError+0x42>
 8004b28:	697b      	ldr	r3, [r7, #20]
 8004b2a:	2256      	movs	r2, #86	@ 0x56
 8004b2c:	2100      	movs	r1, #0
 8004b2e:	5299      	strh	r1, [r3, r2]
 8004b30:	697b      	ldr	r3, [r7, #20]
 8004b32:	0018      	movs	r0, r3
 8004b34:	f7ff fe24 	bl	8004780 <UART_EndTxTransfer>
 8004b38:	697b      	ldr	r3, [r7, #20]
 8004b3a:	681b      	ldr	r3, [r3, #0]
 8004b3c:	689b      	ldr	r3, [r3, #8]
 8004b3e:	2240      	movs	r2, #64	@ 0x40
 8004b40:	4013      	ands	r3, r2
 8004b42:	2b40      	cmp	r3, #64	@ 0x40
 8004b44:	d10a      	bne.n	8004b5c <UART_DMAError+0x66>
 8004b46:	68fb      	ldr	r3, [r7, #12]
 8004b48:	2b22      	cmp	r3, #34	@ 0x22
 8004b4a:	d107      	bne.n	8004b5c <UART_DMAError+0x66>
 8004b4c:	697b      	ldr	r3, [r7, #20]
 8004b4e:	225e      	movs	r2, #94	@ 0x5e
 8004b50:	2100      	movs	r1, #0
 8004b52:	5299      	strh	r1, [r3, r2]
 8004b54:	697b      	ldr	r3, [r7, #20]
 8004b56:	0018      	movs	r0, r3
 8004b58:	f7ff fe52 	bl	8004800 <UART_EndRxTransfer>
 8004b5c:	697b      	ldr	r3, [r7, #20]
 8004b5e:	2290      	movs	r2, #144	@ 0x90
 8004b60:	589b      	ldr	r3, [r3, r2]
 8004b62:	2210      	movs	r2, #16
 8004b64:	431a      	orrs	r2, r3
 8004b66:	697b      	ldr	r3, [r7, #20]
 8004b68:	2190      	movs	r1, #144	@ 0x90
 8004b6a:	505a      	str	r2, [r3, r1]
 8004b6c:	697b      	ldr	r3, [r7, #20]
 8004b6e:	0018      	movs	r0, r3
 8004b70:	f7fc f810 	bl	8000b94 <HAL_UART_ErrorCallback>
 8004b74:	46c0      	nop			@ (mov r8, r8)
 8004b76:	46bd      	mov	sp, r7
 8004b78:	b006      	add	sp, #24
 8004b7a:	bd80      	pop	{r7, pc}

08004b7c <UART_DMAAbortOnError>:
 8004b7c:	b580      	push	{r7, lr}
 8004b7e:	b084      	sub	sp, #16
 8004b80:	af00      	add	r7, sp, #0
 8004b82:	6078      	str	r0, [r7, #4]
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b88:	60fb      	str	r3, [r7, #12]
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	225e      	movs	r2, #94	@ 0x5e
 8004b8e:	2100      	movs	r1, #0
 8004b90:	5299      	strh	r1, [r3, r2]
 8004b92:	68fb      	ldr	r3, [r7, #12]
 8004b94:	2256      	movs	r2, #86	@ 0x56
 8004b96:	2100      	movs	r1, #0
 8004b98:	5299      	strh	r1, [r3, r2]
 8004b9a:	68fb      	ldr	r3, [r7, #12]
 8004b9c:	0018      	movs	r0, r3
 8004b9e:	f7fb fff9 	bl	8000b94 <HAL_UART_ErrorCallback>
 8004ba2:	46c0      	nop			@ (mov r8, r8)
 8004ba4:	46bd      	mov	sp, r7
 8004ba6:	b004      	add	sp, #16
 8004ba8:	bd80      	pop	{r7, pc}

08004baa <UART_EndTransmit_IT>:
 8004baa:	b580      	push	{r7, lr}
 8004bac:	b086      	sub	sp, #24
 8004bae:	af00      	add	r7, sp, #0
 8004bb0:	6078      	str	r0, [r7, #4]
 8004bb2:	f3ef 8310 	mrs	r3, PRIMASK
 8004bb6:	60bb      	str	r3, [r7, #8]
 8004bb8:	68bb      	ldr	r3, [r7, #8]
 8004bba:	617b      	str	r3, [r7, #20]
 8004bbc:	2301      	movs	r3, #1
 8004bbe:	60fb      	str	r3, [r7, #12]
 8004bc0:	68fb      	ldr	r3, [r7, #12]
 8004bc2:	f383 8810 	msr	PRIMASK, r3
 8004bc6:	46c0      	nop			@ (mov r8, r8)
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	681b      	ldr	r3, [r3, #0]
 8004bcc:	681a      	ldr	r2, [r3, #0]
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	2140      	movs	r1, #64	@ 0x40
 8004bd4:	438a      	bics	r2, r1
 8004bd6:	601a      	str	r2, [r3, #0]
 8004bd8:	697b      	ldr	r3, [r7, #20]
 8004bda:	613b      	str	r3, [r7, #16]
 8004bdc:	693b      	ldr	r3, [r7, #16]
 8004bde:	f383 8810 	msr	PRIMASK, r3
 8004be2:	46c0      	nop			@ (mov r8, r8)
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	2288      	movs	r2, #136	@ 0x88
 8004be8:	2120      	movs	r1, #32
 8004bea:	5099      	str	r1, [r3, r2]
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	2200      	movs	r2, #0
 8004bf0:	679a      	str	r2, [r3, #120]	@ 0x78
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	0018      	movs	r0, r3
 8004bf6:	f7fb ffbf 	bl	8000b78 <HAL_UART_TxCpltCallback>
 8004bfa:	46c0      	nop			@ (mov r8, r8)
 8004bfc:	46bd      	mov	sp, r7
 8004bfe:	b006      	add	sp, #24
 8004c00:	bd80      	pop	{r7, pc}
	...

08004c04 <HAL_RS485Ex_Init>:
 8004c04:	b580      	push	{r7, lr}
 8004c06:	b086      	sub	sp, #24
 8004c08:	af00      	add	r7, sp, #0
 8004c0a:	60f8      	str	r0, [r7, #12]
 8004c0c:	60b9      	str	r1, [r7, #8]
 8004c0e:	607a      	str	r2, [r7, #4]
 8004c10:	603b      	str	r3, [r7, #0]
 8004c12:	68fb      	ldr	r3, [r7, #12]
 8004c14:	2b00      	cmp	r3, #0
 8004c16:	d101      	bne.n	8004c1c <HAL_RS485Ex_Init+0x18>
 8004c18:	2301      	movs	r3, #1
 8004c1a:	e05d      	b.n	8004cd8 <HAL_RS485Ex_Init+0xd4>
 8004c1c:	68fb      	ldr	r3, [r7, #12]
 8004c1e:	2288      	movs	r2, #136	@ 0x88
 8004c20:	589b      	ldr	r3, [r3, r2]
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d107      	bne.n	8004c36 <HAL_RS485Ex_Init+0x32>
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	2284      	movs	r2, #132	@ 0x84
 8004c2a:	2100      	movs	r1, #0
 8004c2c:	5499      	strb	r1, [r3, r2]
 8004c2e:	68fb      	ldr	r3, [r7, #12]
 8004c30:	0018      	movs	r0, r3
 8004c32:	f7fc fd51 	bl	80016d8 <HAL_UART_MspInit>
 8004c36:	68fb      	ldr	r3, [r7, #12]
 8004c38:	2288      	movs	r2, #136	@ 0x88
 8004c3a:	2124      	movs	r1, #36	@ 0x24
 8004c3c:	5099      	str	r1, [r3, r2]
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	681a      	ldr	r2, [r3, #0]
 8004c44:	68fb      	ldr	r3, [r7, #12]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	2101      	movs	r1, #1
 8004c4a:	438a      	bics	r2, r1
 8004c4c:	601a      	str	r2, [r3, #0]
 8004c4e:	68fb      	ldr	r3, [r7, #12]
 8004c50:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c52:	2b00      	cmp	r3, #0
 8004c54:	d003      	beq.n	8004c5e <HAL_RS485Ex_Init+0x5a>
 8004c56:	68fb      	ldr	r3, [r7, #12]
 8004c58:	0018      	movs	r0, r3
 8004c5a:	f7ff fb1d 	bl	8004298 <UART_AdvFeatureConfig>
 8004c5e:	68fb      	ldr	r3, [r7, #12]
 8004c60:	0018      	movs	r0, r3
 8004c62:	f7ff f99b 	bl	8003f9c <UART_SetConfig>
 8004c66:	0003      	movs	r3, r0
 8004c68:	2b01      	cmp	r3, #1
 8004c6a:	d101      	bne.n	8004c70 <HAL_RS485Ex_Init+0x6c>
 8004c6c:	2301      	movs	r3, #1
 8004c6e:	e033      	b.n	8004cd8 <HAL_RS485Ex_Init+0xd4>
 8004c70:	68fb      	ldr	r3, [r7, #12]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	689a      	ldr	r2, [r3, #8]
 8004c76:	68fb      	ldr	r3, [r7, #12]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	2180      	movs	r1, #128	@ 0x80
 8004c7c:	01c9      	lsls	r1, r1, #7
 8004c7e:	430a      	orrs	r2, r1
 8004c80:	609a      	str	r2, [r3, #8]
 8004c82:	68fb      	ldr	r3, [r7, #12]
 8004c84:	681b      	ldr	r3, [r3, #0]
 8004c86:	689b      	ldr	r3, [r3, #8]
 8004c88:	4a15      	ldr	r2, [pc, #84]	@ (8004ce0 <HAL_RS485Ex_Init+0xdc>)
 8004c8a:	4013      	ands	r3, r2
 8004c8c:	0019      	movs	r1, r3
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	68ba      	ldr	r2, [r7, #8]
 8004c94:	430a      	orrs	r2, r1
 8004c96:	609a      	str	r2, [r3, #8]
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	055b      	lsls	r3, r3, #21
 8004c9c:	617b      	str	r3, [r7, #20]
 8004c9e:	683b      	ldr	r3, [r7, #0]
 8004ca0:	041b      	lsls	r3, r3, #16
 8004ca2:	697a      	ldr	r2, [r7, #20]
 8004ca4:	4313      	orrs	r3, r2
 8004ca6:	617b      	str	r3, [r7, #20]
 8004ca8:	68fb      	ldr	r3, [r7, #12]
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	4a0d      	ldr	r2, [pc, #52]	@ (8004ce4 <HAL_RS485Ex_Init+0xe0>)
 8004cb0:	4013      	ands	r3, r2
 8004cb2:	0019      	movs	r1, r3
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	697a      	ldr	r2, [r7, #20]
 8004cba:	430a      	orrs	r2, r1
 8004cbc:	601a      	str	r2, [r3, #0]
 8004cbe:	68fb      	ldr	r3, [r7, #12]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	681a      	ldr	r2, [r3, #0]
 8004cc4:	68fb      	ldr	r3, [r7, #12]
 8004cc6:	681b      	ldr	r3, [r3, #0]
 8004cc8:	2101      	movs	r1, #1
 8004cca:	430a      	orrs	r2, r1
 8004ccc:	601a      	str	r2, [r3, #0]
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	0018      	movs	r0, r3
 8004cd2:	f7ff fb95 	bl	8004400 <UART_CheckIdleState>
 8004cd6:	0003      	movs	r3, r0
 8004cd8:	0018      	movs	r0, r3
 8004cda:	46bd      	mov	sp, r7
 8004cdc:	b006      	add	sp, #24
 8004cde:	bd80      	pop	{r7, pc}
 8004ce0:	ffff7fff 	.word	0xffff7fff
 8004ce4:	fc00ffff 	.word	0xfc00ffff

08004ce8 <HAL_UARTEx_WakeupCallback>:
 8004ce8:	b580      	push	{r7, lr}
 8004cea:	b082      	sub	sp, #8
 8004cec:	af00      	add	r7, sp, #0
 8004cee:	6078      	str	r0, [r7, #4]
 8004cf0:	46c0      	nop			@ (mov r8, r8)
 8004cf2:	46bd      	mov	sp, r7
 8004cf4:	b002      	add	sp, #8
 8004cf6:	bd80      	pop	{r7, pc}

08004cf8 <HAL_UARTEx_RxFifoFullCallback>:
 8004cf8:	b580      	push	{r7, lr}
 8004cfa:	b082      	sub	sp, #8
 8004cfc:	af00      	add	r7, sp, #0
 8004cfe:	6078      	str	r0, [r7, #4]
 8004d00:	46c0      	nop			@ (mov r8, r8)
 8004d02:	46bd      	mov	sp, r7
 8004d04:	b002      	add	sp, #8
 8004d06:	bd80      	pop	{r7, pc}

08004d08 <HAL_UARTEx_TxFifoEmptyCallback>:
 8004d08:	b580      	push	{r7, lr}
 8004d0a:	b082      	sub	sp, #8
 8004d0c:	af00      	add	r7, sp, #0
 8004d0e:	6078      	str	r0, [r7, #4]
 8004d10:	46c0      	nop			@ (mov r8, r8)
 8004d12:	46bd      	mov	sp, r7
 8004d14:	b002      	add	sp, #8
 8004d16:	bd80      	pop	{r7, pc}

08004d18 <HAL_UARTEx_DisableFifoMode>:
 8004d18:	b580      	push	{r7, lr}
 8004d1a:	b084      	sub	sp, #16
 8004d1c:	af00      	add	r7, sp, #0
 8004d1e:	6078      	str	r0, [r7, #4]
 8004d20:	687b      	ldr	r3, [r7, #4]
 8004d22:	2284      	movs	r2, #132	@ 0x84
 8004d24:	5c9b      	ldrb	r3, [r3, r2]
 8004d26:	2b01      	cmp	r3, #1
 8004d28:	d101      	bne.n	8004d2e <HAL_UARTEx_DisableFifoMode+0x16>
 8004d2a:	2302      	movs	r3, #2
 8004d2c:	e027      	b.n	8004d7e <HAL_UARTEx_DisableFifoMode+0x66>
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	2284      	movs	r2, #132	@ 0x84
 8004d32:	2101      	movs	r1, #1
 8004d34:	5499      	strb	r1, [r3, r2]
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	2288      	movs	r2, #136	@ 0x88
 8004d3a:	2124      	movs	r1, #36	@ 0x24
 8004d3c:	5099      	str	r1, [r3, r2]
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	60fb      	str	r3, [r7, #12]
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	681a      	ldr	r2, [r3, #0]
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	2101      	movs	r1, #1
 8004d52:	438a      	bics	r2, r1
 8004d54:	601a      	str	r2, [r3, #0]
 8004d56:	68fb      	ldr	r3, [r7, #12]
 8004d58:	4a0b      	ldr	r2, [pc, #44]	@ (8004d88 <HAL_UARTEx_DisableFifoMode+0x70>)
 8004d5a:	4013      	ands	r3, r2
 8004d5c:	60fb      	str	r3, [r7, #12]
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	2200      	movs	r2, #0
 8004d62:	665a      	str	r2, [r3, #100]	@ 0x64
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	681b      	ldr	r3, [r3, #0]
 8004d68:	68fa      	ldr	r2, [r7, #12]
 8004d6a:	601a      	str	r2, [r3, #0]
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	2288      	movs	r2, #136	@ 0x88
 8004d70:	2120      	movs	r1, #32
 8004d72:	5099      	str	r1, [r3, r2]
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	2284      	movs	r2, #132	@ 0x84
 8004d78:	2100      	movs	r1, #0
 8004d7a:	5499      	strb	r1, [r3, r2]
 8004d7c:	2300      	movs	r3, #0
 8004d7e:	0018      	movs	r0, r3
 8004d80:	46bd      	mov	sp, r7
 8004d82:	b004      	add	sp, #16
 8004d84:	bd80      	pop	{r7, pc}
 8004d86:	46c0      	nop			@ (mov r8, r8)
 8004d88:	dfffffff 	.word	0xdfffffff

08004d8c <HAL_UARTEx_SetTxFifoThreshold>:
 8004d8c:	b580      	push	{r7, lr}
 8004d8e:	b084      	sub	sp, #16
 8004d90:	af00      	add	r7, sp, #0
 8004d92:	6078      	str	r0, [r7, #4]
 8004d94:	6039      	str	r1, [r7, #0]
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	2284      	movs	r2, #132	@ 0x84
 8004d9a:	5c9b      	ldrb	r3, [r3, r2]
 8004d9c:	2b01      	cmp	r3, #1
 8004d9e:	d101      	bne.n	8004da4 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 8004da0:	2302      	movs	r3, #2
 8004da2:	e02e      	b.n	8004e02 <HAL_UARTEx_SetTxFifoThreshold+0x76>
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	2284      	movs	r2, #132	@ 0x84
 8004da8:	2101      	movs	r1, #1
 8004daa:	5499      	strb	r1, [r3, r2]
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	2288      	movs	r2, #136	@ 0x88
 8004db0:	2124      	movs	r1, #36	@ 0x24
 8004db2:	5099      	str	r1, [r3, r2]
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	60fb      	str	r3, [r7, #12]
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	681a      	ldr	r2, [r3, #0]
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	2101      	movs	r1, #1
 8004dc8:	438a      	bics	r2, r1
 8004dca:	601a      	str	r2, [r3, #0]
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	681b      	ldr	r3, [r3, #0]
 8004dd0:	689b      	ldr	r3, [r3, #8]
 8004dd2:	00db      	lsls	r3, r3, #3
 8004dd4:	08d9      	lsrs	r1, r3, #3
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	683a      	ldr	r2, [r7, #0]
 8004ddc:	430a      	orrs	r2, r1
 8004dde:	609a      	str	r2, [r3, #8]
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	0018      	movs	r0, r3
 8004de4:	f000 f8bc 	bl	8004f60 <UARTEx_SetNbDataToProcess>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	68fa      	ldr	r2, [r7, #12]
 8004dee:	601a      	str	r2, [r3, #0]
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	2288      	movs	r2, #136	@ 0x88
 8004df4:	2120      	movs	r1, #32
 8004df6:	5099      	str	r1, [r3, r2]
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	2284      	movs	r2, #132	@ 0x84
 8004dfc:	2100      	movs	r1, #0
 8004dfe:	5499      	strb	r1, [r3, r2]
 8004e00:	2300      	movs	r3, #0
 8004e02:	0018      	movs	r0, r3
 8004e04:	46bd      	mov	sp, r7
 8004e06:	b004      	add	sp, #16
 8004e08:	bd80      	pop	{r7, pc}
	...

08004e0c <HAL_UARTEx_SetRxFifoThreshold>:
 8004e0c:	b580      	push	{r7, lr}
 8004e0e:	b084      	sub	sp, #16
 8004e10:	af00      	add	r7, sp, #0
 8004e12:	6078      	str	r0, [r7, #4]
 8004e14:	6039      	str	r1, [r7, #0]
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	2284      	movs	r2, #132	@ 0x84
 8004e1a:	5c9b      	ldrb	r3, [r3, r2]
 8004e1c:	2b01      	cmp	r3, #1
 8004e1e:	d101      	bne.n	8004e24 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 8004e20:	2302      	movs	r3, #2
 8004e22:	e02f      	b.n	8004e84 <HAL_UARTEx_SetRxFifoThreshold+0x78>
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	2284      	movs	r2, #132	@ 0x84
 8004e28:	2101      	movs	r1, #1
 8004e2a:	5499      	strb	r1, [r3, r2]
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	2288      	movs	r2, #136	@ 0x88
 8004e30:	2124      	movs	r1, #36	@ 0x24
 8004e32:	5099      	str	r1, [r3, r2]
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	60fb      	str	r3, [r7, #12]
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	681a      	ldr	r2, [r3, #0]
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	681b      	ldr	r3, [r3, #0]
 8004e46:	2101      	movs	r1, #1
 8004e48:	438a      	bics	r2, r1
 8004e4a:	601a      	str	r2, [r3, #0]
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	689b      	ldr	r3, [r3, #8]
 8004e52:	4a0e      	ldr	r2, [pc, #56]	@ (8004e8c <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 8004e54:	4013      	ands	r3, r2
 8004e56:	0019      	movs	r1, r3
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	683a      	ldr	r2, [r7, #0]
 8004e5e:	430a      	orrs	r2, r1
 8004e60:	609a      	str	r2, [r3, #8]
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	0018      	movs	r0, r3
 8004e66:	f000 f87b 	bl	8004f60 <UARTEx_SetNbDataToProcess>
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	68fa      	ldr	r2, [r7, #12]
 8004e70:	601a      	str	r2, [r3, #0]
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	2288      	movs	r2, #136	@ 0x88
 8004e76:	2120      	movs	r1, #32
 8004e78:	5099      	str	r1, [r3, r2]
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	2284      	movs	r2, #132	@ 0x84
 8004e7e:	2100      	movs	r1, #0
 8004e80:	5499      	strb	r1, [r3, r2]
 8004e82:	2300      	movs	r3, #0
 8004e84:	0018      	movs	r0, r3
 8004e86:	46bd      	mov	sp, r7
 8004e88:	b004      	add	sp, #16
 8004e8a:	bd80      	pop	{r7, pc}
 8004e8c:	f1ffffff 	.word	0xf1ffffff

08004e90 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8004e90:	b5b0      	push	{r4, r5, r7, lr}
 8004e92:	b08a      	sub	sp, #40	@ 0x28
 8004e94:	af00      	add	r7, sp, #0
 8004e96:	60f8      	str	r0, [r7, #12]
 8004e98:	60b9      	str	r1, [r7, #8]
 8004e9a:	1dbb      	adds	r3, r7, #6
 8004e9c:	801a      	strh	r2, [r3, #0]
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	228c      	movs	r2, #140	@ 0x8c
 8004ea2:	589b      	ldr	r3, [r3, r2]
 8004ea4:	2b20      	cmp	r3, #32
 8004ea6:	d156      	bne.n	8004f56 <HAL_UARTEx_ReceiveToIdle_DMA+0xc6>
 8004ea8:	68bb      	ldr	r3, [r7, #8]
 8004eaa:	2b00      	cmp	r3, #0
 8004eac:	d003      	beq.n	8004eb6 <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8004eae:	1dbb      	adds	r3, r7, #6
 8004eb0:	881b      	ldrh	r3, [r3, #0]
 8004eb2:	2b00      	cmp	r3, #0
 8004eb4:	d101      	bne.n	8004eba <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
 8004eb6:	2301      	movs	r3, #1
 8004eb8:	e04e      	b.n	8004f58 <HAL_UARTEx_ReceiveToIdle_DMA+0xc8>
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	689a      	ldr	r2, [r3, #8]
 8004ebe:	2380      	movs	r3, #128	@ 0x80
 8004ec0:	015b      	lsls	r3, r3, #5
 8004ec2:	429a      	cmp	r2, r3
 8004ec4:	d109      	bne.n	8004eda <HAL_UARTEx_ReceiveToIdle_DMA+0x4a>
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	691b      	ldr	r3, [r3, #16]
 8004eca:	2b00      	cmp	r3, #0
 8004ecc:	d105      	bne.n	8004eda <HAL_UARTEx_ReceiveToIdle_DMA+0x4a>
 8004ece:	68bb      	ldr	r3, [r7, #8]
 8004ed0:	2201      	movs	r2, #1
 8004ed2:	4013      	ands	r3, r2
 8004ed4:	d001      	beq.n	8004eda <HAL_UARTEx_ReceiveToIdle_DMA+0x4a>
 8004ed6:	2301      	movs	r3, #1
 8004ed8:	e03e      	b.n	8004f58 <HAL_UARTEx_ReceiveToIdle_DMA+0xc8>
 8004eda:	68fb      	ldr	r3, [r7, #12]
 8004edc:	2201      	movs	r2, #1
 8004ede:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004ee0:	68fb      	ldr	r3, [r7, #12]
 8004ee2:	2200      	movs	r2, #0
 8004ee4:	671a      	str	r2, [r3, #112]	@ 0x70
 8004ee6:	2527      	movs	r5, #39	@ 0x27
 8004ee8:	197c      	adds	r4, r7, r5
 8004eea:	1dbb      	adds	r3, r7, #6
 8004eec:	881a      	ldrh	r2, [r3, #0]
 8004eee:	68b9      	ldr	r1, [r7, #8]
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	0018      	movs	r0, r3
 8004ef4:	f7ff fb9e 	bl	8004634 <UART_Start_Receive_DMA>
 8004ef8:	0003      	movs	r3, r0
 8004efa:	7023      	strb	r3, [r4, #0]
 8004efc:	197b      	adds	r3, r7, r5
 8004efe:	781b      	ldrb	r3, [r3, #0]
 8004f00:	2b00      	cmp	r3, #0
 8004f02:	d124      	bne.n	8004f4e <HAL_UARTEx_ReceiveToIdle_DMA+0xbe>
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004f08:	2b01      	cmp	r3, #1
 8004f0a:	d11c      	bne.n	8004f46 <HAL_UARTEx_ReceiveToIdle_DMA+0xb6>
 8004f0c:	68fb      	ldr	r3, [r7, #12]
 8004f0e:	681b      	ldr	r3, [r3, #0]
 8004f10:	2210      	movs	r2, #16
 8004f12:	621a      	str	r2, [r3, #32]
 8004f14:	f3ef 8310 	mrs	r3, PRIMASK
 8004f18:	617b      	str	r3, [r7, #20]
 8004f1a:	697b      	ldr	r3, [r7, #20]
 8004f1c:	623b      	str	r3, [r7, #32]
 8004f1e:	2301      	movs	r3, #1
 8004f20:	61bb      	str	r3, [r7, #24]
 8004f22:	69bb      	ldr	r3, [r7, #24]
 8004f24:	f383 8810 	msr	PRIMASK, r3
 8004f28:	46c0      	nop			@ (mov r8, r8)
 8004f2a:	68fb      	ldr	r3, [r7, #12]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	681a      	ldr	r2, [r3, #0]
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	681b      	ldr	r3, [r3, #0]
 8004f34:	2110      	movs	r1, #16
 8004f36:	430a      	orrs	r2, r1
 8004f38:	601a      	str	r2, [r3, #0]
 8004f3a:	6a3b      	ldr	r3, [r7, #32]
 8004f3c:	61fb      	str	r3, [r7, #28]
 8004f3e:	69fb      	ldr	r3, [r7, #28]
 8004f40:	f383 8810 	msr	PRIMASK, r3
 8004f44:	e003      	b.n	8004f4e <HAL_UARTEx_ReceiveToIdle_DMA+0xbe>
 8004f46:	2327      	movs	r3, #39	@ 0x27
 8004f48:	18fb      	adds	r3, r7, r3
 8004f4a:	2201      	movs	r2, #1
 8004f4c:	701a      	strb	r2, [r3, #0]
 8004f4e:	2327      	movs	r3, #39	@ 0x27
 8004f50:	18fb      	adds	r3, r7, r3
 8004f52:	781b      	ldrb	r3, [r3, #0]
 8004f54:	e000      	b.n	8004f58 <HAL_UARTEx_ReceiveToIdle_DMA+0xc8>
 8004f56:	2302      	movs	r3, #2
 8004f58:	0018      	movs	r0, r3
 8004f5a:	46bd      	mov	sp, r7
 8004f5c:	b00a      	add	sp, #40	@ 0x28
 8004f5e:	bdb0      	pop	{r4, r5, r7, pc}

08004f60 <UARTEx_SetNbDataToProcess>:
 8004f60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f62:	b085      	sub	sp, #20
 8004f64:	af00      	add	r7, sp, #0
 8004f66:	6078      	str	r0, [r7, #4]
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d108      	bne.n	8004f82 <UARTEx_SetNbDataToProcess+0x22>
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	226a      	movs	r2, #106	@ 0x6a
 8004f74:	2101      	movs	r1, #1
 8004f76:	5299      	strh	r1, [r3, r2]
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	2268      	movs	r2, #104	@ 0x68
 8004f7c:	2101      	movs	r1, #1
 8004f7e:	5299      	strh	r1, [r3, r2]
 8004f80:	e043      	b.n	800500a <UARTEx_SetNbDataToProcess+0xaa>
 8004f82:	260f      	movs	r6, #15
 8004f84:	19bb      	adds	r3, r7, r6
 8004f86:	2208      	movs	r2, #8
 8004f88:	701a      	strb	r2, [r3, #0]
 8004f8a:	200e      	movs	r0, #14
 8004f8c:	183b      	adds	r3, r7, r0
 8004f8e:	2208      	movs	r2, #8
 8004f90:	701a      	strb	r2, [r3, #0]
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	689b      	ldr	r3, [r3, #8]
 8004f98:	0e5b      	lsrs	r3, r3, #25
 8004f9a:	b2da      	uxtb	r2, r3
 8004f9c:	240d      	movs	r4, #13
 8004f9e:	193b      	adds	r3, r7, r4
 8004fa0:	2107      	movs	r1, #7
 8004fa2:	400a      	ands	r2, r1
 8004fa4:	701a      	strb	r2, [r3, #0]
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	689b      	ldr	r3, [r3, #8]
 8004fac:	0f5b      	lsrs	r3, r3, #29
 8004fae:	b2da      	uxtb	r2, r3
 8004fb0:	250c      	movs	r5, #12
 8004fb2:	197b      	adds	r3, r7, r5
 8004fb4:	2107      	movs	r1, #7
 8004fb6:	400a      	ands	r2, r1
 8004fb8:	701a      	strb	r2, [r3, #0]
 8004fba:	183b      	adds	r3, r7, r0
 8004fbc:	781b      	ldrb	r3, [r3, #0]
 8004fbe:	197a      	adds	r2, r7, r5
 8004fc0:	7812      	ldrb	r2, [r2, #0]
 8004fc2:	4914      	ldr	r1, [pc, #80]	@ (8005014 <UARTEx_SetNbDataToProcess+0xb4>)
 8004fc4:	5c8a      	ldrb	r2, [r1, r2]
 8004fc6:	435a      	muls	r2, r3
 8004fc8:	0010      	movs	r0, r2
 8004fca:	197b      	adds	r3, r7, r5
 8004fcc:	781b      	ldrb	r3, [r3, #0]
 8004fce:	4a12      	ldr	r2, [pc, #72]	@ (8005018 <UARTEx_SetNbDataToProcess+0xb8>)
 8004fd0:	5cd3      	ldrb	r3, [r2, r3]
 8004fd2:	0019      	movs	r1, r3
 8004fd4:	f7fb f922 	bl	800021c <__divsi3>
 8004fd8:	0003      	movs	r3, r0
 8004fda:	b299      	uxth	r1, r3
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	226a      	movs	r2, #106	@ 0x6a
 8004fe0:	5299      	strh	r1, [r3, r2]
 8004fe2:	19bb      	adds	r3, r7, r6
 8004fe4:	781b      	ldrb	r3, [r3, #0]
 8004fe6:	193a      	adds	r2, r7, r4
 8004fe8:	7812      	ldrb	r2, [r2, #0]
 8004fea:	490a      	ldr	r1, [pc, #40]	@ (8005014 <UARTEx_SetNbDataToProcess+0xb4>)
 8004fec:	5c8a      	ldrb	r2, [r1, r2]
 8004fee:	435a      	muls	r2, r3
 8004ff0:	0010      	movs	r0, r2
 8004ff2:	193b      	adds	r3, r7, r4
 8004ff4:	781b      	ldrb	r3, [r3, #0]
 8004ff6:	4a08      	ldr	r2, [pc, #32]	@ (8005018 <UARTEx_SetNbDataToProcess+0xb8>)
 8004ff8:	5cd3      	ldrb	r3, [r2, r3]
 8004ffa:	0019      	movs	r1, r3
 8004ffc:	f7fb f90e 	bl	800021c <__divsi3>
 8005000:	0003      	movs	r3, r0
 8005002:	b299      	uxth	r1, r3
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	2268      	movs	r2, #104	@ 0x68
 8005008:	5299      	strh	r1, [r3, r2]
 800500a:	46c0      	nop			@ (mov r8, r8)
 800500c:	46bd      	mov	sp, r7
 800500e:	b005      	add	sp, #20
 8005010:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005012:	46c0      	nop			@ (mov r8, r8)
 8005014:	08005340 	.word	0x08005340
 8005018:	08005348 	.word	0x08005348

0800501c <memset>:
 800501c:	0003      	movs	r3, r0
 800501e:	1882      	adds	r2, r0, r2
 8005020:	4293      	cmp	r3, r2
 8005022:	d100      	bne.n	8005026 <memset+0xa>
 8005024:	4770      	bx	lr
 8005026:	7019      	strb	r1, [r3, #0]
 8005028:	3301      	adds	r3, #1
 800502a:	e7f9      	b.n	8005020 <memset+0x4>

0800502c <__libc_init_array>:
 800502c:	b570      	push	{r4, r5, r6, lr}
 800502e:	2600      	movs	r6, #0
 8005030:	4c0c      	ldr	r4, [pc, #48]	@ (8005064 <__libc_init_array+0x38>)
 8005032:	4d0d      	ldr	r5, [pc, #52]	@ (8005068 <__libc_init_array+0x3c>)
 8005034:	1b64      	subs	r4, r4, r5
 8005036:	10a4      	asrs	r4, r4, #2
 8005038:	42a6      	cmp	r6, r4
 800503a:	d109      	bne.n	8005050 <__libc_init_array+0x24>
 800503c:	2600      	movs	r6, #0
 800503e:	f000 f819 	bl	8005074 <_init>
 8005042:	4c0a      	ldr	r4, [pc, #40]	@ (800506c <__libc_init_array+0x40>)
 8005044:	4d0a      	ldr	r5, [pc, #40]	@ (8005070 <__libc_init_array+0x44>)
 8005046:	1b64      	subs	r4, r4, r5
 8005048:	10a4      	asrs	r4, r4, #2
 800504a:	42a6      	cmp	r6, r4
 800504c:	d105      	bne.n	800505a <__libc_init_array+0x2e>
 800504e:	bd70      	pop	{r4, r5, r6, pc}
 8005050:	00b3      	lsls	r3, r6, #2
 8005052:	58eb      	ldr	r3, [r5, r3]
 8005054:	4798      	blx	r3
 8005056:	3601      	adds	r6, #1
 8005058:	e7ee      	b.n	8005038 <__libc_init_array+0xc>
 800505a:	00b3      	lsls	r3, r6, #2
 800505c:	58eb      	ldr	r3, [r5, r3]
 800505e:	4798      	blx	r3
 8005060:	3601      	adds	r6, #1
 8005062:	e7f2      	b.n	800504a <__libc_init_array+0x1e>
 8005064:	08005350 	.word	0x08005350
 8005068:	08005350 	.word	0x08005350
 800506c:	08005354 	.word	0x08005354
 8005070:	08005350 	.word	0x08005350

08005074 <_init>:
 8005074:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005076:	46c0      	nop			@ (mov r8, r8)
 8005078:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800507a:	bc08      	pop	{r3}
 800507c:	469e      	mov	lr, r3
 800507e:	4770      	bx	lr

08005080 <_fini>:
 8005080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005082:	46c0      	nop			@ (mov r8, r8)
 8005084:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005086:	bc08      	pop	{r3}
 8005088:	469e      	mov	lr, r3
 800508a:	4770      	bx	lr
