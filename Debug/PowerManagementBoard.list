
PowerManagementBoard.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005038  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002c4  080050f8  080050f8  000060f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080053bc  080053bc  00007020  2**0
                  CONTENTS
  4 .ARM          00000000  080053bc  080053bc  00007020  2**0
                  CONTENTS
  5 .preinit_array 00000000  080053bc  080053bc  00007020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080053bc  080053bc  000063bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080053c0  080053c0  000063c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000020  20000000  080053c4  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000484  20000020  080053e4  00007020  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200004a4  080053e4  000074a4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00007020  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c1bb  00000000  00000000  00007048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001e90  00000000  00000000  00013203  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000008d8  00000000  00000000  00015098  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000006e7  00000000  00000000  00015970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00014b49  00000000  00000000  00016057  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000bcdf  00000000  00000000  0002aba0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00080a88  00000000  00000000  0003687f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  000b7307  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001ec0  00000000  00000000  000b7390  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  000b9250  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000020 	.word	0x20000020
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080050e0 	.word	0x080050e0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000024 	.word	0x20000024
 8000104:	080050e0 	.word	0x080050e0

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	@ 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f8f0 	bl	80003f0 <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			@ (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__divsi3>:
 800021c:	4603      	mov	r3, r0
 800021e:	430b      	orrs	r3, r1
 8000220:	d47f      	bmi.n	8000322 <__divsi3+0x106>
 8000222:	2200      	movs	r2, #0
 8000224:	0843      	lsrs	r3, r0, #1
 8000226:	428b      	cmp	r3, r1
 8000228:	d374      	bcc.n	8000314 <__divsi3+0xf8>
 800022a:	0903      	lsrs	r3, r0, #4
 800022c:	428b      	cmp	r3, r1
 800022e:	d35f      	bcc.n	80002f0 <__divsi3+0xd4>
 8000230:	0a03      	lsrs	r3, r0, #8
 8000232:	428b      	cmp	r3, r1
 8000234:	d344      	bcc.n	80002c0 <__divsi3+0xa4>
 8000236:	0b03      	lsrs	r3, r0, #12
 8000238:	428b      	cmp	r3, r1
 800023a:	d328      	bcc.n	800028e <__divsi3+0x72>
 800023c:	0c03      	lsrs	r3, r0, #16
 800023e:	428b      	cmp	r3, r1
 8000240:	d30d      	bcc.n	800025e <__divsi3+0x42>
 8000242:	22ff      	movs	r2, #255	@ 0xff
 8000244:	0209      	lsls	r1, r1, #8
 8000246:	ba12      	rev	r2, r2
 8000248:	0c03      	lsrs	r3, r0, #16
 800024a:	428b      	cmp	r3, r1
 800024c:	d302      	bcc.n	8000254 <__divsi3+0x38>
 800024e:	1212      	asrs	r2, r2, #8
 8000250:	0209      	lsls	r1, r1, #8
 8000252:	d065      	beq.n	8000320 <__divsi3+0x104>
 8000254:	0b03      	lsrs	r3, r0, #12
 8000256:	428b      	cmp	r3, r1
 8000258:	d319      	bcc.n	800028e <__divsi3+0x72>
 800025a:	e000      	b.n	800025e <__divsi3+0x42>
 800025c:	0a09      	lsrs	r1, r1, #8
 800025e:	0bc3      	lsrs	r3, r0, #15
 8000260:	428b      	cmp	r3, r1
 8000262:	d301      	bcc.n	8000268 <__divsi3+0x4c>
 8000264:	03cb      	lsls	r3, r1, #15
 8000266:	1ac0      	subs	r0, r0, r3
 8000268:	4152      	adcs	r2, r2
 800026a:	0b83      	lsrs	r3, r0, #14
 800026c:	428b      	cmp	r3, r1
 800026e:	d301      	bcc.n	8000274 <__divsi3+0x58>
 8000270:	038b      	lsls	r3, r1, #14
 8000272:	1ac0      	subs	r0, r0, r3
 8000274:	4152      	adcs	r2, r2
 8000276:	0b43      	lsrs	r3, r0, #13
 8000278:	428b      	cmp	r3, r1
 800027a:	d301      	bcc.n	8000280 <__divsi3+0x64>
 800027c:	034b      	lsls	r3, r1, #13
 800027e:	1ac0      	subs	r0, r0, r3
 8000280:	4152      	adcs	r2, r2
 8000282:	0b03      	lsrs	r3, r0, #12
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x70>
 8000288:	030b      	lsls	r3, r1, #12
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0ac3      	lsrs	r3, r0, #11
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x7c>
 8000294:	02cb      	lsls	r3, r1, #11
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0a83      	lsrs	r3, r0, #10
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x88>
 80002a0:	028b      	lsls	r3, r1, #10
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0a43      	lsrs	r3, r0, #9
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x94>
 80002ac:	024b      	lsls	r3, r1, #9
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0a03      	lsrs	r3, r0, #8
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0xa0>
 80002b8:	020b      	lsls	r3, r1, #8
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	d2cd      	bcs.n	800025c <__divsi3+0x40>
 80002c0:	09c3      	lsrs	r3, r0, #7
 80002c2:	428b      	cmp	r3, r1
 80002c4:	d301      	bcc.n	80002ca <__divsi3+0xae>
 80002c6:	01cb      	lsls	r3, r1, #7
 80002c8:	1ac0      	subs	r0, r0, r3
 80002ca:	4152      	adcs	r2, r2
 80002cc:	0983      	lsrs	r3, r0, #6
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d301      	bcc.n	80002d6 <__divsi3+0xba>
 80002d2:	018b      	lsls	r3, r1, #6
 80002d4:	1ac0      	subs	r0, r0, r3
 80002d6:	4152      	adcs	r2, r2
 80002d8:	0943      	lsrs	r3, r0, #5
 80002da:	428b      	cmp	r3, r1
 80002dc:	d301      	bcc.n	80002e2 <__divsi3+0xc6>
 80002de:	014b      	lsls	r3, r1, #5
 80002e0:	1ac0      	subs	r0, r0, r3
 80002e2:	4152      	adcs	r2, r2
 80002e4:	0903      	lsrs	r3, r0, #4
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xd2>
 80002ea:	010b      	lsls	r3, r1, #4
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	08c3      	lsrs	r3, r0, #3
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xde>
 80002f6:	00cb      	lsls	r3, r1, #3
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0883      	lsrs	r3, r0, #2
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xea>
 8000302:	008b      	lsls	r3, r1, #2
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0843      	lsrs	r3, r0, #1
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xf6>
 800030e:	004b      	lsls	r3, r1, #1
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	1a41      	subs	r1, r0, r1
 8000316:	d200      	bcs.n	800031a <__divsi3+0xfe>
 8000318:	4601      	mov	r1, r0
 800031a:	4152      	adcs	r2, r2
 800031c:	4610      	mov	r0, r2
 800031e:	4770      	bx	lr
 8000320:	e05d      	b.n	80003de <__divsi3+0x1c2>
 8000322:	0fca      	lsrs	r2, r1, #31
 8000324:	d000      	beq.n	8000328 <__divsi3+0x10c>
 8000326:	4249      	negs	r1, r1
 8000328:	1003      	asrs	r3, r0, #32
 800032a:	d300      	bcc.n	800032e <__divsi3+0x112>
 800032c:	4240      	negs	r0, r0
 800032e:	4053      	eors	r3, r2
 8000330:	2200      	movs	r2, #0
 8000332:	469c      	mov	ip, r3
 8000334:	0903      	lsrs	r3, r0, #4
 8000336:	428b      	cmp	r3, r1
 8000338:	d32d      	bcc.n	8000396 <__divsi3+0x17a>
 800033a:	0a03      	lsrs	r3, r0, #8
 800033c:	428b      	cmp	r3, r1
 800033e:	d312      	bcc.n	8000366 <__divsi3+0x14a>
 8000340:	22fc      	movs	r2, #252	@ 0xfc
 8000342:	0189      	lsls	r1, r1, #6
 8000344:	ba12      	rev	r2, r2
 8000346:	0a03      	lsrs	r3, r0, #8
 8000348:	428b      	cmp	r3, r1
 800034a:	d30c      	bcc.n	8000366 <__divsi3+0x14a>
 800034c:	0189      	lsls	r1, r1, #6
 800034e:	1192      	asrs	r2, r2, #6
 8000350:	428b      	cmp	r3, r1
 8000352:	d308      	bcc.n	8000366 <__divsi3+0x14a>
 8000354:	0189      	lsls	r1, r1, #6
 8000356:	1192      	asrs	r2, r2, #6
 8000358:	428b      	cmp	r3, r1
 800035a:	d304      	bcc.n	8000366 <__divsi3+0x14a>
 800035c:	0189      	lsls	r1, r1, #6
 800035e:	d03a      	beq.n	80003d6 <__divsi3+0x1ba>
 8000360:	1192      	asrs	r2, r2, #6
 8000362:	e000      	b.n	8000366 <__divsi3+0x14a>
 8000364:	0989      	lsrs	r1, r1, #6
 8000366:	09c3      	lsrs	r3, r0, #7
 8000368:	428b      	cmp	r3, r1
 800036a:	d301      	bcc.n	8000370 <__divsi3+0x154>
 800036c:	01cb      	lsls	r3, r1, #7
 800036e:	1ac0      	subs	r0, r0, r3
 8000370:	4152      	adcs	r2, r2
 8000372:	0983      	lsrs	r3, r0, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d301      	bcc.n	800037c <__divsi3+0x160>
 8000378:	018b      	lsls	r3, r1, #6
 800037a:	1ac0      	subs	r0, r0, r3
 800037c:	4152      	adcs	r2, r2
 800037e:	0943      	lsrs	r3, r0, #5
 8000380:	428b      	cmp	r3, r1
 8000382:	d301      	bcc.n	8000388 <__divsi3+0x16c>
 8000384:	014b      	lsls	r3, r1, #5
 8000386:	1ac0      	subs	r0, r0, r3
 8000388:	4152      	adcs	r2, r2
 800038a:	0903      	lsrs	r3, r0, #4
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x178>
 8000390:	010b      	lsls	r3, r1, #4
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	08c3      	lsrs	r3, r0, #3
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x184>
 800039c:	00cb      	lsls	r3, r1, #3
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0883      	lsrs	r3, r0, #2
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x190>
 80003a8:	008b      	lsls	r3, r1, #2
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	d2d9      	bcs.n	8000364 <__divsi3+0x148>
 80003b0:	0843      	lsrs	r3, r0, #1
 80003b2:	428b      	cmp	r3, r1
 80003b4:	d301      	bcc.n	80003ba <__divsi3+0x19e>
 80003b6:	004b      	lsls	r3, r1, #1
 80003b8:	1ac0      	subs	r0, r0, r3
 80003ba:	4152      	adcs	r2, r2
 80003bc:	1a41      	subs	r1, r0, r1
 80003be:	d200      	bcs.n	80003c2 <__divsi3+0x1a6>
 80003c0:	4601      	mov	r1, r0
 80003c2:	4663      	mov	r3, ip
 80003c4:	4152      	adcs	r2, r2
 80003c6:	105b      	asrs	r3, r3, #1
 80003c8:	4610      	mov	r0, r2
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x1b4>
 80003cc:	4240      	negs	r0, r0
 80003ce:	2b00      	cmp	r3, #0
 80003d0:	d500      	bpl.n	80003d4 <__divsi3+0x1b8>
 80003d2:	4249      	negs	r1, r1
 80003d4:	4770      	bx	lr
 80003d6:	4663      	mov	r3, ip
 80003d8:	105b      	asrs	r3, r3, #1
 80003da:	d300      	bcc.n	80003de <__divsi3+0x1c2>
 80003dc:	4240      	negs	r0, r0
 80003de:	b501      	push	{r0, lr}
 80003e0:	2000      	movs	r0, #0
 80003e2:	f000 f805 	bl	80003f0 <__aeabi_idiv0>
 80003e6:	bd02      	pop	{r1, pc}

080003e8 <__aeabi_idivmod>:
 80003e8:	2900      	cmp	r1, #0
 80003ea:	d0f8      	beq.n	80003de <__divsi3+0x1c2>
 80003ec:	e716      	b.n	800021c <__divsi3>
 80003ee:	4770      	bx	lr

080003f0 <__aeabi_idiv0>:
 80003f0:	4770      	bx	lr
 80003f2:	46c0      	nop			@ (mov r8, r8)

080003f4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80003f4:	b590      	push	{r4, r7, lr}
 80003f6:	b083      	sub	sp, #12
 80003f8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
	int8_t modbus_status = HAL_OK;
 80003fa:	1dfb      	adds	r3, r7, #7
 80003fc:	2200      	movs	r2, #0
 80003fe:	701a      	strb	r2, [r3, #0]
	uint8_t modbus_tx_len = 0;
 8000400:	1c7b      	adds	r3, r7, #1
 8000402:	2200      	movs	r2, #0
 8000404:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000406:	f001 fb56 	bl	8001ab6 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800040a:	f000 f9e5 	bl	80007d8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800040e:	f000 fa97 	bl	8000940 <MX_GPIO_Init>
  MX_DMA_Init();
 8000412:	f000 fa6f 	bl	80008f4 <MX_DMA_Init>
  MX_USART1_UART_Init();
 8000416:	f000 fa1d 	bl	8000854 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */

  if(modbus_set_rx() != HAL_OK)
 800041a:	f000 ff1d 	bl	8001258 <modbus_set_rx>
 800041e:	1e03      	subs	r3, r0, #0
 8000420:	d001      	beq.n	8000426 <main+0x32>
  {
	  Error_Handler();
 8000422:	f000 fb0b 	bl	8000a3c <Error_Handler>
  }
  wdg_time = 0;
 8000426:	4bd5      	ldr	r3, [pc, #852]	@ (800077c <main+0x388>)
 8000428:	2200      	movs	r2, #0
 800042a:	601a      	str	r2, [r3, #0]
  shutdown = 0;
 800042c:	4bd4      	ldr	r3, [pc, #848]	@ (8000780 <main+0x38c>)
 800042e:	2200      	movs	r2, #0
 8000430:	701a      	strb	r2, [r3, #0]

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if(HAL_GPIO_ReadPin(MANUAL_GPIO_Port, MANUAL_Pin) == GPIO_PIN_SET)
 8000432:	4bd4      	ldr	r3, [pc, #848]	@ (8000784 <main+0x390>)
 8000434:	2140      	movs	r1, #64	@ 0x40
 8000436:	0018      	movs	r0, r3
 8000438:	f002 faea 	bl	8002a10 <HAL_GPIO_ReadPin>
 800043c:	0003      	movs	r3, r0
 800043e:	2b01      	cmp	r3, #1
 8000440:	d000      	beq.n	8000444 <main+0x50>
 8000442:	e1a5      	b.n	8000790 <main+0x39c>
	  {
		  if(shutdown)
 8000444:	4bce      	ldr	r3, [pc, #824]	@ (8000780 <main+0x38c>)
 8000446:	781b      	ldrb	r3, [r3, #0]
 8000448:	2b00      	cmp	r3, #0
 800044a:	d01e      	beq.n	800048a <main+0x96>
		  {
			  // Set all GPIO pins low
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_RESET);
 800044c:	4bcd      	ldr	r3, [pc, #820]	@ (8000784 <main+0x390>)
 800044e:	2200      	movs	r2, #0
 8000450:	2180      	movs	r1, #128	@ 0x80
 8000452:	0018      	movs	r0, r3
 8000454:	f002 faf9 	bl	8002a4a <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_RESET);
 8000458:	4bca      	ldr	r3, [pc, #808]	@ (8000784 <main+0x390>)
 800045a:	2200      	movs	r2, #0
 800045c:	2180      	movs	r1, #128	@ 0x80
 800045e:	0018      	movs	r0, r3
 8000460:	f002 faf3 	bl	8002a4a <HAL_GPIO_WritePin>

			  // Carry the pin changes to the register database
			  holding_register_database[GPIO_WRITE] = 0;
 8000464:	4bc8      	ldr	r3, [pc, #800]	@ (8000788 <main+0x394>)
 8000466:	2200      	movs	r2, #0
 8000468:	819a      	strh	r2, [r3, #12]
			  prev_gpio_write_register = 0;
 800046a:	4bc8      	ldr	r3, [pc, #800]	@ (800078c <main+0x398>)
 800046c:	2200      	movs	r2, #0
 800046e:	801a      	strh	r2, [r3, #0]

			  // Restart the Modbus
			  int8_t status = modbus_startup();
 8000470:	1d3c      	adds	r4, r7, #4
 8000472:	f000 ff77 	bl	8001364 <modbus_startup>
 8000476:	0003      	movs	r3, r0
 8000478:	7023      	strb	r3, [r4, #0]
			  if(status != 0)
			  {
				  // log error in a queue
			  }
			  status = modbus_set_rx();
 800047a:	1d3c      	adds	r4, r7, #4
 800047c:	f000 feec 	bl	8001258 <modbus_set_rx>
 8000480:	0003      	movs	r3, r0
 8000482:	7023      	strb	r3, [r4, #0]
			  {
				  // log error in a queue
			  }

			  // Ensure this code only executes once
			  shutdown = 0;
 8000484:	4bbe      	ldr	r3, [pc, #760]	@ (8000780 <main+0x38c>)
 8000486:	2200      	movs	r2, #0
 8000488:	701a      	strb	r2, [r3, #0]
		  }
		  // Update the GPIO_READ register
		  GPIO_PinState estop_sense = HAL_GPIO_ReadPin(ESTOP_SENSE_GPIO_Port, ESTOP_SENSE_Pin);
 800048a:	1cfc      	adds	r4, r7, #3
 800048c:	2380      	movs	r3, #128	@ 0x80
 800048e:	009b      	lsls	r3, r3, #2
 8000490:	4abc      	ldr	r2, [pc, #752]	@ (8000784 <main+0x390>)
 8000492:	0019      	movs	r1, r3
 8000494:	0010      	movs	r0, r2
 8000496:	f002 fabb 	bl	8002a10 <HAL_GPIO_ReadPin>
 800049a:	0003      	movs	r3, r0
 800049c:	7023      	strb	r3, [r4, #0]
		  GPIO_PinState sense_120 = HAL_GPIO_ReadPin(SENSE_120_GPIO_Port, SENSE_120_Pin);
 800049e:	1cbc      	adds	r4, r7, #2
 80004a0:	2380      	movs	r3, #128	@ 0x80
 80004a2:	021b      	lsls	r3, r3, #8
 80004a4:	4ab7      	ldr	r2, [pc, #732]	@ (8000784 <main+0x390>)
 80004a6:	0019      	movs	r1, r3
 80004a8:	0010      	movs	r0, r2
 80004aa:	f002 fab1 	bl	8002a10 <HAL_GPIO_ReadPin>
 80004ae:	0003      	movs	r3, r0
 80004b0:	7023      	strb	r3, [r4, #0]

		  holding_register_database[GPIO_READ] = ((estop_sense << ESTOP_SENSE_POS) | (sense_120 << SENSE_120_POS));
 80004b2:	1cfb      	adds	r3, r7, #3
 80004b4:	781b      	ldrb	r3, [r3, #0]
 80004b6:	b21a      	sxth	r2, r3
 80004b8:	1cbb      	adds	r3, r7, #2
 80004ba:	781b      	ldrb	r3, [r3, #0]
 80004bc:	005b      	lsls	r3, r3, #1
 80004be:	b21b      	sxth	r3, r3
 80004c0:	4313      	orrs	r3, r2
 80004c2:	b21b      	sxth	r3, r3
 80004c4:	b29a      	uxth	r2, r3
 80004c6:	4bb0      	ldr	r3, [pc, #704]	@ (8000788 <main+0x394>)
 80004c8:	815a      	strh	r2, [r3, #10]

		  // Handle adjustment of the GPIO_WRITE pins
		  if(prev_gpio_write_register != holding_register_database[GPIO_WRITE])
 80004ca:	4baf      	ldr	r3, [pc, #700]	@ (8000788 <main+0x394>)
 80004cc:	899a      	ldrh	r2, [r3, #12]
 80004ce:	4baf      	ldr	r3, [pc, #700]	@ (800078c <main+0x398>)
 80004d0:	881b      	ldrh	r3, [r3, #0]
 80004d2:	429a      	cmp	r2, r3
 80004d4:	d02e      	beq.n	8000534 <main+0x140>
		  {
			  if((prev_gpio_write_register & RELAY_120_MASK) != (holding_register_database[GPIO_WRITE] & RELAY_120_MASK))
 80004d6:	4bac      	ldr	r3, [pc, #688]	@ (8000788 <main+0x394>)
 80004d8:	899a      	ldrh	r2, [r3, #12]
 80004da:	4bac      	ldr	r3, [pc, #688]	@ (800078c <main+0x398>)
 80004dc:	881b      	ldrh	r3, [r3, #0]
 80004de:	4053      	eors	r3, r2
 80004e0:	b29b      	uxth	r3, r3
 80004e2:	001a      	movs	r2, r3
 80004e4:	2301      	movs	r3, #1
 80004e6:	4013      	ands	r3, r2
 80004e8:	d00b      	beq.n	8000502 <main+0x10e>
			  {
				  HAL_GPIO_WritePin(RELAY_120_GPIO_Port, RELAY_120_Pin, (holding_register_database[GPIO_WRITE] & RELAY_120_MASK));
 80004ea:	4ba7      	ldr	r3, [pc, #668]	@ (8000788 <main+0x394>)
 80004ec:	899b      	ldrh	r3, [r3, #12]
 80004ee:	b2db      	uxtb	r3, r3
 80004f0:	2201      	movs	r2, #1
 80004f2:	4013      	ands	r3, r2
 80004f4:	b2da      	uxtb	r2, r3
 80004f6:	2380      	movs	r3, #128	@ 0x80
 80004f8:	005b      	lsls	r3, r3, #1
 80004fa:	48a2      	ldr	r0, [pc, #648]	@ (8000784 <main+0x390>)
 80004fc:	0019      	movs	r1, r3
 80004fe:	f002 faa4 	bl	8002a4a <HAL_GPIO_WritePin>
			  }
			  if((prev_gpio_write_register & RELAY_480_MASK) != (holding_register_database[GPIO_WRITE] & RELAY_480_MASK))
 8000502:	4ba1      	ldr	r3, [pc, #644]	@ (8000788 <main+0x394>)
 8000504:	899a      	ldrh	r2, [r3, #12]
 8000506:	4ba1      	ldr	r3, [pc, #644]	@ (800078c <main+0x398>)
 8000508:	881b      	ldrh	r3, [r3, #0]
 800050a:	4053      	eors	r3, r2
 800050c:	b29b      	uxth	r3, r3
 800050e:	001a      	movs	r2, r3
 8000510:	2302      	movs	r3, #2
 8000512:	4013      	ands	r3, r2
 8000514:	d00a      	beq.n	800052c <main+0x138>
			  {
				  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, (holding_register_database[GPIO_WRITE] & RELAY_480_MASK));
 8000516:	4b9c      	ldr	r3, [pc, #624]	@ (8000788 <main+0x394>)
 8000518:	899b      	ldrh	r3, [r3, #12]
 800051a:	b2db      	uxtb	r3, r3
 800051c:	2202      	movs	r2, #2
 800051e:	4013      	ands	r3, r2
 8000520:	b2db      	uxtb	r3, r3
 8000522:	4898      	ldr	r0, [pc, #608]	@ (8000784 <main+0x390>)
 8000524:	001a      	movs	r2, r3
 8000526:	2180      	movs	r1, #128	@ 0x80
 8000528:	f002 fa8f 	bl	8002a4a <HAL_GPIO_WritePin>
			  }
			  prev_gpio_write_register = holding_register_database[GPIO_WRITE];
 800052c:	4b96      	ldr	r3, [pc, #600]	@ (8000788 <main+0x394>)
 800052e:	899a      	ldrh	r2, [r3, #12]
 8000530:	4b96      	ldr	r3, [pc, #600]	@ (800078c <main+0x398>)
 8000532:	801a      	strh	r2, [r3, #0]
		  }

		  // Handle Watchdog Timeout
		  if(HAL_GetTick() - wdg_time > (uint32_t)(holding_register_database[WDG_TIMEOUT]))
 8000534:	f001 fb32 	bl	8001b9c <HAL_GetTick>
 8000538:	0002      	movs	r2, r0
 800053a:	4b90      	ldr	r3, [pc, #576]	@ (800077c <main+0x388>)
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	1ad3      	subs	r3, r2, r3
 8000540:	4a91      	ldr	r2, [pc, #580]	@ (8000788 <main+0x394>)
 8000542:	89d2      	ldrh	r2, [r2, #14]
 8000544:	4293      	cmp	r3, r2
 8000546:	d912      	bls.n	800056e <main+0x17a>
		  {
			  // Turn off the TBM
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_RESET);
 8000548:	4b8e      	ldr	r3, [pc, #568]	@ (8000784 <main+0x390>)
 800054a:	2200      	movs	r2, #0
 800054c:	2180      	movs	r1, #128	@ 0x80
 800054e:	0018      	movs	r0, r3
 8000550:	f002 fa7b 	bl	8002a4a <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(RELAY_120_GPIO_Port, RELAY_120_Pin, GPIO_PIN_RESET);
 8000554:	2380      	movs	r3, #128	@ 0x80
 8000556:	005b      	lsls	r3, r3, #1
 8000558:	488a      	ldr	r0, [pc, #552]	@ (8000784 <main+0x390>)
 800055a:	2200      	movs	r2, #0
 800055c:	0019      	movs	r1, r3
 800055e:	f002 fa74 	bl	8002a4a <HAL_GPIO_WritePin>

			  // Update the holding register database
			  holding_register_database[GPIO_WRITE] = 0;
 8000562:	4b89      	ldr	r3, [pc, #548]	@ (8000788 <main+0x394>)
 8000564:	2200      	movs	r2, #0
 8000566:	819a      	strh	r2, [r3, #12]
			  prev_gpio_write_register = 0;
 8000568:	4b88      	ldr	r3, [pc, #544]	@ (800078c <main+0x398>)
 800056a:	2200      	movs	r2, #0
 800056c:	801a      	strh	r2, [r3, #0]
		  }

		  // Handle Modbus Communication
		  if(modbus_rx())
 800056e:	f000 fb3b 	bl	8000be8 <modbus_rx>
 8000572:	1e03      	subs	r3, r0, #0
 8000574:	d100      	bne.n	8000578 <main+0x184>
 8000576:	e091      	b.n	800069c <main+0x2a8>
		  {
			  if(get_rx_buffer(0) == holding_register_database[MODBUS_ID]) // Check Slave ID
 8000578:	2000      	movs	r0, #0
 800057a:	f000 ffeb 	bl	8001554 <get_rx_buffer>
 800057e:	0003      	movs	r3, r0
 8000580:	001a      	movs	r2, r3
 8000582:	4b81      	ldr	r3, [pc, #516]	@ (8000788 <main+0x394>)
 8000584:	881b      	ldrh	r3, [r3, #0]
 8000586:	429a      	cmp	r2, r3
 8000588:	d133      	bne.n	80005f2 <main+0x1fe>
			  {
				  switch(get_rx_buffer(1))
 800058a:	2001      	movs	r0, #1
 800058c:	f000 ffe2 	bl	8001554 <get_rx_buffer>
 8000590:	0003      	movs	r3, r0
 8000592:	2b03      	cmp	r3, #3
 8000594:	d002      	beq.n	800059c <main+0x1a8>
 8000596:	2b10      	cmp	r3, #16
 8000598:	d008      	beq.n	80005ac <main+0x1b8>
 800059a:	e00f      	b.n	80005bc <main+0x1c8>
				  {
					  case 0x03:
					  {
						  // Return holding registers
						  modbus_status = return_holding_registers(&modbus_tx_len);
 800059c:	1dfc      	adds	r4, r7, #7
 800059e:	1c7b      	adds	r3, r7, #1
 80005a0:	0018      	movs	r0, r3
 80005a2:	f000 fb33 	bl	8000c0c <return_holding_registers>
 80005a6:	0003      	movs	r3, r0
 80005a8:	7023      	strb	r3, [r4, #0]
						  break;
 80005aa:	e00e      	b.n	80005ca <main+0x1d6>
					  }
					  case 0x10:
					  {
						  // Write holding registers
						  modbus_status = edit_multiple_registers(&modbus_tx_len);
 80005ac:	1dfc      	adds	r4, r7, #7
 80005ae:	1c7b      	adds	r3, r7, #1
 80005b0:	0018      	movs	r0, r3
 80005b2:	f000 fbd7 	bl	8000d64 <edit_multiple_registers>
 80005b6:	0003      	movs	r3, r0
 80005b8:	7023      	strb	r3, [r4, #0]
						  break;
 80005ba:	e006      	b.n	80005ca <main+0x1d6>
					  }
					  default:
					  {
						  modbus_status = modbus_exception(MB_ILLEGAL_FUNCTION);
 80005bc:	1dfc      	adds	r4, r7, #7
 80005be:	2004      	movs	r0, #4
 80005c0:	f000 fcd2 	bl	8000f68 <modbus_exception>
 80005c4:	0003      	movs	r3, r0
 80005c6:	7023      	strb	r3, [r4, #0]
						  break;
 80005c8:	46c0      	nop			@ (mov r8, r8)
					  }
				  }
				  if(modbus_status != 0)
 80005ca:	1dfb      	adds	r3, r7, #7
 80005cc:	781b      	ldrb	r3, [r3, #0]
 80005ce:	b25b      	sxtb	r3, r3
 80005d0:	2b00      	cmp	r3, #0
 80005d2:	d04b      	beq.n	800066c <main+0x278>
				  {
					  holding_register_database[MB_ERRORS] |= 1U << (modbus_status + (MB_FATAL_ERROR - 1));
 80005d4:	4b6c      	ldr	r3, [pc, #432]	@ (8000788 <main+0x394>)
 80005d6:	891a      	ldrh	r2, [r3, #8]
 80005d8:	1dfb      	adds	r3, r7, #7
 80005da:	781b      	ldrb	r3, [r3, #0]
 80005dc:	b25b      	sxtb	r3, r3
 80005de:	3314      	adds	r3, #20
 80005e0:	2101      	movs	r1, #1
 80005e2:	4099      	lsls	r1, r3
 80005e4:	000b      	movs	r3, r1
 80005e6:	b29b      	uxth	r3, r3
 80005e8:	4313      	orrs	r3, r2
 80005ea:	b29a      	uxth	r2, r3
 80005ec:	4b66      	ldr	r3, [pc, #408]	@ (8000788 <main+0x394>)
 80005ee:	811a      	strh	r2, [r3, #8]
 80005f0:	e03c      	b.n	800066c <main+0x278>
				  }
			  }
			  // Special case where you retrieve the modbus ID
			  else if((get_rx_buffer(0) == 0xFF) && // modbus_id = 0xFF = 255
 80005f2:	2000      	movs	r0, #0
 80005f4:	f000 ffae 	bl	8001554 <get_rx_buffer>
 80005f8:	0003      	movs	r3, r0
 80005fa:	2bff      	cmp	r3, #255	@ 0xff
 80005fc:	d136      	bne.n	800066c <main+0x278>
				(get_rx_buffer(1) == 0x03) && // Function code = read_holding_registers
 80005fe:	2001      	movs	r0, #1
 8000600:	f000 ffa8 	bl	8001554 <get_rx_buffer>
 8000604:	0003      	movs	r3, r0
			  else if((get_rx_buffer(0) == 0xFF) && // modbus_id = 0xFF = 255
 8000606:	2b03      	cmp	r3, #3
 8000608:	d130      	bne.n	800066c <main+0x278>
				(((get_rx_buffer(2) << 8) | get_rx_buffer(3)) == 0x00) && // Address to read = 0
 800060a:	2002      	movs	r0, #2
 800060c:	f000 ffa2 	bl	8001554 <get_rx_buffer>
 8000610:	0003      	movs	r3, r0
 8000612:	021c      	lsls	r4, r3, #8
 8000614:	2003      	movs	r0, #3
 8000616:	f000 ff9d 	bl	8001554 <get_rx_buffer>
 800061a:	0003      	movs	r3, r0
 800061c:	4323      	orrs	r3, r4
				(get_rx_buffer(1) == 0x03) && // Function code = read_holding_registers
 800061e:	d125      	bne.n	800066c <main+0x278>
				(((get_rx_buffer(4) << 8) | get_rx_buffer(5)) == 1)) // # of registers to read = 1
 8000620:	2004      	movs	r0, #4
 8000622:	f000 ff97 	bl	8001554 <get_rx_buffer>
 8000626:	0003      	movs	r3, r0
 8000628:	021c      	lsls	r4, r3, #8
 800062a:	2005      	movs	r0, #5
 800062c:	f000 ff92 	bl	8001554 <get_rx_buffer>
 8000630:	0003      	movs	r3, r0
 8000632:	4323      	orrs	r3, r4
				(((get_rx_buffer(2) << 8) | get_rx_buffer(3)) == 0x00) && // Address to read = 0
 8000634:	2b01      	cmp	r3, #1
 8000636:	d119      	bne.n	800066c <main+0x278>
			  {

				  modbus_status = return_holding_registers(&modbus_tx_len);
 8000638:	1dfc      	adds	r4, r7, #7
 800063a:	1c7b      	adds	r3, r7, #1
 800063c:	0018      	movs	r0, r3
 800063e:	f000 fae5 	bl	8000c0c <return_holding_registers>
 8000642:	0003      	movs	r3, r0
 8000644:	7023      	strb	r3, [r4, #0]
				  if(modbus_status != 0)
 8000646:	1dfb      	adds	r3, r7, #7
 8000648:	781b      	ldrb	r3, [r3, #0]
 800064a:	b25b      	sxtb	r3, r3
 800064c:	2b00      	cmp	r3, #0
 800064e:	d00d      	beq.n	800066c <main+0x278>
				  {
					  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status - 1) + MB_FATAL_ERROR);
 8000650:	4b4d      	ldr	r3, [pc, #308]	@ (8000788 <main+0x394>)
 8000652:	891a      	ldrh	r2, [r3, #8]
 8000654:	1dfb      	adds	r3, r7, #7
 8000656:	781b      	ldrb	r3, [r3, #0]
 8000658:	b25b      	sxtb	r3, r3
 800065a:	3314      	adds	r3, #20
 800065c:	2101      	movs	r1, #1
 800065e:	4099      	lsls	r1, r3
 8000660:	000b      	movs	r3, r1
 8000662:	b29b      	uxth	r3, r3
 8000664:	4313      	orrs	r3, r2
 8000666:	b29a      	uxth	r2, r3
 8000668:	4b47      	ldr	r3, [pc, #284]	@ (8000788 <main+0x394>)
 800066a:	811a      	strh	r2, [r3, #8]
				  }
			  }
			  modbus_status = modbus_set_rx();
 800066c:	1dfc      	adds	r4, r7, #7
 800066e:	f000 fdf3 	bl	8001258 <modbus_set_rx>
 8000672:	0003      	movs	r3, r0
 8000674:	7023      	strb	r3, [r4, #0]
			  if(modbus_status != 0)
 8000676:	1dfb      	adds	r3, r7, #7
 8000678:	781b      	ldrb	r3, [r3, #0]
 800067a:	b25b      	sxtb	r3, r3
 800067c:	2b00      	cmp	r3, #0
 800067e:	d00d      	beq.n	800069c <main+0x2a8>
			  {
				  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status - 1) + MB_FATAL_ERROR);
 8000680:	4b41      	ldr	r3, [pc, #260]	@ (8000788 <main+0x394>)
 8000682:	891a      	ldrh	r2, [r3, #8]
 8000684:	1dfb      	adds	r3, r7, #7
 8000686:	781b      	ldrb	r3, [r3, #0]
 8000688:	b25b      	sxtb	r3, r3
 800068a:	3314      	adds	r3, #20
 800068c:	2101      	movs	r1, #1
 800068e:	4099      	lsls	r1, r3
 8000690:	000b      	movs	r3, r1
 8000692:	b29b      	uxth	r3, r3
 8000694:	4313      	orrs	r3, r2
 8000696:	b29a      	uxth	r2, r3
 8000698:	4b3b      	ldr	r3, [pc, #236]	@ (8000788 <main+0x394>)
 800069a:	811a      	strh	r2, [r3, #8]
			  }
		  }
		  modbus_status = monitor_modbus();
 800069c:	1dfc      	adds	r4, r7, #7
 800069e:	f000 fdfd 	bl	800129c <monitor_modbus>
 80006a2:	0003      	movs	r3, r0
 80006a4:	7023      	strb	r3, [r4, #0]
		  if(modbus_status != HAL_OK && modbus_status != HAL_BUSY)
 80006a6:	1dfb      	adds	r3, r7, #7
 80006a8:	781b      	ldrb	r3, [r3, #0]
 80006aa:	b25b      	sxtb	r3, r3
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	d100      	bne.n	80006b2 <main+0x2be>
 80006b0:	e088      	b.n	80007c4 <main+0x3d0>
 80006b2:	1dfb      	adds	r3, r7, #7
 80006b4:	781b      	ldrb	r3, [r3, #0]
 80006b6:	b25b      	sxtb	r3, r3
 80006b8:	2b02      	cmp	r3, #2
 80006ba:	d100      	bne.n	80006be <main+0x2ca>
 80006bc:	e082      	b.n	80007c4 <main+0x3d0>
		  {
			  switch(modbus_status)
 80006be:	1dfb      	adds	r3, r7, #7
 80006c0:	781b      	ldrb	r3, [r3, #0]
 80006c2:	b25b      	sxtb	r3, r3
 80006c4:	2b15      	cmp	r3, #21
 80006c6:	d052      	beq.n	800076e <main+0x37a>
 80006c8:	dd00      	ble.n	80006cc <main+0x2d8>
 80006ca:	e6b2      	b.n	8000432 <main+0x3e>
 80006cc:	2b14      	cmp	r3, #20
 80006ce:	d030      	beq.n	8000732 <main+0x33e>
 80006d0:	dd00      	ble.n	80006d4 <main+0x2e0>
 80006d2:	e6ae      	b.n	8000432 <main+0x3e>
 80006d4:	2b12      	cmp	r3, #18
 80006d6:	d000      	beq.n	80006da <main+0x2e6>
 80006d8:	e076      	b.n	80007c8 <main+0x3d4>
			  {
				  case MB_TX_TIMEOUT:
				  {
					  for(uint8_t i = 0; i < holding_register_database[MB_TRANSMIT_RETRIES]; i++)
 80006da:	1dbb      	adds	r3, r7, #6
 80006dc:	2200      	movs	r2, #0
 80006de:	701a      	strb	r2, [r3, #0]
 80006e0:	e01f      	b.n	8000722 <main+0x32e>
					  {
						  modbus_status = modbus_send(modbus_tx_len);
 80006e2:	1c7b      	adds	r3, r7, #1
 80006e4:	781b      	ldrb	r3, [r3, #0]
 80006e6:	1dfc      	adds	r4, r7, #7
 80006e8:	0018      	movs	r0, r3
 80006ea:	f000 fcf1 	bl	80010d0 <modbus_send>
 80006ee:	0003      	movs	r3, r0
 80006f0:	7023      	strb	r3, [r4, #0]
						  if(modbus_status != HAL_OK)
 80006f2:	1dfb      	adds	r3, r7, #7
 80006f4:	781b      	ldrb	r3, [r3, #0]
 80006f6:	b25b      	sxtb	r3, r3
 80006f8:	2b00      	cmp	r3, #0
 80006fa:	d00d      	beq.n	8000718 <main+0x324>
						  {
							  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status - 1) + MB_FATAL_ERROR);
 80006fc:	4b22      	ldr	r3, [pc, #136]	@ (8000788 <main+0x394>)
 80006fe:	891a      	ldrh	r2, [r3, #8]
 8000700:	1dfb      	adds	r3, r7, #7
 8000702:	781b      	ldrb	r3, [r3, #0]
 8000704:	b25b      	sxtb	r3, r3
 8000706:	3314      	adds	r3, #20
 8000708:	2101      	movs	r1, #1
 800070a:	4099      	lsls	r1, r3
 800070c:	000b      	movs	r3, r1
 800070e:	b29b      	uxth	r3, r3
 8000710:	4313      	orrs	r3, r2
 8000712:	b29a      	uxth	r2, r3
 8000714:	4b1c      	ldr	r3, [pc, #112]	@ (8000788 <main+0x394>)
 8000716:	811a      	strh	r2, [r3, #8]
					  for(uint8_t i = 0; i < holding_register_database[MB_TRANSMIT_RETRIES]; i++)
 8000718:	1dbb      	adds	r3, r7, #6
 800071a:	781a      	ldrb	r2, [r3, #0]
 800071c:	1dbb      	adds	r3, r7, #6
 800071e:	3201      	adds	r2, #1
 8000720:	701a      	strb	r2, [r3, #0]
 8000722:	1dbb      	adds	r3, r7, #6
 8000724:	781b      	ldrb	r3, [r3, #0]
 8000726:	b29a      	uxth	r2, r3
 8000728:	4b17      	ldr	r3, [pc, #92]	@ (8000788 <main+0x394>)
 800072a:	88db      	ldrh	r3, [r3, #6]
 800072c:	429a      	cmp	r2, r3
 800072e:	d3d8      	bcc.n	80006e2 <main+0x2ee>
						  }
					  }
					  break;
 8000730:	e04d      	b.n	80007ce <main+0x3da>
					  // Error only relates to Modbus Master Nodes
					  break;
				  }
				  case MB_UART_ERROR:
				  {
					  modbus_status = modbus_set_rx();
 8000732:	1dfc      	adds	r4, r7, #7
 8000734:	f000 fd90 	bl	8001258 <modbus_set_rx>
 8000738:	0003      	movs	r3, r0
 800073a:	7023      	strb	r3, [r4, #0]
					  if(modbus_status != 0)
 800073c:	1dfb      	adds	r3, r7, #7
 800073e:	781b      	ldrb	r3, [r3, #0]
 8000740:	b25b      	sxtb	r3, r3
 8000742:	2b00      	cmp	r3, #0
 8000744:	d042      	beq.n	80007cc <main+0x3d8>
					  {
						  holding_register_database[MB_ERRORS] |= 1U << ((modbus_status - 1) + MB_FATAL_ERROR);
 8000746:	4b10      	ldr	r3, [pc, #64]	@ (8000788 <main+0x394>)
 8000748:	891a      	ldrh	r2, [r3, #8]
 800074a:	1dfb      	adds	r3, r7, #7
 800074c:	781b      	ldrb	r3, [r3, #0]
 800074e:	b25b      	sxtb	r3, r3
 8000750:	3314      	adds	r3, #20
 8000752:	2101      	movs	r1, #1
 8000754:	4099      	lsls	r1, r3
 8000756:	000b      	movs	r3, r1
 8000758:	b29b      	uxth	r3, r3
 800075a:	4313      	orrs	r3, r2
 800075c:	b29a      	uxth	r2, r3
 800075e:	4b0a      	ldr	r3, [pc, #40]	@ (8000788 <main+0x394>)
 8000760:	811a      	strh	r2, [r3, #8]
					  }
					  break;
 8000762:	e033      	b.n	80007cc <main+0x3d8>
				  }
				  case MB_FATAL_ERROR:
				  {
					  while(modbus_status != HAL_OK)
					  {
						  modbus_status = modbus_reset();
 8000764:	1dfc      	adds	r4, r7, #7
 8000766:	f000 fd09 	bl	800117c <modbus_reset>
 800076a:	0003      	movs	r3, r0
 800076c:	7023      	strb	r3, [r4, #0]
					  while(modbus_status != HAL_OK)
 800076e:	1dfb      	adds	r3, r7, #7
 8000770:	781b      	ldrb	r3, [r3, #0]
 8000772:	b25b      	sxtb	r3, r3
 8000774:	2b00      	cmp	r3, #0
 8000776:	d1f5      	bne.n	8000764 <main+0x370>
					  }
					  break;
 8000778:	e029      	b.n	80007ce <main+0x3da>
 800077a:	46c0      	nop			@ (mov r8, r8)
 800077c:	2000018c 	.word	0x2000018c
 8000780:	20000190 	.word	0x20000190
 8000784:	50000400 	.word	0x50000400
 8000788:	20000000 	.word	0x20000000
 800078c:	20000188 	.word	0x20000188
			  }
		  }
	  }
	  else
	  {
		  if(!shutdown)
 8000790:	4b0f      	ldr	r3, [pc, #60]	@ (80007d0 <main+0x3dc>)
 8000792:	781b      	ldrb	r3, [r3, #0]
 8000794:	2b00      	cmp	r3, #0
 8000796:	d000      	beq.n	800079a <main+0x3a6>
 8000798:	e64b      	b.n	8000432 <main+0x3e>
		  {
			  // Shutdown the Modbus
			  int8_t status = modbus_shutdown();
 800079a:	1d7c      	adds	r4, r7, #5
 800079c:	f000 fe2e 	bl	80013fc <modbus_shutdown>
 80007a0:	0003      	movs	r3, r0
 80007a2:	7023      	strb	r3, [r4, #0]
			  {
				  // log error in a queue
			  }

			  // Set all GPIO pins high
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_SET);
 80007a4:	4b0b      	ldr	r3, [pc, #44]	@ (80007d4 <main+0x3e0>)
 80007a6:	2201      	movs	r2, #1
 80007a8:	2180      	movs	r1, #128	@ 0x80
 80007aa:	0018      	movs	r0, r3
 80007ac:	f002 f94d 	bl	8002a4a <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(RELAY_480_GPIO_Port, RELAY_480_Pin, GPIO_PIN_SET);
 80007b0:	4b08      	ldr	r3, [pc, #32]	@ (80007d4 <main+0x3e0>)
 80007b2:	2201      	movs	r2, #1
 80007b4:	2180      	movs	r1, #128	@ 0x80
 80007b6:	0018      	movs	r0, r3
 80007b8:	f002 f947 	bl	8002a4a <HAL_GPIO_WritePin>

			  // Ensure this code only executes once
			  shutdown = 1;
 80007bc:	4b04      	ldr	r3, [pc, #16]	@ (80007d0 <main+0x3dc>)
 80007be:	2201      	movs	r2, #1
 80007c0:	701a      	strb	r2, [r3, #0]
 80007c2:	e636      	b.n	8000432 <main+0x3e>
				  default:
 80007c4:	46c0      	nop			@ (mov r8, r8)
 80007c6:	e634      	b.n	8000432 <main+0x3e>
					  break;
 80007c8:	46c0      	nop			@ (mov r8, r8)
 80007ca:	e632      	b.n	8000432 <main+0x3e>
					  break;
 80007cc:	46c0      	nop			@ (mov r8, r8)
	  if(HAL_GPIO_ReadPin(MANUAL_GPIO_Port, MANUAL_Pin) == GPIO_PIN_SET)
 80007ce:	e630      	b.n	8000432 <main+0x3e>
 80007d0:	20000190 	.word	0x20000190
 80007d4:	50000400 	.word	0x50000400

080007d8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80007d8:	b590      	push	{r4, r7, lr}
 80007da:	b08f      	sub	sp, #60	@ 0x3c
 80007dc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80007de:	2418      	movs	r4, #24
 80007e0:	193b      	adds	r3, r7, r4
 80007e2:	0018      	movs	r0, r3
 80007e4:	2320      	movs	r3, #32
 80007e6:	001a      	movs	r2, r3
 80007e8:	2100      	movs	r1, #0
 80007ea:	f004 fc43 	bl	8005074 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007ee:	1d3b      	adds	r3, r7, #4
 80007f0:	0018      	movs	r0, r3
 80007f2:	2314      	movs	r3, #20
 80007f4:	001a      	movs	r2, r3
 80007f6:	2100      	movs	r1, #0
 80007f8:	f004 fc3c 	bl	8005074 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80007fc:	193b      	adds	r3, r7, r4
 80007fe:	2201      	movs	r2, #1
 8000800:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000802:	193b      	adds	r3, r7, r4
 8000804:	2280      	movs	r2, #128	@ 0x80
 8000806:	0252      	lsls	r2, r2, #9
 8000808:	605a      	str	r2, [r3, #4]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800080a:	193b      	adds	r3, r7, r4
 800080c:	0018      	movs	r0, r3
 800080e:	f002 f939 	bl	8002a84 <HAL_RCC_OscConfig>
 8000812:	1e03      	subs	r3, r0, #0
 8000814:	d001      	beq.n	800081a <SystemClock_Config+0x42>
  {
    Error_Handler();
 8000816:	f000 f911 	bl	8000a3c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800081a:	1d3b      	adds	r3, r7, #4
 800081c:	2207      	movs	r2, #7
 800081e:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 8000820:	1d3b      	adds	r3, r7, #4
 8000822:	2201      	movs	r2, #1
 8000824:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8000826:	1d3b      	adds	r3, r7, #4
 8000828:	2200      	movs	r2, #0
 800082a:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 800082c:	1d3b      	adds	r3, r7, #4
 800082e:	2200      	movs	r2, #0
 8000830:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 8000832:	1d3b      	adds	r3, r7, #4
 8000834:	2200      	movs	r2, #0
 8000836:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000838:	1d3b      	adds	r3, r7, #4
 800083a:	2100      	movs	r1, #0
 800083c:	0018      	movs	r0, r3
 800083e:	f002 fb47 	bl	8002ed0 <HAL_RCC_ClockConfig>
 8000842:	1e03      	subs	r3, r0, #0
 8000844:	d001      	beq.n	800084a <SystemClock_Config+0x72>
  {
    Error_Handler();
 8000846:	f000 f8f9 	bl	8000a3c <Error_Handler>
  }
}
 800084a:	46c0      	nop			@ (mov r8, r8)
 800084c:	46bd      	mov	sp, r7
 800084e:	b00f      	add	sp, #60	@ 0x3c
 8000850:	bd90      	pop	{r4, r7, pc}
	...

08000854 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000854:	b580      	push	{r7, lr}
 8000856:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000858:	4b24      	ldr	r3, [pc, #144]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 800085a:	4a25      	ldr	r2, [pc, #148]	@ (80008f0 <MX_USART1_UART_Init+0x9c>)
 800085c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 800085e:	4b23      	ldr	r3, [pc, #140]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 8000860:	2296      	movs	r2, #150	@ 0x96
 8000862:	0192      	lsls	r2, r2, #6
 8000864:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000866:	4b21      	ldr	r3, [pc, #132]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 8000868:	2200      	movs	r2, #0
 800086a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800086c:	4b1f      	ldr	r3, [pc, #124]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 800086e:	2200      	movs	r2, #0
 8000870:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000872:	4b1e      	ldr	r3, [pc, #120]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 8000874:	2200      	movs	r2, #0
 8000876:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000878:	4b1c      	ldr	r3, [pc, #112]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 800087a:	220c      	movs	r2, #12
 800087c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800087e:	4b1b      	ldr	r3, [pc, #108]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 8000880:	2200      	movs	r2, #0
 8000882:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000884:	4b19      	ldr	r3, [pc, #100]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 8000886:	2200      	movs	r2, #0
 8000888:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800088a:	4b18      	ldr	r3, [pc, #96]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 800088c:	2200      	movs	r2, #0
 800088e:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8000890:	4b16      	ldr	r3, [pc, #88]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 8000892:	2200      	movs	r2, #0
 8000894:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000896:	4b15      	ldr	r3, [pc, #84]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 8000898:	2200      	movs	r2, #0
 800089a:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_RS485Ex_Init(&huart1, UART_DE_POLARITY_HIGH, 0, 0) != HAL_OK)
 800089c:	4813      	ldr	r0, [pc, #76]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 800089e:	2300      	movs	r3, #0
 80008a0:	2200      	movs	r2, #0
 80008a2:	2100      	movs	r1, #0
 80008a4:	f004 f9da 	bl	8004c5c <HAL_RS485Ex_Init>
 80008a8:	1e03      	subs	r3, r0, #0
 80008aa:	d001      	beq.n	80008b0 <MX_USART1_UART_Init+0x5c>
  {
    Error_Handler();
 80008ac:	f000 f8c6 	bl	8000a3c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80008b0:	4b0e      	ldr	r3, [pc, #56]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 80008b2:	2100      	movs	r1, #0
 80008b4:	0018      	movs	r0, r3
 80008b6:	f004 fa95 	bl	8004de4 <HAL_UARTEx_SetTxFifoThreshold>
 80008ba:	1e03      	subs	r3, r0, #0
 80008bc:	d001      	beq.n	80008c2 <MX_USART1_UART_Init+0x6e>
  {
    Error_Handler();
 80008be:	f000 f8bd 	bl	8000a3c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80008c2:	4b0a      	ldr	r3, [pc, #40]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 80008c4:	2100      	movs	r1, #0
 80008c6:	0018      	movs	r0, r3
 80008c8:	f004 facc 	bl	8004e64 <HAL_UARTEx_SetRxFifoThreshold>
 80008cc:	1e03      	subs	r3, r0, #0
 80008ce:	d001      	beq.n	80008d4 <MX_USART1_UART_Init+0x80>
  {
    Error_Handler();
 80008d0:	f000 f8b4 	bl	8000a3c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 80008d4:	4b05      	ldr	r3, [pc, #20]	@ (80008ec <MX_USART1_UART_Init+0x98>)
 80008d6:	0018      	movs	r0, r3
 80008d8:	f004 fa4a 	bl	8004d70 <HAL_UARTEx_DisableFifoMode>
 80008dc:	1e03      	subs	r3, r0, #0
 80008de:	d001      	beq.n	80008e4 <MX_USART1_UART_Init+0x90>
  {
    Error_Handler();
 80008e0:	f000 f8ac 	bl	8000a3c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80008e4:	46c0      	nop			@ (mov r8, r8)
 80008e6:	46bd      	mov	sp, r7
 80008e8:	bd80      	pop	{r7, pc}
 80008ea:	46c0      	nop			@ (mov r8, r8)
 80008ec:	2000003c 	.word	0x2000003c
 80008f0:	40013800 	.word	0x40013800

080008f4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80008f4:	b580      	push	{r7, lr}
 80008f6:	b082      	sub	sp, #8
 80008f8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80008fa:	4b10      	ldr	r3, [pc, #64]	@ (800093c <MX_DMA_Init+0x48>)
 80008fc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80008fe:	4b0f      	ldr	r3, [pc, #60]	@ (800093c <MX_DMA_Init+0x48>)
 8000900:	2101      	movs	r1, #1
 8000902:	430a      	orrs	r2, r1
 8000904:	639a      	str	r2, [r3, #56]	@ 0x38
 8000906:	4b0d      	ldr	r3, [pc, #52]	@ (800093c <MX_DMA_Init+0x48>)
 8000908:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800090a:	2201      	movs	r2, #1
 800090c:	4013      	ands	r3, r2
 800090e:	607b      	str	r3, [r7, #4]
 8000910:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8000912:	2200      	movs	r2, #0
 8000914:	2100      	movs	r1, #0
 8000916:	2009      	movs	r0, #9
 8000918:	f001 fa3c 	bl	8001d94 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 800091c:	2009      	movs	r0, #9
 800091e:	f001 fa4e 	bl	8001dbe <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel2_3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 8000922:	2200      	movs	r2, #0
 8000924:	2100      	movs	r1, #0
 8000926:	200a      	movs	r0, #10
 8000928:	f001 fa34 	bl	8001d94 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 800092c:	200a      	movs	r0, #10
 800092e:	f001 fa46 	bl	8001dbe <HAL_NVIC_EnableIRQ>

}
 8000932:	46c0      	nop			@ (mov r8, r8)
 8000934:	46bd      	mov	sp, r7
 8000936:	b002      	add	sp, #8
 8000938:	bd80      	pop	{r7, pc}
 800093a:	46c0      	nop			@ (mov r8, r8)
 800093c:	40021000 	.word	0x40021000

08000940 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000940:	b590      	push	{r4, r7, lr}
 8000942:	b08b      	sub	sp, #44	@ 0x2c
 8000944:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000946:	2414      	movs	r4, #20
 8000948:	193b      	adds	r3, r7, r4
 800094a:	0018      	movs	r0, r3
 800094c:	2314      	movs	r3, #20
 800094e:	001a      	movs	r2, r3
 8000950:	2100      	movs	r1, #0
 8000952:	f004 fb8f 	bl	8005074 <memset>
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000956:	4b37      	ldr	r3, [pc, #220]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 8000958:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800095a:	4b36      	ldr	r3, [pc, #216]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 800095c:	2104      	movs	r1, #4
 800095e:	430a      	orrs	r2, r1
 8000960:	635a      	str	r2, [r3, #52]	@ 0x34
 8000962:	4b34      	ldr	r3, [pc, #208]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 8000964:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000966:	2204      	movs	r2, #4
 8000968:	4013      	ands	r3, r2
 800096a:	613b      	str	r3, [r7, #16]
 800096c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800096e:	4b31      	ldr	r3, [pc, #196]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 8000970:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000972:	4b30      	ldr	r3, [pc, #192]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 8000974:	2120      	movs	r1, #32
 8000976:	430a      	orrs	r2, r1
 8000978:	635a      	str	r2, [r3, #52]	@ 0x34
 800097a:	4b2e      	ldr	r3, [pc, #184]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 800097c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800097e:	2220      	movs	r2, #32
 8000980:	4013      	ands	r3, r2
 8000982:	60fb      	str	r3, [r7, #12]
 8000984:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000986:	4b2b      	ldr	r3, [pc, #172]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 8000988:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800098a:	4b2a      	ldr	r3, [pc, #168]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 800098c:	2102      	movs	r1, #2
 800098e:	430a      	orrs	r2, r1
 8000990:	635a      	str	r2, [r3, #52]	@ 0x34
 8000992:	4b28      	ldr	r3, [pc, #160]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 8000994:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000996:	2202      	movs	r2, #2
 8000998:	4013      	ands	r3, r2
 800099a:	60bb      	str	r3, [r7, #8]
 800099c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800099e:	4b25      	ldr	r3, [pc, #148]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 80009a0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80009a2:	4b24      	ldr	r3, [pc, #144]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 80009a4:	2101      	movs	r1, #1
 80009a6:	430a      	orrs	r2, r1
 80009a8:	635a      	str	r2, [r3, #52]	@ 0x34
 80009aa:	4b22      	ldr	r3, [pc, #136]	@ (8000a34 <MX_GPIO_Init+0xf4>)
 80009ac:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80009ae:	2201      	movs	r2, #1
 80009b0:	4013      	ands	r3, r2
 80009b2:	607b      	str	r3, [r7, #4]
 80009b4:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, RELAY_480_Pin|RELAY_120_Pin, GPIO_PIN_RESET);
 80009b6:	23c0      	movs	r3, #192	@ 0xc0
 80009b8:	005b      	lsls	r3, r3, #1
 80009ba:	481f      	ldr	r0, [pc, #124]	@ (8000a38 <MX_GPIO_Init+0xf8>)
 80009bc:	2200      	movs	r2, #0
 80009be:	0019      	movs	r1, r3
 80009c0:	f002 f843 	bl	8002a4a <HAL_GPIO_WritePin>

  /*Configure GPIO pins : SENSE_120_Pin ESTOP_SENSE_Pin */
  GPIO_InitStruct.Pin = SENSE_120_Pin|ESTOP_SENSE_Pin;
 80009c4:	193b      	adds	r3, r7, r4
 80009c6:	2282      	movs	r2, #130	@ 0x82
 80009c8:	0212      	lsls	r2, r2, #8
 80009ca:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80009cc:	193b      	adds	r3, r7, r4
 80009ce:	2200      	movs	r2, #0
 80009d0:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009d2:	193b      	adds	r3, r7, r4
 80009d4:	2200      	movs	r2, #0
 80009d6:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80009d8:	193b      	adds	r3, r7, r4
 80009da:	4a17      	ldr	r2, [pc, #92]	@ (8000a38 <MX_GPIO_Init+0xf8>)
 80009dc:	0019      	movs	r1, r3
 80009de:	0010      	movs	r0, r2
 80009e0:	f001 fdcc 	bl	800257c <HAL_GPIO_Init>

  /*Configure GPIO pin : MANUAL_Pin */
  GPIO_InitStruct.Pin = MANUAL_Pin;
 80009e4:	193b      	adds	r3, r7, r4
 80009e6:	2240      	movs	r2, #64	@ 0x40
 80009e8:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80009ea:	193b      	adds	r3, r7, r4
 80009ec:	2200      	movs	r2, #0
 80009ee:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80009f0:	193b      	adds	r3, r7, r4
 80009f2:	2201      	movs	r2, #1
 80009f4:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(MANUAL_GPIO_Port, &GPIO_InitStruct);
 80009f6:	193b      	adds	r3, r7, r4
 80009f8:	4a0f      	ldr	r2, [pc, #60]	@ (8000a38 <MX_GPIO_Init+0xf8>)
 80009fa:	0019      	movs	r1, r3
 80009fc:	0010      	movs	r0, r2
 80009fe:	f001 fdbd 	bl	800257c <HAL_GPIO_Init>

  /*Configure GPIO pins : RELAY_480_Pin RELAY_120_Pin */
  GPIO_InitStruct.Pin = RELAY_480_Pin|RELAY_120_Pin;
 8000a02:	0021      	movs	r1, r4
 8000a04:	187b      	adds	r3, r7, r1
 8000a06:	22c0      	movs	r2, #192	@ 0xc0
 8000a08:	0052      	lsls	r2, r2, #1
 8000a0a:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a0c:	187b      	adds	r3, r7, r1
 8000a0e:	2201      	movs	r2, #1
 8000a10:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a12:	187b      	adds	r3, r7, r1
 8000a14:	2200      	movs	r2, #0
 8000a16:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a18:	187b      	adds	r3, r7, r1
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a1e:	187b      	adds	r3, r7, r1
 8000a20:	4a05      	ldr	r2, [pc, #20]	@ (8000a38 <MX_GPIO_Init+0xf8>)
 8000a22:	0019      	movs	r1, r3
 8000a24:	0010      	movs	r0, r2
 8000a26:	f001 fda9 	bl	800257c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000a2a:	46c0      	nop			@ (mov r8, r8)
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	b00b      	add	sp, #44	@ 0x2c
 8000a30:	bd90      	pop	{r4, r7, pc}
 8000a32:	46c0      	nop			@ (mov r8, r8)
 8000a34:	40021000 	.word	0x40021000
 8000a38:	50000400 	.word	0x50000400

08000a3c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000a3c:	b580      	push	{r7, lr}
 8000a3e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000a40:	b672      	cpsid	i
}
 8000a42:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000a44:	46c0      	nop			@ (mov r8, r8)
 8000a46:	e7fd      	b.n	8000a44 <Error_Handler+0x8>

08000a48 <HAL_UARTEx_RxEventCallback>:

/*
 * Modbus reception handler function
 */
void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8000a48:	b590      	push	{r4, r7, lr}
 8000a4a:	b085      	sub	sp, #20
 8000a4c:	af00      	add	r7, sp, #0
 8000a4e:	6078      	str	r0, [r7, #4]
 8000a50:	000a      	movs	r2, r1
 8000a52:	1cbb      	adds	r3, r7, #2
 8000a54:	801a      	strh	r2, [r3, #0]
	if(huart->Instance == USART1)
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	681b      	ldr	r3, [r3, #0]
 8000a5a:	4a45      	ldr	r2, [pc, #276]	@ (8000b70 <HAL_UARTEx_RxEventCallback+0x128>)
 8000a5c:	4293      	cmp	r3, r2
 8000a5e:	d000      	beq.n	8000a62 <HAL_UARTEx_RxEventCallback+0x1a>
 8000a60:	e081      	b.n	8000b66 <HAL_UARTEx_RxEventCallback+0x11e>
	{
		chunk_start_i = chunk_end_i;  // Update the last position before copying new data
 8000a62:	4b44      	ldr	r3, [pc, #272]	@ (8000b74 <HAL_UARTEx_RxEventCallback+0x12c>)
 8000a64:	881b      	ldrh	r3, [r3, #0]
 8000a66:	b29a      	uxth	r2, r3
 8000a68:	4b43      	ldr	r3, [pc, #268]	@ (8000b78 <HAL_UARTEx_RxEventCallback+0x130>)
 8000a6a:	801a      	strh	r2, [r3, #0]
		/*
		 * If the data is large and it is about to exceed the buffer size, we have to route it to the start of the buffer
		 * This is to maintain the circular buffer
		 * The old data in the main buffer will be overlapped
		 */
		if (chunk_start_i + Size > MODBUS_RX_BUFFER_SIZE)  // If the current position + new data size is greater than the main buffer
 8000a6c:	4b42      	ldr	r3, [pc, #264]	@ (8000b78 <HAL_UARTEx_RxEventCallback+0x130>)
 8000a6e:	881b      	ldrh	r3, [r3, #0]
 8000a70:	b29b      	uxth	r3, r3
 8000a72:	001a      	movs	r2, r3
 8000a74:	1cbb      	adds	r3, r7, #2
 8000a76:	881b      	ldrh	r3, [r3, #0]
 8000a78:	18d2      	adds	r2, r2, r3
 8000a7a:	2380      	movs	r3, #128	@ 0x80
 8000a7c:	005b      	lsls	r3, r3, #1
 8000a7e:	429a      	cmp	r2, r3
 8000a80:	dd29      	ble.n	8000ad6 <HAL_UARTEx_RxEventCallback+0x8e>
		{
			uint16_t datatocopy = MODBUS_RX_BUFFER_SIZE - chunk_start_i;  // find out how much space is left in the main buffer
 8000a82:	4b3d      	ldr	r3, [pc, #244]	@ (8000b78 <HAL_UARTEx_RxEventCallback+0x130>)
 8000a84:	881b      	ldrh	r3, [r3, #0]
 8000a86:	b29a      	uxth	r2, r3
 8000a88:	240e      	movs	r4, #14
 8000a8a:	193b      	adds	r3, r7, r4
 8000a8c:	2180      	movs	r1, #128	@ 0x80
 8000a8e:	0049      	lsls	r1, r1, #1
 8000a90:	1a8a      	subs	r2, r1, r2
 8000a92:	801a      	strh	r2, [r3, #0]
			memcpy ((uint8_t *)(modbus_rx_buffer + chunk_start_i), rx_chunk, datatocopy);  // copy data in that remaining space
 8000a94:	4b38      	ldr	r3, [pc, #224]	@ (8000b78 <HAL_UARTEx_RxEventCallback+0x130>)
 8000a96:	881b      	ldrh	r3, [r3, #0]
 8000a98:	b29b      	uxth	r3, r3
 8000a9a:	001a      	movs	r2, r3
 8000a9c:	4b37      	ldr	r3, [pc, #220]	@ (8000b7c <HAL_UARTEx_RxEventCallback+0x134>)
 8000a9e:	18d0      	adds	r0, r2, r3
 8000aa0:	193b      	adds	r3, r7, r4
 8000aa2:	881a      	ldrh	r2, [r3, #0]
 8000aa4:	4b36      	ldr	r3, [pc, #216]	@ (8000b80 <HAL_UARTEx_RxEventCallback+0x138>)
 8000aa6:	0019      	movs	r1, r3
 8000aa8:	f004 fb10 	bl	80050cc <memcpy>

			chunk_end_i = (Size - datatocopy);  // update the position
 8000aac:	1cba      	adds	r2, r7, #2
 8000aae:	193b      	adds	r3, r7, r4
 8000ab0:	8812      	ldrh	r2, [r2, #0]
 8000ab2:	881b      	ldrh	r3, [r3, #0]
 8000ab4:	1ad3      	subs	r3, r2, r3
 8000ab6:	b29a      	uxth	r2, r3
 8000ab8:	4b2e      	ldr	r3, [pc, #184]	@ (8000b74 <HAL_UARTEx_RxEventCallback+0x12c>)
 8000aba:	801a      	strh	r2, [r3, #0]
			memcpy ((uint8_t *)modbus_rx_buffer, (uint8_t *)(rx_chunk + datatocopy), chunk_end_i);  // copy the remaining data
 8000abc:	193b      	adds	r3, r7, r4
 8000abe:	881a      	ldrh	r2, [r3, #0]
 8000ac0:	4b2f      	ldr	r3, [pc, #188]	@ (8000b80 <HAL_UARTEx_RxEventCallback+0x138>)
 8000ac2:	18d1      	adds	r1, r2, r3
 8000ac4:	4b2b      	ldr	r3, [pc, #172]	@ (8000b74 <HAL_UARTEx_RxEventCallback+0x12c>)
 8000ac6:	881b      	ldrh	r3, [r3, #0]
 8000ac8:	b29b      	uxth	r3, r3
 8000aca:	001a      	movs	r2, r3
 8000acc:	4b2b      	ldr	r3, [pc, #172]	@ (8000b7c <HAL_UARTEx_RxEventCallback+0x134>)
 8000ace:	0018      	movs	r0, r3
 8000ad0:	f004 fafc 	bl	80050cc <memcpy>
 8000ad4:	e014      	b.n	8000b00 <HAL_UARTEx_RxEventCallback+0xb8>
		 * If the current position + new data size is less than the main buffer
		 * we will simply copy the data into the buffer and update the position
		 */
		else
		{
			memcpy ((uint8_t *)(modbus_rx_buffer + chunk_start_i), rx_chunk, Size);
 8000ad6:	4b28      	ldr	r3, [pc, #160]	@ (8000b78 <HAL_UARTEx_RxEventCallback+0x130>)
 8000ad8:	881b      	ldrh	r3, [r3, #0]
 8000ada:	b29b      	uxth	r3, r3
 8000adc:	001a      	movs	r2, r3
 8000ade:	4b27      	ldr	r3, [pc, #156]	@ (8000b7c <HAL_UARTEx_RxEventCallback+0x134>)
 8000ae0:	18d0      	adds	r0, r2, r3
 8000ae2:	1cbb      	adds	r3, r7, #2
 8000ae4:	881a      	ldrh	r2, [r3, #0]
 8000ae6:	4b26      	ldr	r3, [pc, #152]	@ (8000b80 <HAL_UARTEx_RxEventCallback+0x138>)
 8000ae8:	0019      	movs	r1, r3
 8000aea:	f004 faef 	bl	80050cc <memcpy>
			chunk_end_i = Size + chunk_start_i;
 8000aee:	4b22      	ldr	r3, [pc, #136]	@ (8000b78 <HAL_UARTEx_RxEventCallback+0x130>)
 8000af0:	881b      	ldrh	r3, [r3, #0]
 8000af2:	b29a      	uxth	r2, r3
 8000af4:	1cbb      	adds	r3, r7, #2
 8000af6:	881b      	ldrh	r3, [r3, #0]
 8000af8:	18d3      	adds	r3, r2, r3
 8000afa:	b29a      	uxth	r2, r3
 8000afc:	4b1d      	ldr	r3, [pc, #116]	@ (8000b74 <HAL_UARTEx_RxEventCallback+0x12c>)
 8000afe:	801a      	strh	r2, [r3, #0]
		}

		if(modbus_header)
 8000b00:	4b20      	ldr	r3, [pc, #128]	@ (8000b84 <HAL_UARTEx_RxEventCallback+0x13c>)
 8000b02:	881b      	ldrh	r3, [r3, #0]
 8000b04:	b29b      	uxth	r3, r3
 8000b06:	2b00      	cmp	r3, #0
 8000b08:	d027      	beq.n	8000b5a <HAL_UARTEx_RxEventCallback+0x112>
		{
			// Log the time for chunk miss error handling
			chunk_time = HAL_GetTick();
 8000b0a:	f001 f847 	bl	8001b9c <HAL_GetTick>
 8000b0e:	0002      	movs	r2, r0
 8000b10:	4b1d      	ldr	r3, [pc, #116]	@ (8000b88 <HAL_UARTEx_RxEventCallback+0x140>)
 8000b12:	601a      	str	r2, [r3, #0]

			start_index = chunk_start_i;
 8000b14:	4b18      	ldr	r3, [pc, #96]	@ (8000b78 <HAL_UARTEx_RxEventCallback+0x130>)
 8000b16:	881b      	ldrh	r3, [r3, #0]
 8000b18:	b29a      	uxth	r2, r3
 8000b1a:	4b1c      	ldr	r3, [pc, #112]	@ (8000b8c <HAL_UARTEx_RxEventCallback+0x144>)
 8000b1c:	801a      	strh	r2, [r3, #0]
			modbus_header = 0;
 8000b1e:	4b19      	ldr	r3, [pc, #100]	@ (8000b84 <HAL_UARTEx_RxEventCallback+0x13c>)
 8000b20:	2200      	movs	r2, #0
 8000b22:	801a      	strh	r2, [r3, #0]

			// Setup the DMA to receive the # message bytes + crc + 1 in the event that the # bytes is in the message
			HAL_UARTEx_ReceiveToIdle_DMA(&huart1, rx_chunk, (uint16_t)(((rx_chunk[4] << 8) | rx_chunk[5])*2 + 2 + 1));
 8000b24:	4b16      	ldr	r3, [pc, #88]	@ (8000b80 <HAL_UARTEx_RxEventCallback+0x138>)
 8000b26:	791b      	ldrb	r3, [r3, #4]
 8000b28:	021b      	lsls	r3, r3, #8
 8000b2a:	4a15      	ldr	r2, [pc, #84]	@ (8000b80 <HAL_UARTEx_RxEventCallback+0x138>)
 8000b2c:	7952      	ldrb	r2, [r2, #5]
 8000b2e:	4313      	orrs	r3, r2
 8000b30:	b29b      	uxth	r3, r3
 8000b32:	3301      	adds	r3, #1
 8000b34:	b29b      	uxth	r3, r3
 8000b36:	18db      	adds	r3, r3, r3
 8000b38:	b29b      	uxth	r3, r3
 8000b3a:	3301      	adds	r3, #1
 8000b3c:	b29a      	uxth	r2, r3
 8000b3e:	4910      	ldr	r1, [pc, #64]	@ (8000b80 <HAL_UARTEx_RxEventCallback+0x138>)
 8000b40:	4b13      	ldr	r3, [pc, #76]	@ (8000b90 <HAL_UARTEx_RxEventCallback+0x148>)
 8000b42:	0018      	movs	r0, r3
 8000b44:	f004 f9d0 	bl	8004ee8 <HAL_UARTEx_ReceiveToIdle_DMA>
			__HAL_DMA_DISABLE_IT(&hdma_usart1_rx, DMA_IT_HT);
 8000b48:	4b12      	ldr	r3, [pc, #72]	@ (8000b94 <HAL_UARTEx_RxEventCallback+0x14c>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	681a      	ldr	r2, [r3, #0]
 8000b4e:	4b11      	ldr	r3, [pc, #68]	@ (8000b94 <HAL_UARTEx_RxEventCallback+0x14c>)
 8000b50:	681b      	ldr	r3, [r3, #0]
 8000b52:	2104      	movs	r1, #4
 8000b54:	438a      	bics	r2, r1
 8000b56:	601a      	str	r2, [r3, #0]
			 */
			modbus_header = 1;
			uart_rx_int = 1;
		}
	}
}
 8000b58:	e005      	b.n	8000b66 <HAL_UARTEx_RxEventCallback+0x11e>
			modbus_header = 1;
 8000b5a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b84 <HAL_UARTEx_RxEventCallback+0x13c>)
 8000b5c:	2201      	movs	r2, #1
 8000b5e:	801a      	strh	r2, [r3, #0]
			uart_rx_int = 1;
 8000b60:	4b0d      	ldr	r3, [pc, #52]	@ (8000b98 <HAL_UARTEx_RxEventCallback+0x150>)
 8000b62:	2201      	movs	r2, #1
 8000b64:	701a      	strb	r2, [r3, #0]
}
 8000b66:	46c0      	nop			@ (mov r8, r8)
 8000b68:	46bd      	mov	sp, r7
 8000b6a:	b005      	add	sp, #20
 8000b6c:	bd90      	pop	{r4, r7, pc}
 8000b6e:	46c0      	nop			@ (mov r8, r8)
 8000b70:	40013800 	.word	0x40013800
 8000b74:	2000049c 	.word	0x2000049c
 8000b78:	2000049a 	.word	0x2000049a
 8000b7c:	20000194 	.word	0x20000194
 8000b80:	20000394 	.word	0x20000394
 8000b84:	20000010 	.word	0x20000010
 8000b88:	20000494 	.word	0x20000494
 8000b8c:	20000498 	.word	0x20000498
 8000b90:	2000003c 	.word	0x2000003c
 8000b94:	200000d0 	.word	0x200000d0
 8000b98:	2000049e 	.word	0x2000049e

08000b9c <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	b082      	sub	sp, #8
 8000ba0:	af00      	add	r7, sp, #0
 8000ba2:	6078      	str	r0, [r7, #4]
	uart_tx_int = 1;
 8000ba4:	4b03      	ldr	r3, [pc, #12]	@ (8000bb4 <HAL_UART_TxCpltCallback+0x18>)
 8000ba6:	2201      	movs	r2, #1
 8000ba8:	701a      	strb	r2, [r3, #0]
}
 8000baa:	46c0      	nop			@ (mov r8, r8)
 8000bac:	46bd      	mov	sp, r7
 8000bae:	b002      	add	sp, #8
 8000bb0:	bd80      	pop	{r7, pc}
 8000bb2:	46c0      	nop			@ (mov r8, r8)
 8000bb4:	20000012 	.word	0x20000012

08000bb8 <HAL_UART_ErrorCallback>:

void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b082      	sub	sp, #8
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	6078      	str	r0, [r7, #4]
	uart_err_int = 1;
 8000bc0:	4b07      	ldr	r3, [pc, #28]	@ (8000be0 <HAL_UART_ErrorCallback+0x28>)
 8000bc2:	2201      	movs	r2, #1
 8000bc4:	701a      	strb	r2, [r3, #0]
	__HAL_UART_DISABLE_IT(&huart1, UART_IT_MASK);
 8000bc6:	4b07      	ldr	r3, [pc, #28]	@ (8000be4 <HAL_UART_ErrorCallback+0x2c>)
 8000bc8:	681b      	ldr	r3, [r3, #0]
 8000bca:	689a      	ldr	r2, [r3, #8]
 8000bcc:	4b05      	ldr	r3, [pc, #20]	@ (8000be4 <HAL_UART_ErrorCallback+0x2c>)
 8000bce:	681b      	ldr	r3, [r3, #0]
 8000bd0:	0052      	lsls	r2, r2, #1
 8000bd2:	0852      	lsrs	r2, r2, #1
 8000bd4:	609a      	str	r2, [r3, #8]
}
 8000bd6:	46c0      	nop			@ (mov r8, r8)
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	b002      	add	sp, #8
 8000bdc:	bd80      	pop	{r7, pc}
 8000bde:	46c0      	nop			@ (mov r8, r8)
 8000be0:	2000049f 	.word	0x2000049f
 8000be4:	2000003c 	.word	0x2000003c

08000be8 <modbus_rx>:

// Modbus Slave Functions ---------------------------------------------------------------------

#ifdef MB_SLAVE
uint8_t modbus_rx()
{
 8000be8:	b580      	push	{r7, lr}
 8000bea:	af00      	add	r7, sp, #0
	if(uart_rx_int)
 8000bec:	4b06      	ldr	r3, [pc, #24]	@ (8000c08 <modbus_rx+0x20>)
 8000bee:	781b      	ldrb	r3, [r3, #0]
 8000bf0:	b2db      	uxtb	r3, r3
 8000bf2:	2b00      	cmp	r3, #0
 8000bf4:	d004      	beq.n	8000c00 <modbus_rx+0x18>
	{
		uart_rx_int = 0;
 8000bf6:	4b04      	ldr	r3, [pc, #16]	@ (8000c08 <modbus_rx+0x20>)
 8000bf8:	2200      	movs	r2, #0
 8000bfa:	701a      	strb	r2, [r3, #0]
		return 1;
 8000bfc:	2301      	movs	r3, #1
 8000bfe:	e000      	b.n	8000c02 <modbus_rx+0x1a>
	}
	return 0;
 8000c00:	2300      	movs	r3, #0
}
 8000c02:	0018      	movs	r0, r3
 8000c04:	46bd      	mov	sp, r7
 8000c06:	bd80      	pop	{r7, pc}
 8000c08:	2000049e 	.word	0x2000049e

08000c0c <return_holding_registers>:

int8_t return_holding_registers(uint8_t* tx_len)
{
 8000c0c:	b5b0      	push	{r4, r5, r7, lr}
 8000c0e:	b084      	sub	sp, #16
 8000c10:	af00      	add	r7, sp, #0
 8000c12:	6078      	str	r0, [r7, #4]
	(*tx_len) = 0;
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	2200      	movs	r2, #0
 8000c18:	701a      	strb	r2, [r3, #0]
	// Handle Error Checking
	uint16_t first_register_address = (get_rx_buffer(2) << 8) | get_rx_buffer(3);
 8000c1a:	2002      	movs	r0, #2
 8000c1c:	f000 fc9a 	bl	8001554 <get_rx_buffer>
 8000c20:	0003      	movs	r3, r0
 8000c22:	021b      	lsls	r3, r3, #8
 8000c24:	b21c      	sxth	r4, r3
 8000c26:	2003      	movs	r0, #3
 8000c28:	f000 fc94 	bl	8001554 <get_rx_buffer>
 8000c2c:	0003      	movs	r3, r0
 8000c2e:	b21b      	sxth	r3, r3
 8000c30:	4323      	orrs	r3, r4
 8000c32:	b21a      	sxth	r2, r3
 8000c34:	230c      	movs	r3, #12
 8000c36:	18fb      	adds	r3, r7, r3
 8000c38:	801a      	strh	r2, [r3, #0]

	// Get the number of registers requested by the master
	uint16_t num_registers = (get_rx_buffer(4) << 8) | get_rx_buffer(5);
 8000c3a:	2004      	movs	r0, #4
 8000c3c:	f000 fc8a 	bl	8001554 <get_rx_buffer>
 8000c40:	0003      	movs	r3, r0
 8000c42:	021b      	lsls	r3, r3, #8
 8000c44:	b21c      	sxth	r4, r3
 8000c46:	2005      	movs	r0, #5
 8000c48:	f000 fc84 	bl	8001554 <get_rx_buffer>
 8000c4c:	0003      	movs	r3, r0
 8000c4e:	b21b      	sxth	r3, r3
 8000c50:	4323      	orrs	r3, r4
 8000c52:	b21a      	sxth	r2, r3
 8000c54:	210a      	movs	r1, #10
 8000c56:	187b      	adds	r3, r7, r1
 8000c58:	801a      	strh	r2, [r3, #0]

	if(num_registers > RX_BUFFER_SIZE || num_registers < 1) // 125 is the limit according to modbus protocol
 8000c5a:	000a      	movs	r2, r1
 8000c5c:	18bb      	adds	r3, r7, r2
 8000c5e:	881b      	ldrh	r3, [r3, #0]
 8000c60:	2b7d      	cmp	r3, #125	@ 0x7d
 8000c62:	d803      	bhi.n	8000c6c <return_holding_registers+0x60>
 8000c64:	18bb      	adds	r3, r7, r2
 8000c66:	881b      	ldrh	r3, [r3, #0]
 8000c68:	2b00      	cmp	r3, #0
 8000c6a:	d104      	bne.n	8000c76 <return_holding_registers+0x6a>
	{
		return modbus_exception(MB_ILLEGAL_DATA_VALUE);
 8000c6c:	2006      	movs	r0, #6
 8000c6e:	f000 f97b 	bl	8000f68 <modbus_exception>
 8000c72:	0003      	movs	r3, r0
 8000c74:	e06e      	b.n	8000d54 <return_holding_registers+0x148>
	}

	uint16_t last_register_address = first_register_address + (num_registers - 1);
 8000c76:	230a      	movs	r3, #10
 8000c78:	18fa      	adds	r2, r7, r3
 8000c7a:	230c      	movs	r3, #12
 8000c7c:	18fb      	adds	r3, r7, r3
 8000c7e:	8812      	ldrh	r2, [r2, #0]
 8000c80:	881b      	ldrh	r3, [r3, #0]
 8000c82:	18d3      	adds	r3, r2, r3
 8000c84:	b29a      	uxth	r2, r3
 8000c86:	2108      	movs	r1, #8
 8000c88:	187b      	adds	r3, r7, r1
 8000c8a:	3a01      	subs	r2, #1
 8000c8c:	801a      	strh	r2, [r3, #0]

	if(last_register_address > NUM_HOLDING_REGISTERS)
 8000c8e:	187b      	adds	r3, r7, r1
 8000c90:	881b      	ldrh	r3, [r3, #0]
 8000c92:	2b08      	cmp	r3, #8
 8000c94:	d904      	bls.n	8000ca0 <return_holding_registers+0x94>
	{
		return modbus_exception(MB_ILLEGAL_DATA_ADDRESS);
 8000c96:	2005      	movs	r0, #5
 8000c98:	f000 f966 	bl	8000f68 <modbus_exception>
 8000c9c:	0003      	movs	r3, r0
 8000c9e:	e059      	b.n	8000d54 <return_holding_registers+0x148>
	}

	// Return register values

	modbus_tx_buffer[0] = get_rx_buffer(0); // Append Slave id
 8000ca0:	2000      	movs	r0, #0
 8000ca2:	f000 fc57 	bl	8001554 <get_rx_buffer>
 8000ca6:	0003      	movs	r3, r0
 8000ca8:	001a      	movs	r2, r3
 8000caa:	4b2c      	ldr	r3, [pc, #176]	@ (8000d5c <return_holding_registers+0x150>)
 8000cac:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[1] = get_rx_buffer(1); // Append Function Code
 8000cae:	2001      	movs	r0, #1
 8000cb0:	f000 fc50 	bl	8001554 <get_rx_buffer>
 8000cb4:	0003      	movs	r3, r0
 8000cb6:	001a      	movs	r2, r3
 8000cb8:	4b28      	ldr	r3, [pc, #160]	@ (8000d5c <return_holding_registers+0x150>)
 8000cba:	705a      	strb	r2, [r3, #1]
	modbus_tx_buffer[2] = num_registers * 2; // Append number of bytes
 8000cbc:	230a      	movs	r3, #10
 8000cbe:	18fb      	adds	r3, r7, r3
 8000cc0:	881b      	ldrh	r3, [r3, #0]
 8000cc2:	b2db      	uxtb	r3, r3
 8000cc4:	18db      	adds	r3, r3, r3
 8000cc6:	b2da      	uxtb	r2, r3
 8000cc8:	4b24      	ldr	r3, [pc, #144]	@ (8000d5c <return_holding_registers+0x150>)
 8000cca:	709a      	strb	r2, [r3, #2]
	(*tx_len) = 3;
 8000ccc:	687b      	ldr	r3, [r7, #4]
 8000cce:	2203      	movs	r2, #3
 8000cd0:	701a      	strb	r2, [r3, #0]

	// Append the Register Values
	for(uint8_t i = 0; i < num_registers; i++)
 8000cd2:	230f      	movs	r3, #15
 8000cd4:	18fb      	adds	r3, r7, r3
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	701a      	strb	r2, [r3, #0]
 8000cda:	e02c      	b.n	8000d36 <return_holding_registers+0x12a>
	{
		modbus_tx_buffer[(*tx_len)++] = high_byte(holding_register_database[first_register_address + i]);
 8000cdc:	250c      	movs	r5, #12
 8000cde:	197b      	adds	r3, r7, r5
 8000ce0:	881a      	ldrh	r2, [r3, #0]
 8000ce2:	240f      	movs	r4, #15
 8000ce4:	193b      	adds	r3, r7, r4
 8000ce6:	781b      	ldrb	r3, [r3, #0]
 8000ce8:	18d2      	adds	r2, r2, r3
 8000cea:	4b1d      	ldr	r3, [pc, #116]	@ (8000d60 <return_holding_registers+0x154>)
 8000cec:	0052      	lsls	r2, r2, #1
 8000cee:	5ad3      	ldrh	r3, [r2, r3]
 8000cf0:	0a1b      	lsrs	r3, r3, #8
 8000cf2:	b299      	uxth	r1, r3
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	781b      	ldrb	r3, [r3, #0]
 8000cf8:	1c5a      	adds	r2, r3, #1
 8000cfa:	b2d0      	uxtb	r0, r2
 8000cfc:	687a      	ldr	r2, [r7, #4]
 8000cfe:	7010      	strb	r0, [r2, #0]
 8000d00:	001a      	movs	r2, r3
 8000d02:	b2c9      	uxtb	r1, r1
 8000d04:	4b15      	ldr	r3, [pc, #84]	@ (8000d5c <return_holding_registers+0x150>)
 8000d06:	5499      	strb	r1, [r3, r2]
		modbus_tx_buffer[(*tx_len)++] = low_byte(holding_register_database[first_register_address + i]);
 8000d08:	197b      	adds	r3, r7, r5
 8000d0a:	881a      	ldrh	r2, [r3, #0]
 8000d0c:	193b      	adds	r3, r7, r4
 8000d0e:	781b      	ldrb	r3, [r3, #0]
 8000d10:	18d2      	adds	r2, r2, r3
 8000d12:	4b13      	ldr	r3, [pc, #76]	@ (8000d60 <return_holding_registers+0x154>)
 8000d14:	0052      	lsls	r2, r2, #1
 8000d16:	5ad1      	ldrh	r1, [r2, r3]
 8000d18:	687b      	ldr	r3, [r7, #4]
 8000d1a:	781b      	ldrb	r3, [r3, #0]
 8000d1c:	1c5a      	adds	r2, r3, #1
 8000d1e:	b2d0      	uxtb	r0, r2
 8000d20:	687a      	ldr	r2, [r7, #4]
 8000d22:	7010      	strb	r0, [r2, #0]
 8000d24:	001a      	movs	r2, r3
 8000d26:	b2c9      	uxtb	r1, r1
 8000d28:	4b0c      	ldr	r3, [pc, #48]	@ (8000d5c <return_holding_registers+0x150>)
 8000d2a:	5499      	strb	r1, [r3, r2]
	for(uint8_t i = 0; i < num_registers; i++)
 8000d2c:	193b      	adds	r3, r7, r4
 8000d2e:	781a      	ldrb	r2, [r3, #0]
 8000d30:	193b      	adds	r3, r7, r4
 8000d32:	3201      	adds	r2, #1
 8000d34:	701a      	strb	r2, [r3, #0]
 8000d36:	230f      	movs	r3, #15
 8000d38:	18fb      	adds	r3, r7, r3
 8000d3a:	781b      	ldrb	r3, [r3, #0]
 8000d3c:	b29b      	uxth	r3, r3
 8000d3e:	220a      	movs	r2, #10
 8000d40:	18ba      	adds	r2, r7, r2
 8000d42:	8812      	ldrh	r2, [r2, #0]
 8000d44:	429a      	cmp	r2, r3
 8000d46:	d8c9      	bhi.n	8000cdc <return_holding_registers+0xd0>
	}

	return modbus_send((*tx_len));
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	781b      	ldrb	r3, [r3, #0]
 8000d4c:	0018      	movs	r0, r3
 8000d4e:	f000 f9bf 	bl	80010d0 <modbus_send>
 8000d52:	0003      	movs	r3, r0
}
 8000d54:	0018      	movs	r0, r3
 8000d56:	46bd      	mov	sp, r7
 8000d58:	b004      	add	sp, #16
 8000d5a:	bdb0      	pop	{r4, r5, r7, pc}
 8000d5c:	20000294 	.word	0x20000294
 8000d60:	20000000 	.word	0x20000000

08000d64 <edit_multiple_registers>:

int8_t edit_multiple_registers(uint8_t *tx_len)
{
 8000d64:	b5b0      	push	{r4, r5, r7, lr}
 8000d66:	b086      	sub	sp, #24
 8000d68:	af00      	add	r7, sp, #0
 8000d6a:	6078      	str	r0, [r7, #4]
	(*tx_len) = 0;
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	2200      	movs	r2, #0
 8000d70:	701a      	strb	r2, [r3, #0]
	// Handle Error Checking
	uint16_t first_register_address = (get_rx_buffer(2) << 8) | get_rx_buffer(3);
 8000d72:	2002      	movs	r0, #2
 8000d74:	f000 fbee 	bl	8001554 <get_rx_buffer>
 8000d78:	0003      	movs	r3, r0
 8000d7a:	021b      	lsls	r3, r3, #8
 8000d7c:	b21c      	sxth	r4, r3
 8000d7e:	2003      	movs	r0, #3
 8000d80:	f000 fbe8 	bl	8001554 <get_rx_buffer>
 8000d84:	0003      	movs	r3, r0
 8000d86:	b21b      	sxth	r3, r3
 8000d88:	4323      	orrs	r3, r4
 8000d8a:	b21a      	sxth	r2, r3
 8000d8c:	2314      	movs	r3, #20
 8000d8e:	18fb      	adds	r3, r7, r3
 8000d90:	801a      	strh	r2, [r3, #0]

	uint16_t num_registers = (get_rx_buffer(4) << 8) | get_rx_buffer(5);
 8000d92:	2004      	movs	r0, #4
 8000d94:	f000 fbde 	bl	8001554 <get_rx_buffer>
 8000d98:	0003      	movs	r3, r0
 8000d9a:	021b      	lsls	r3, r3, #8
 8000d9c:	b21c      	sxth	r4, r3
 8000d9e:	2005      	movs	r0, #5
 8000da0:	f000 fbd8 	bl	8001554 <get_rx_buffer>
 8000da4:	0003      	movs	r3, r0
 8000da6:	b21b      	sxth	r3, r3
 8000da8:	4323      	orrs	r3, r4
 8000daa:	b21a      	sxth	r2, r3
 8000dac:	2112      	movs	r1, #18
 8000dae:	187b      	adds	r3, r7, r1
 8000db0:	801a      	strh	r2, [r3, #0]

	if(num_registers > 125 || num_registers < 1) // 125 is the limit according to modbus protocol
 8000db2:	000a      	movs	r2, r1
 8000db4:	18bb      	adds	r3, r7, r2
 8000db6:	881b      	ldrh	r3, [r3, #0]
 8000db8:	2b7d      	cmp	r3, #125	@ 0x7d
 8000dba:	d803      	bhi.n	8000dc4 <edit_multiple_registers+0x60>
 8000dbc:	18bb      	adds	r3, r7, r2
 8000dbe:	881b      	ldrh	r3, [r3, #0]
 8000dc0:	2b00      	cmp	r3, #0
 8000dc2:	d104      	bne.n	8000dce <edit_multiple_registers+0x6a>
	{
		return modbus_exception(MB_ILLEGAL_DATA_VALUE);
 8000dc4:	2006      	movs	r0, #6
 8000dc6:	f000 f8cf 	bl	8000f68 <modbus_exception>
 8000dca:	0003      	movs	r3, r0
 8000dcc:	e0c3      	b.n	8000f56 <edit_multiple_registers+0x1f2>
	}

	uint16_t last_register_address = first_register_address + (num_registers - 1);
 8000dce:	2312      	movs	r3, #18
 8000dd0:	18fa      	adds	r2, r7, r3
 8000dd2:	2314      	movs	r3, #20
 8000dd4:	18fb      	adds	r3, r7, r3
 8000dd6:	8812      	ldrh	r2, [r2, #0]
 8000dd8:	881b      	ldrh	r3, [r3, #0]
 8000dda:	18d3      	adds	r3, r2, r3
 8000ddc:	b29a      	uxth	r2, r3
 8000dde:	2110      	movs	r1, #16
 8000de0:	187b      	adds	r3, r7, r1
 8000de2:	3a01      	subs	r2, #1
 8000de4:	801a      	strh	r2, [r3, #0]

	if(last_register_address > NUM_HOLDING_REGISTERS)
 8000de6:	187b      	adds	r3, r7, r1
 8000de8:	881b      	ldrh	r3, [r3, #0]
 8000dea:	2b08      	cmp	r3, #8
 8000dec:	d904      	bls.n	8000df8 <edit_multiple_registers+0x94>
	{
		return modbus_exception(MB_ILLEGAL_DATA_ADDRESS);
 8000dee:	2005      	movs	r0, #5
 8000df0:	f000 f8ba 	bl	8000f68 <modbus_exception>
 8000df4:	0003      	movs	r3, r0
 8000df6:	e0ae      	b.n	8000f56 <edit_multiple_registers+0x1f2>
	}

	// Protect Read only values
	if(((first_register_address >= GPIO_READ) && (first_register_address <= GPIO_READ)) ||
 8000df8:	2214      	movs	r2, #20
 8000dfa:	18bb      	adds	r3, r7, r2
 8000dfc:	881b      	ldrh	r3, [r3, #0]
 8000dfe:	2b04      	cmp	r3, #4
 8000e00:	d903      	bls.n	8000e0a <edit_multiple_registers+0xa6>
 8000e02:	18bb      	adds	r3, r7, r2
 8000e04:	881b      	ldrh	r3, [r3, #0]
 8000e06:	2b05      	cmp	r3, #5
 8000e08:	d912      	bls.n	8000e30 <edit_multiple_registers+0xcc>
 8000e0a:	2210      	movs	r2, #16
 8000e0c:	18bb      	adds	r3, r7, r2
 8000e0e:	881b      	ldrh	r3, [r3, #0]
 8000e10:	2b04      	cmp	r3, #4
 8000e12:	d903      	bls.n	8000e1c <edit_multiple_registers+0xb8>
		 ((last_register_address >= GPIO_READ) && (last_register_address <= GPIO_READ)) ||
 8000e14:	18bb      	adds	r3, r7, r2
 8000e16:	881b      	ldrh	r3, [r3, #0]
 8000e18:	2b05      	cmp	r3, #5
 8000e1a:	d909      	bls.n	8000e30 <edit_multiple_registers+0xcc>
 8000e1c:	2314      	movs	r3, #20
 8000e1e:	18fb      	adds	r3, r7, r3
 8000e20:	881b      	ldrh	r3, [r3, #0]
 8000e22:	2b04      	cmp	r3, #4
 8000e24:	d809      	bhi.n	8000e3a <edit_multiple_registers+0xd6>
		 ((first_register_address < GPIO_READ  && last_register_address > GPIO_READ)))
 8000e26:	2310      	movs	r3, #16
 8000e28:	18fb      	adds	r3, r7, r3
 8000e2a:	881b      	ldrh	r3, [r3, #0]
 8000e2c:	2b05      	cmp	r3, #5
 8000e2e:	d904      	bls.n	8000e3a <edit_multiple_registers+0xd6>
	{
		// Ensure that sensor values are restricted to read-only
		return modbus_exception(MB_ILLEGAL_FUNCTION);
 8000e30:	2004      	movs	r0, #4
 8000e32:	f000 f899 	bl	8000f68 <modbus_exception>
 8000e36:	0003      	movs	r3, r0
 8000e38:	e08d      	b.n	8000f56 <edit_multiple_registers+0x1f2>
	}

	// Edit holding registers
	modbus_tx_buffer[0] = get_rx_buffer(0); // Append Slave id
 8000e3a:	2000      	movs	r0, #0
 8000e3c:	f000 fb8a 	bl	8001554 <get_rx_buffer>
 8000e40:	0003      	movs	r3, r0
 8000e42:	001a      	movs	r2, r3
 8000e44:	4b46      	ldr	r3, [pc, #280]	@ (8000f60 <edit_multiple_registers+0x1fc>)
 8000e46:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[1] = get_rx_buffer(1); // Append Function Code
 8000e48:	2001      	movs	r0, #1
 8000e4a:	f000 fb83 	bl	8001554 <get_rx_buffer>
 8000e4e:	0003      	movs	r3, r0
 8000e50:	001a      	movs	r2, r3
 8000e52:	4b43      	ldr	r3, [pc, #268]	@ (8000f60 <edit_multiple_registers+0x1fc>)
 8000e54:	705a      	strb	r2, [r3, #1]
	// Append the Write Address (high byte then low byte)
	modbus_tx_buffer[2] = get_rx_buffer(2);
 8000e56:	2002      	movs	r0, #2
 8000e58:	f000 fb7c 	bl	8001554 <get_rx_buffer>
 8000e5c:	0003      	movs	r3, r0
 8000e5e:	001a      	movs	r2, r3
 8000e60:	4b3f      	ldr	r3, [pc, #252]	@ (8000f60 <edit_multiple_registers+0x1fc>)
 8000e62:	709a      	strb	r2, [r3, #2]
	modbus_tx_buffer[3] = get_rx_buffer(3);
 8000e64:	2003      	movs	r0, #3
 8000e66:	f000 fb75 	bl	8001554 <get_rx_buffer>
 8000e6a:	0003      	movs	r3, r0
 8000e6c:	001a      	movs	r2, r3
 8000e6e:	4b3c      	ldr	r3, [pc, #240]	@ (8000f60 <edit_multiple_registers+0x1fc>)
 8000e70:	70da      	strb	r2, [r3, #3]
	// Append the quantity of registers to be written (high byte then low byte)
	modbus_tx_buffer[4] = get_rx_buffer(4);
 8000e72:	2004      	movs	r0, #4
 8000e74:	f000 fb6e 	bl	8001554 <get_rx_buffer>
 8000e78:	0003      	movs	r3, r0
 8000e7a:	001a      	movs	r2, r3
 8000e7c:	4b38      	ldr	r3, [pc, #224]	@ (8000f60 <edit_multiple_registers+0x1fc>)
 8000e7e:	711a      	strb	r2, [r3, #4]
	modbus_tx_buffer[5] = get_rx_buffer(5);
 8000e80:	2005      	movs	r0, #5
 8000e82:	f000 fb67 	bl	8001554 <get_rx_buffer>
 8000e86:	0003      	movs	r3, r0
 8000e88:	001a      	movs	r2, r3
 8000e8a:	4b35      	ldr	r3, [pc, #212]	@ (8000f60 <edit_multiple_registers+0x1fc>)
 8000e8c:	715a      	strb	r2, [r3, #5]
	(*tx_len) = 6;
 8000e8e:	687b      	ldr	r3, [r7, #4]
 8000e90:	2206      	movs	r2, #6
 8000e92:	701a      	strb	r2, [r3, #0]

	for(uint8_t i = 0; i < num_registers; i++)
 8000e94:	2317      	movs	r3, #23
 8000e96:	18fb      	adds	r3, r7, r3
 8000e98:	2200      	movs	r2, #0
 8000e9a:	701a      	strb	r2, [r3, #0]
 8000e9c:	e032      	b.n	8000f04 <edit_multiple_registers+0x1a0>
	{
		holding_register_database[first_register_address + i] = (get_rx_buffer(2 * i + 7) << 8) | get_rx_buffer(2 * i + 8);
 8000e9e:	2517      	movs	r5, #23
 8000ea0:	197b      	adds	r3, r7, r5
 8000ea2:	781b      	ldrb	r3, [r3, #0]
 8000ea4:	18db      	adds	r3, r3, r3
 8000ea6:	b2db      	uxtb	r3, r3
 8000ea8:	3307      	adds	r3, #7
 8000eaa:	b2db      	uxtb	r3, r3
 8000eac:	0018      	movs	r0, r3
 8000eae:	f000 fb51 	bl	8001554 <get_rx_buffer>
 8000eb2:	0003      	movs	r3, r0
 8000eb4:	021b      	lsls	r3, r3, #8
 8000eb6:	b21c      	sxth	r4, r3
 8000eb8:	197b      	adds	r3, r7, r5
 8000eba:	781b      	ldrb	r3, [r3, #0]
 8000ebc:	3304      	adds	r3, #4
 8000ebe:	b2db      	uxtb	r3, r3
 8000ec0:	18db      	adds	r3, r3, r3
 8000ec2:	b2db      	uxtb	r3, r3
 8000ec4:	0018      	movs	r0, r3
 8000ec6:	f000 fb45 	bl	8001554 <get_rx_buffer>
 8000eca:	0003      	movs	r3, r0
 8000ecc:	b21b      	sxth	r3, r3
 8000ece:	4323      	orrs	r3, r4
 8000ed0:	b219      	sxth	r1, r3
 8000ed2:	2014      	movs	r0, #20
 8000ed4:	183b      	adds	r3, r7, r0
 8000ed6:	881a      	ldrh	r2, [r3, #0]
 8000ed8:	197b      	adds	r3, r7, r5
 8000eda:	781b      	ldrb	r3, [r3, #0]
 8000edc:	18d2      	adds	r2, r2, r3
 8000ede:	b289      	uxth	r1, r1
 8000ee0:	4b20      	ldr	r3, [pc, #128]	@ (8000f64 <edit_multiple_registers+0x200>)
 8000ee2:	0052      	lsls	r2, r2, #1
 8000ee4:	52d1      	strh	r1, [r2, r3]

		// Handle the range boundaries of each writable register
		handle_range(first_register_address + i);
 8000ee6:	197b      	adds	r3, r7, r5
 8000ee8:	781b      	ldrb	r3, [r3, #0]
 8000eea:	b29a      	uxth	r2, r3
 8000eec:	183b      	adds	r3, r7, r0
 8000eee:	881b      	ldrh	r3, [r3, #0]
 8000ef0:	18d3      	adds	r3, r2, r3
 8000ef2:	b29b      	uxth	r3, r3
 8000ef4:	0018      	movs	r0, r3
 8000ef6:	f000 f85f 	bl	8000fb8 <handle_range>
	for(uint8_t i = 0; i < num_registers; i++)
 8000efa:	197b      	adds	r3, r7, r5
 8000efc:	781a      	ldrb	r2, [r3, #0]
 8000efe:	197b      	adds	r3, r7, r5
 8000f00:	3201      	adds	r2, #1
 8000f02:	701a      	strb	r2, [r3, #0]
 8000f04:	2317      	movs	r3, #23
 8000f06:	18fb      	adds	r3, r7, r3
 8000f08:	781b      	ldrb	r3, [r3, #0]
 8000f0a:	b29b      	uxth	r3, r3
 8000f0c:	2212      	movs	r2, #18
 8000f0e:	18ba      	adds	r2, r7, r2
 8000f10:	8812      	ldrh	r2, [r2, #0]
 8000f12:	429a      	cmp	r2, r3
 8000f14:	d8c3      	bhi.n	8000e9e <edit_multiple_registers+0x13a>

	// TIMING WORKAROUND START
//	HAL_Delay(1);
	// TIMING WORKAROUND END

	int8_t status = modbus_send((*tx_len));
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	781b      	ldrb	r3, [r3, #0]
 8000f1a:	250f      	movs	r5, #15
 8000f1c:	197c      	adds	r4, r7, r5
 8000f1e:	0018      	movs	r0, r3
 8000f20:	f000 f8d6 	bl	80010d0 <modbus_send>
 8000f24:	0003      	movs	r3, r0
 8000f26:	7023      	strb	r3, [r4, #0]

	if(status == MB_SUCCESS)
 8000f28:	197b      	adds	r3, r7, r5
 8000f2a:	781b      	ldrb	r3, [r3, #0]
 8000f2c:	b25b      	sxtb	r3, r3
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d10d      	bne.n	8000f4e <edit_multiple_registers+0x1ea>
	{
		// Special Case Modbus Baud Rate Modification
		if((first_register_address <= 1) && last_register_address >= 1)
 8000f32:	2314      	movs	r3, #20
 8000f34:	18fb      	adds	r3, r7, r3
 8000f36:	881b      	ldrh	r3, [r3, #0]
 8000f38:	2b01      	cmp	r3, #1
 8000f3a:	d808      	bhi.n	8000f4e <edit_multiple_registers+0x1ea>
 8000f3c:	2310      	movs	r3, #16
 8000f3e:	18fb      	adds	r3, r7, r3
 8000f40:	881b      	ldrh	r3, [r3, #0]
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	d003      	beq.n	8000f4e <edit_multiple_registers+0x1ea>
		{
			return modbus_change_baud_rate();
 8000f46:	f000 fa7f 	bl	8001448 <modbus_change_baud_rate>
 8000f4a:	0003      	movs	r3, r0
 8000f4c:	e003      	b.n	8000f56 <edit_multiple_registers+0x1f2>
		}
	}
	return status;
 8000f4e:	230f      	movs	r3, #15
 8000f50:	18fb      	adds	r3, r7, r3
 8000f52:	781b      	ldrb	r3, [r3, #0]
 8000f54:	b25b      	sxtb	r3, r3
}
 8000f56:	0018      	movs	r0, r3
 8000f58:	46bd      	mov	sp, r7
 8000f5a:	b006      	add	sp, #24
 8000f5c:	bdb0      	pop	{r4, r5, r7, pc}
 8000f5e:	46c0      	nop			@ (mov r8, r8)
 8000f60:	20000294 	.word	0x20000294
 8000f64:	20000000 	.word	0x20000000

08000f68 <modbus_exception>:

int8_t modbus_exception(int8_t exception_code)
{
 8000f68:	b580      	push	{r7, lr}
 8000f6a:	b082      	sub	sp, #8
 8000f6c:	af00      	add	r7, sp, #0
 8000f6e:	0002      	movs	r2, r0
 8000f70:	1dfb      	adds	r3, r7, #7
 8000f72:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[0] = get_rx_buffer(0);
 8000f74:	2000      	movs	r0, #0
 8000f76:	f000 faed 	bl	8001554 <get_rx_buffer>
 8000f7a:	0003      	movs	r3, r0
 8000f7c:	001a      	movs	r2, r3
 8000f7e:	4b0d      	ldr	r3, [pc, #52]	@ (8000fb4 <modbus_exception+0x4c>)
 8000f80:	701a      	strb	r2, [r3, #0]
	modbus_tx_buffer[1] = get_rx_buffer(1) | 0x80;
 8000f82:	2001      	movs	r0, #1
 8000f84:	f000 fae6 	bl	8001554 <get_rx_buffer>
 8000f88:	0003      	movs	r3, r0
 8000f8a:	001a      	movs	r2, r3
 8000f8c:	2380      	movs	r3, #128	@ 0x80
 8000f8e:	425b      	negs	r3, r3
 8000f90:	4313      	orrs	r3, r2
 8000f92:	b2da      	uxtb	r2, r3
 8000f94:	4b07      	ldr	r3, [pc, #28]	@ (8000fb4 <modbus_exception+0x4c>)
 8000f96:	705a      	strb	r2, [r3, #1]
	modbus_tx_buffer[2] = exception_code - 3; // Subtract 3 to match the modbus defined error code value
 8000f98:	1dfb      	adds	r3, r7, #7
 8000f9a:	781b      	ldrb	r3, [r3, #0]
 8000f9c:	3b03      	subs	r3, #3
 8000f9e:	b2da      	uxtb	r2, r3
 8000fa0:	4b04      	ldr	r3, [pc, #16]	@ (8000fb4 <modbus_exception+0x4c>)
 8000fa2:	709a      	strb	r2, [r3, #2]

	return modbus_send(3);
 8000fa4:	2003      	movs	r0, #3
 8000fa6:	f000 f893 	bl	80010d0 <modbus_send>
 8000faa:	0003      	movs	r3, r0
}
 8000fac:	0018      	movs	r0, r3
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	b002      	add	sp, #8
 8000fb2:	bd80      	pop	{r7, pc}
 8000fb4:	20000294 	.word	0x20000294

08000fb8 <handle_range>:

void handle_range(uint16_t holding_register)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b082      	sub	sp, #8
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	0002      	movs	r2, r0
 8000fc0:	1dbb      	adds	r3, r7, #6
 8000fc2:	801a      	strh	r2, [r3, #0]
	switch(holding_register)
 8000fc4:	1dbb      	adds	r3, r7, #6
 8000fc6:	881b      	ldrh	r3, [r3, #0]
 8000fc8:	2b04      	cmp	r3, #4
 8000fca:	d900      	bls.n	8000fce <handle_range+0x16>
 8000fcc:	e075      	b.n	80010ba <handle_range+0x102>
 8000fce:	009a      	lsls	r2, r3, #2
 8000fd0:	4b3c      	ldr	r3, [pc, #240]	@ (80010c4 <handle_range+0x10c>)
 8000fd2:	18d3      	adds	r3, r2, r3
 8000fd4:	681b      	ldr	r3, [r3, #0]
 8000fd6:	469f      	mov	pc, r3
	{
		case MODBUS_ID:
		{
			if(holding_register_database[holding_register] > 0xFF)
 8000fd8:	1dbb      	adds	r3, r7, #6
 8000fda:	881a      	ldrh	r2, [r3, #0]
 8000fdc:	4b3a      	ldr	r3, [pc, #232]	@ (80010c8 <handle_range+0x110>)
 8000fde:	0052      	lsls	r2, r2, #1
 8000fe0:	5ad3      	ldrh	r3, [r2, r3]
 8000fe2:	2bff      	cmp	r3, #255	@ 0xff
 8000fe4:	d800      	bhi.n	8000fe8 <handle_range+0x30>
 8000fe6:	e05f      	b.n	80010a8 <handle_range+0xf0>
			{
				holding_register_database[holding_register] = 0xFF;
 8000fe8:	1dbb      	adds	r3, r7, #6
 8000fea:	881a      	ldrh	r2, [r3, #0]
 8000fec:	4b36      	ldr	r3, [pc, #216]	@ (80010c8 <handle_range+0x110>)
 8000fee:	0052      	lsls	r2, r2, #1
 8000ff0:	21ff      	movs	r1, #255	@ 0xff
 8000ff2:	52d1      	strh	r1, [r2, r3]
			}
			break;
 8000ff4:	e058      	b.n	80010a8 <handle_range+0xf0>
		}
		case MB_BAUD_RATE:
		{
			if(holding_register_database[holding_register] < BAUD_RATE_4800)
 8000ff6:	1dbb      	adds	r3, r7, #6
 8000ff8:	881a      	ldrh	r2, [r3, #0]
 8000ffa:	4b33      	ldr	r3, [pc, #204]	@ (80010c8 <handle_range+0x110>)
 8000ffc:	0052      	lsls	r2, r2, #1
 8000ffe:	5ad3      	ldrh	r3, [r2, r3]
 8001000:	2b01      	cmp	r3, #1
 8001002:	d806      	bhi.n	8001012 <handle_range+0x5a>
			{
				holding_register_database[holding_register] = BAUD_RATE_4800;
 8001004:	1dbb      	adds	r3, r7, #6
 8001006:	881a      	ldrh	r2, [r3, #0]
 8001008:	4b2f      	ldr	r3, [pc, #188]	@ (80010c8 <handle_range+0x110>)
 800100a:	0052      	lsls	r2, r2, #1
 800100c:	2102      	movs	r1, #2
 800100e:	52d1      	strh	r1, [r2, r3]
			}
			else if(holding_register_database[holding_register] > BAUD_RATE_256000)
			{
				holding_register_database[holding_register] = BAUD_RATE_256000;
			}
			break;
 8001010:	e04c      	b.n	80010ac <handle_range+0xf4>
			else if(holding_register_database[holding_register] > BAUD_RATE_256000)
 8001012:	1dbb      	adds	r3, r7, #6
 8001014:	881a      	ldrh	r2, [r3, #0]
 8001016:	4b2c      	ldr	r3, [pc, #176]	@ (80010c8 <handle_range+0x110>)
 8001018:	0052      	lsls	r2, r2, #1
 800101a:	5ad3      	ldrh	r3, [r2, r3]
 800101c:	2b09      	cmp	r3, #9
 800101e:	d945      	bls.n	80010ac <handle_range+0xf4>
				holding_register_database[holding_register] = BAUD_RATE_256000;
 8001020:	1dbb      	adds	r3, r7, #6
 8001022:	881a      	ldrh	r2, [r3, #0]
 8001024:	4b28      	ldr	r3, [pc, #160]	@ (80010c8 <handle_range+0x110>)
 8001026:	0052      	lsls	r2, r2, #1
 8001028:	2109      	movs	r1, #9
 800102a:	52d1      	strh	r1, [r2, r3]
			break;
 800102c:	e03e      	b.n	80010ac <handle_range+0xf4>
		}
		case MB_TRANSMIT_TIMEOUT:
		{
			if(holding_register_database[holding_register] < 5)
 800102e:	1dbb      	adds	r3, r7, #6
 8001030:	881a      	ldrh	r2, [r3, #0]
 8001032:	4b25      	ldr	r3, [pc, #148]	@ (80010c8 <handle_range+0x110>)
 8001034:	0052      	lsls	r2, r2, #1
 8001036:	5ad3      	ldrh	r3, [r2, r3]
 8001038:	2b04      	cmp	r3, #4
 800103a:	d806      	bhi.n	800104a <handle_range+0x92>
			{
				holding_register_database[holding_register] = 5;
 800103c:	1dbb      	adds	r3, r7, #6
 800103e:	881a      	ldrh	r2, [r3, #0]
 8001040:	4b21      	ldr	r3, [pc, #132]	@ (80010c8 <handle_range+0x110>)
 8001042:	0052      	lsls	r2, r2, #1
 8001044:	2105      	movs	r1, #5
 8001046:	52d1      	strh	r1, [r2, r3]
			}
			else if(holding_register_database[holding_register] > 1000)
			{
				holding_register_database[holding_register] = 1000;
			}
			break;
 8001048:	e032      	b.n	80010b0 <handle_range+0xf8>
			else if(holding_register_database[holding_register] > 1000)
 800104a:	1dbb      	adds	r3, r7, #6
 800104c:	881a      	ldrh	r2, [r3, #0]
 800104e:	4b1e      	ldr	r3, [pc, #120]	@ (80010c8 <handle_range+0x110>)
 8001050:	0052      	lsls	r2, r2, #1
 8001052:	5ad2      	ldrh	r2, [r2, r3]
 8001054:	23fa      	movs	r3, #250	@ 0xfa
 8001056:	009b      	lsls	r3, r3, #2
 8001058:	429a      	cmp	r2, r3
 800105a:	d929      	bls.n	80010b0 <handle_range+0xf8>
				holding_register_database[holding_register] = 1000;
 800105c:	1dbb      	adds	r3, r7, #6
 800105e:	881a      	ldrh	r2, [r3, #0]
 8001060:	4b19      	ldr	r3, [pc, #100]	@ (80010c8 <handle_range+0x110>)
 8001062:	0052      	lsls	r2, r2, #1
 8001064:	21fa      	movs	r1, #250	@ 0xfa
 8001066:	0089      	lsls	r1, r1, #2
 8001068:	52d1      	strh	r1, [r2, r3]
			break;
 800106a:	e021      	b.n	80010b0 <handle_range+0xf8>
		}
		case MB_TRANSMIT_RETRIES:
		{
			if(holding_register_database[holding_register] > 5)
 800106c:	1dbb      	adds	r3, r7, #6
 800106e:	881a      	ldrh	r2, [r3, #0]
 8001070:	4b15      	ldr	r3, [pc, #84]	@ (80010c8 <handle_range+0x110>)
 8001072:	0052      	lsls	r2, r2, #1
 8001074:	5ad3      	ldrh	r3, [r2, r3]
 8001076:	2b05      	cmp	r3, #5
 8001078:	d91c      	bls.n	80010b4 <handle_range+0xfc>
			{
				holding_register_database[holding_register] = 5;
 800107a:	1dbb      	adds	r3, r7, #6
 800107c:	881a      	ldrh	r2, [r3, #0]
 800107e:	4b12      	ldr	r3, [pc, #72]	@ (80010c8 <handle_range+0x110>)
 8001080:	0052      	lsls	r2, r2, #1
 8001082:	2105      	movs	r1, #5
 8001084:	52d1      	strh	r1, [r2, r3]
			}
			break;
 8001086:	e015      	b.n	80010b4 <handle_range+0xfc>
		}
		case MB_ERRORS:
		{
			if(holding_register_database[holding_register] > 0x3FF)
 8001088:	1dbb      	adds	r3, r7, #6
 800108a:	881a      	ldrh	r2, [r3, #0]
 800108c:	4b0e      	ldr	r3, [pc, #56]	@ (80010c8 <handle_range+0x110>)
 800108e:	0052      	lsls	r2, r2, #1
 8001090:	5ad2      	ldrh	r2, [r2, r3]
 8001092:	2380      	movs	r3, #128	@ 0x80
 8001094:	00db      	lsls	r3, r3, #3
 8001096:	429a      	cmp	r2, r3
 8001098:	d30e      	bcc.n	80010b8 <handle_range+0x100>
			{
				holding_register_database[holding_register] = 0x3FF;
 800109a:	1dbb      	adds	r3, r7, #6
 800109c:	881a      	ldrh	r2, [r3, #0]
 800109e:	4b0a      	ldr	r3, [pc, #40]	@ (80010c8 <handle_range+0x110>)
 80010a0:	0052      	lsls	r2, r2, #1
 80010a2:	490a      	ldr	r1, [pc, #40]	@ (80010cc <handle_range+0x114>)
 80010a4:	52d1      	strh	r1, [r2, r3]
			}
			break;
 80010a6:	e007      	b.n	80010b8 <handle_range+0x100>
			break;
 80010a8:	46c0      	nop			@ (mov r8, r8)
 80010aa:	e006      	b.n	80010ba <handle_range+0x102>
			break;
 80010ac:	46c0      	nop			@ (mov r8, r8)
 80010ae:	e004      	b.n	80010ba <handle_range+0x102>
			break;
 80010b0:	46c0      	nop			@ (mov r8, r8)
 80010b2:	e002      	b.n	80010ba <handle_range+0x102>
			break;
 80010b4:	46c0      	nop			@ (mov r8, r8)
 80010b6:	e000      	b.n	80010ba <handle_range+0x102>
			break;
 80010b8:	46c0      	nop			@ (mov r8, r8)
		}
	}
}
 80010ba:	46c0      	nop			@ (mov r8, r8)
 80010bc:	46bd      	mov	sp, r7
 80010be:	b002      	add	sp, #8
 80010c0:	bd80      	pop	{r7, pc}
 80010c2:	46c0      	nop			@ (mov r8, r8)
 80010c4:	080052f8 	.word	0x080052f8
 80010c8:	20000000 	.word	0x20000000
 80010cc:	000003ff 	.word	0x000003ff

080010d0 <modbus_send>:
#endif // MB_SLAVE

// General Modbus Functions -------------------------------------------------------------------

int8_t modbus_send(uint8_t size)
{
 80010d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80010d2:	b085      	sub	sp, #20
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	0002      	movs	r2, r0
 80010d8:	1dfb      	adds	r3, r7, #7
 80010da:	701a      	strb	r2, [r3, #0]
	int8_t status = HAL_OK;
 80010dc:	250f      	movs	r5, #15
 80010de:	197b      	adds	r3, r7, r5
 80010e0:	2200      	movs	r2, #0
 80010e2:	701a      	strb	r2, [r3, #0]
	// Append CRC (low byte then high byte)
	uint16_t crc = crc_16(modbus_tx_buffer, size);
 80010e4:	260c      	movs	r6, #12
 80010e6:	19bc      	adds	r4, r7, r6
 80010e8:	1dfb      	adds	r3, r7, #7
 80010ea:	781a      	ldrb	r2, [r3, #0]
 80010ec:	4b1e      	ldr	r3, [pc, #120]	@ (8001168 <modbus_send+0x98>)
 80010ee:	0011      	movs	r1, r2
 80010f0:	0018      	movs	r0, r3
 80010f2:	f000 fa7f 	bl	80015f4 <crc_16>
 80010f6:	0003      	movs	r3, r0
 80010f8:	8023      	strh	r3, [r4, #0]
	modbus_tx_buffer[size] = low_byte(crc);
 80010fa:	1dfb      	adds	r3, r7, #7
 80010fc:	781b      	ldrb	r3, [r3, #0]
 80010fe:	19ba      	adds	r2, r7, r6
 8001100:	8812      	ldrh	r2, [r2, #0]
 8001102:	b2d1      	uxtb	r1, r2
 8001104:	4a18      	ldr	r2, [pc, #96]	@ (8001168 <modbus_send+0x98>)
 8001106:	54d1      	strb	r1, [r2, r3]
	modbus_tx_buffer[size + 1] = high_byte(crc);
 8001108:	19bb      	adds	r3, r7, r6
 800110a:	881b      	ldrh	r3, [r3, #0]
 800110c:	0a1b      	lsrs	r3, r3, #8
 800110e:	b29a      	uxth	r2, r3
 8001110:	1dfb      	adds	r3, r7, #7
 8001112:	781b      	ldrb	r3, [r3, #0]
 8001114:	3301      	adds	r3, #1
 8001116:	b2d1      	uxtb	r1, r2
 8001118:	4a13      	ldr	r2, [pc, #76]	@ (8001168 <modbus_send+0x98>)
 800111a:	54d1      	strb	r1, [r2, r3]

	uart_tx_int = 0; // This will enable tx timeout monitoring
 800111c:	4b13      	ldr	r3, [pc, #76]	@ (800116c <modbus_send+0x9c>)
 800111e:	2200      	movs	r2, #0
 8001120:	701a      	strb	r2, [r3, #0]
	tx_time = HAL_GetTick();
 8001122:	f000 fd3b 	bl	8001b9c <HAL_GetTick>
 8001126:	0002      	movs	r2, r0
 8001128:	4b11      	ldr	r3, [pc, #68]	@ (8001170 <modbus_send+0xa0>)
 800112a:	601a      	str	r2, [r3, #0]
	status = HAL_UART_Transmit_DMA(&huart1, modbus_tx_buffer, size + 2);
 800112c:	1dfb      	adds	r3, r7, #7
 800112e:	781b      	ldrb	r3, [r3, #0]
 8001130:	b29b      	uxth	r3, r3
 8001132:	3302      	adds	r3, #2
 8001134:	b29a      	uxth	r2, r3
 8001136:	490c      	ldr	r1, [pc, #48]	@ (8001168 <modbus_send+0x98>)
 8001138:	4b0e      	ldr	r3, [pc, #56]	@ (8001174 <modbus_send+0xa4>)
 800113a:	0018      	movs	r0, r3
 800113c:	f002 f9aa 	bl	8003494 <HAL_UART_Transmit_DMA>
 8001140:	0003      	movs	r3, r0
 8001142:	001a      	movs	r2, r3
 8001144:	197b      	adds	r3, r7, r5
 8001146:	701a      	strb	r2, [r3, #0]
	__HAL_DMA_DISABLE_IT(&hdma_usart1_tx, DMA_IT_HT);
 8001148:	4b0b      	ldr	r3, [pc, #44]	@ (8001178 <modbus_send+0xa8>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	681a      	ldr	r2, [r3, #0]
 800114e:	4b0a      	ldr	r3, [pc, #40]	@ (8001178 <modbus_send+0xa8>)
 8001150:	681b      	ldr	r3, [r3, #0]
 8001152:	2104      	movs	r1, #4
 8001154:	438a      	bics	r2, r1
 8001156:	601a      	str	r2, [r3, #0]
	return status;
 8001158:	197b      	adds	r3, r7, r5
 800115a:	781b      	ldrb	r3, [r3, #0]
 800115c:	b25b      	sxtb	r3, r3
}
 800115e:	0018      	movs	r0, r3
 8001160:	46bd      	mov	sp, r7
 8001162:	b005      	add	sp, #20
 8001164:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001166:	46c0      	nop			@ (mov r8, r8)
 8001168:	20000294 	.word	0x20000294
 800116c:	20000012 	.word	0x20000012
 8001170:	20000490 	.word	0x20000490
 8001174:	2000003c 	.word	0x2000003c
 8001178:	2000012c 	.word	0x2000012c

0800117c <modbus_reset>:

int8_t modbus_reset()
{
 800117c:	b580      	push	{r7, lr}
 800117e:	b082      	sub	sp, #8
 8001180:	af00      	add	r7, sp, #0
	int8_t status = 0;
 8001182:	1dfb      	adds	r3, r7, #7
 8001184:	2200      	movs	r2, #0
 8001186:	701a      	strb	r2, [r3, #0]
	status = HAL_UART_Abort(&huart1);
 8001188:	4b30      	ldr	r3, [pc, #192]	@ (800124c <modbus_reset+0xd0>)
 800118a:	0018      	movs	r0, r3
 800118c:	f002 fa14 	bl	80035b8 <HAL_UART_Abort>
 8001190:	0003      	movs	r3, r0
 8001192:	001a      	movs	r2, r3
 8001194:	1dfb      	adds	r3, r7, #7
 8001196:	701a      	strb	r2, [r3, #0]
	status |= HAL_UART_DeInit(&huart1);
 8001198:	4b2c      	ldr	r3, [pc, #176]	@ (800124c <modbus_reset+0xd0>)
 800119a:	0018      	movs	r0, r3
 800119c:	f002 f93a 	bl	8003414 <HAL_UART_DeInit>
 80011a0:	0003      	movs	r3, r0
 80011a2:	b259      	sxtb	r1, r3
 80011a4:	1dfb      	adds	r3, r7, #7
 80011a6:	1dfa      	adds	r2, r7, #7
 80011a8:	7812      	ldrb	r2, [r2, #0]
 80011aa:	430a      	orrs	r2, r1
 80011ac:	701a      	strb	r2, [r3, #0]
	__USART1_FORCE_RESET();
 80011ae:	4b28      	ldr	r3, [pc, #160]	@ (8001250 <modbus_reset+0xd4>)
 80011b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011b2:	4b27      	ldr	r3, [pc, #156]	@ (8001250 <modbus_reset+0xd4>)
 80011b4:	2180      	movs	r1, #128	@ 0x80
 80011b6:	01c9      	lsls	r1, r1, #7
 80011b8:	430a      	orrs	r2, r1
 80011ba:	631a      	str	r2, [r3, #48]	@ 0x30
	HAL_Delay(100);
 80011bc:	2064      	movs	r0, #100	@ 0x64
 80011be:	f000 fcf7 	bl	8001bb0 <HAL_Delay>
	__USART1_RELEASE_RESET();
 80011c2:	4b23      	ldr	r3, [pc, #140]	@ (8001250 <modbus_reset+0xd4>)
 80011c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80011c6:	4b22      	ldr	r3, [pc, #136]	@ (8001250 <modbus_reset+0xd4>)
 80011c8:	4922      	ldr	r1, [pc, #136]	@ (8001254 <modbus_reset+0xd8>)
 80011ca:	400a      	ands	r2, r1
 80011cc:	631a      	str	r2, [r3, #48]	@ 0x30
	status = HAL_RS485Ex_Init(&huart1, UART_DE_POLARITY_HIGH, 0, 0);
 80011ce:	481f      	ldr	r0, [pc, #124]	@ (800124c <modbus_reset+0xd0>)
 80011d0:	2300      	movs	r3, #0
 80011d2:	2200      	movs	r2, #0
 80011d4:	2100      	movs	r1, #0
 80011d6:	f003 fd41 	bl	8004c5c <HAL_RS485Ex_Init>
 80011da:	0003      	movs	r3, r0
 80011dc:	001a      	movs	r2, r3
 80011de:	1dfb      	adds	r3, r7, #7
 80011e0:	701a      	strb	r2, [r3, #0]
	status |= HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8);
 80011e2:	4b1a      	ldr	r3, [pc, #104]	@ (800124c <modbus_reset+0xd0>)
 80011e4:	2100      	movs	r1, #0
 80011e6:	0018      	movs	r0, r3
 80011e8:	f003 fdfc 	bl	8004de4 <HAL_UARTEx_SetTxFifoThreshold>
 80011ec:	0003      	movs	r3, r0
 80011ee:	b259      	sxtb	r1, r3
 80011f0:	1dfb      	adds	r3, r7, #7
 80011f2:	1dfa      	adds	r2, r7, #7
 80011f4:	7812      	ldrb	r2, [r2, #0]
 80011f6:	430a      	orrs	r2, r1
 80011f8:	701a      	strb	r2, [r3, #0]
	status |= HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8);
 80011fa:	4b14      	ldr	r3, [pc, #80]	@ (800124c <modbus_reset+0xd0>)
 80011fc:	2100      	movs	r1, #0
 80011fe:	0018      	movs	r0, r3
 8001200:	f003 fe30 	bl	8004e64 <HAL_UARTEx_SetRxFifoThreshold>
 8001204:	0003      	movs	r3, r0
 8001206:	b259      	sxtb	r1, r3
 8001208:	1dfb      	adds	r3, r7, #7
 800120a:	1dfa      	adds	r2, r7, #7
 800120c:	7812      	ldrb	r2, [r2, #0]
 800120e:	430a      	orrs	r2, r1
 8001210:	701a      	strb	r2, [r3, #0]
	status |= HAL_UARTEx_DisableFifoMode(&huart1);
 8001212:	4b0e      	ldr	r3, [pc, #56]	@ (800124c <modbus_reset+0xd0>)
 8001214:	0018      	movs	r0, r3
 8001216:	f003 fdab 	bl	8004d70 <HAL_UARTEx_DisableFifoMode>
 800121a:	0003      	movs	r3, r0
 800121c:	b259      	sxtb	r1, r3
 800121e:	1dfb      	adds	r3, r7, #7
 8001220:	1dfa      	adds	r2, r7, #7
 8001222:	7812      	ldrb	r2, [r2, #0]
 8001224:	430a      	orrs	r2, r1
 8001226:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 8001228:	1dfb      	adds	r3, r7, #7
 800122a:	781b      	ldrb	r3, [r3, #0]
 800122c:	b25b      	sxtb	r3, r3
 800122e:	2b00      	cmp	r3, #0
 8001230:	d004      	beq.n	800123c <modbus_reset+0xc0>
	{
		return handle_modbus_error(MB_FATAL_ERROR);
 8001232:	2015      	movs	r0, #21
 8001234:	f000 f9c0 	bl	80015b8 <handle_modbus_error>
 8001238:	0003      	movs	r3, r0
 800123a:	e002      	b.n	8001242 <modbus_reset+0xc6>
	}
	return status;
 800123c:	1dfb      	adds	r3, r7, #7
 800123e:	781b      	ldrb	r3, [r3, #0]
 8001240:	b25b      	sxtb	r3, r3
}
 8001242:	0018      	movs	r0, r3
 8001244:	46bd      	mov	sp, r7
 8001246:	b002      	add	sp, #8
 8001248:	bd80      	pop	{r7, pc}
 800124a:	46c0      	nop			@ (mov r8, r8)
 800124c:	2000003c 	.word	0x2000003c
 8001250:	40021000 	.word	0x40021000
 8001254:	ffffbfff 	.word	0xffffbfff

08001258 <modbus_set_rx>:

int8_t modbus_set_rx()
{
 8001258:	b580      	push	{r7, lr}
 800125a:	b082      	sub	sp, #8
 800125c:	af00      	add	r7, sp, #0
	int8_t status = HAL_UARTEx_ReceiveToIdle_DMA(&huart1, rx_chunk, 6);
 800125e:	490c      	ldr	r1, [pc, #48]	@ (8001290 <modbus_set_rx+0x38>)
 8001260:	4b0c      	ldr	r3, [pc, #48]	@ (8001294 <modbus_set_rx+0x3c>)
 8001262:	2206      	movs	r2, #6
 8001264:	0018      	movs	r0, r3
 8001266:	f003 fe3f 	bl	8004ee8 <HAL_UARTEx_ReceiveToIdle_DMA>
 800126a:	0003      	movs	r3, r0
 800126c:	001a      	movs	r2, r3
 800126e:	1dfb      	adds	r3, r7, #7
 8001270:	701a      	strb	r2, [r3, #0]
	__HAL_DMA_DISABLE_IT(&hdma_usart1_rx, DMA_IT_HT);
 8001272:	4b09      	ldr	r3, [pc, #36]	@ (8001298 <modbus_set_rx+0x40>)
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	681a      	ldr	r2, [r3, #0]
 8001278:	4b07      	ldr	r3, [pc, #28]	@ (8001298 <modbus_set_rx+0x40>)
 800127a:	681b      	ldr	r3, [r3, #0]
 800127c:	2104      	movs	r1, #4
 800127e:	438a      	bics	r2, r1
 8001280:	601a      	str	r2, [r3, #0]

	return status;
 8001282:	1dfb      	adds	r3, r7, #7
 8001284:	781b      	ldrb	r3, [r3, #0]
 8001286:	b25b      	sxtb	r3, r3
}
 8001288:	0018      	movs	r0, r3
 800128a:	46bd      	mov	sp, r7
 800128c:	b002      	add	sp, #8
 800128e:	bd80      	pop	{r7, pc}
 8001290:	20000394 	.word	0x20000394
 8001294:	2000003c 	.word	0x2000003c
 8001298:	200000d0 	.word	0x200000d0

0800129c <monitor_modbus>:

int8_t monitor_modbus()
{
 800129c:	b590      	push	{r4, r7, lr}
 800129e:	b083      	sub	sp, #12
 80012a0:	af00      	add	r7, sp, #0
	int8_t status = MB_SUCCESS;
 80012a2:	1dfb      	adds	r3, r7, #7
 80012a4:	2200      	movs	r2, #0
 80012a6:	701a      	strb	r2, [r3, #0]

	// Chunk miss handling
	status = handle_chunk_miss();
 80012a8:	1dfc      	adds	r4, r7, #7
 80012aa:	f000 f9e9 	bl	8001680 <handle_chunk_miss>
 80012ae:	0003      	movs	r3, r0
 80012b0:	7023      	strb	r3, [r4, #0]
	if(status != MB_SUCCESS)
 80012b2:	1dfb      	adds	r3, r7, #7
 80012b4:	781b      	ldrb	r3, [r3, #0]
 80012b6:	b25b      	sxtb	r3, r3
 80012b8:	2b00      	cmp	r3, #0
 80012ba:	d012      	beq.n	80012e2 <monitor_modbus+0x46>
	{
		status = modbus_reset();
 80012bc:	1dfc      	adds	r4, r7, #7
 80012be:	f7ff ff5d 	bl	800117c <modbus_reset>
 80012c2:	0003      	movs	r3, r0
 80012c4:	7023      	strb	r3, [r4, #0]
		if(status != MB_SUCCESS)
 80012c6:	1dfb      	adds	r3, r7, #7
 80012c8:	781b      	ldrb	r3, [r3, #0]
 80012ca:	b25b      	sxtb	r3, r3
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d003      	beq.n	80012d8 <monitor_modbus+0x3c>
		{
			return status;
 80012d0:	1dfb      	adds	r3, r7, #7
 80012d2:	781b      	ldrb	r3, [r3, #0]
 80012d4:	b25b      	sxtb	r3, r3
 80012d6:	e039      	b.n	800134c <monitor_modbus+0xb0>
		}
		return handle_modbus_error(MB_UART_ERROR);
 80012d8:	2014      	movs	r0, #20
 80012da:	f000 f96d 	bl	80015b8 <handle_modbus_error>
 80012de:	0003      	movs	r3, r0
 80012e0:	e034      	b.n	800134c <monitor_modbus+0xb0>
	}

	// Uart error handling
	if(uart_err_int)
 80012e2:	4b1c      	ldr	r3, [pc, #112]	@ (8001354 <monitor_modbus+0xb8>)
 80012e4:	781b      	ldrb	r3, [r3, #0]
 80012e6:	b2db      	uxtb	r3, r3
 80012e8:	2b00      	cmp	r3, #0
 80012ea:	d015      	beq.n	8001318 <monitor_modbus+0x7c>
	{
		uart_err_int = 0;
 80012ec:	4b19      	ldr	r3, [pc, #100]	@ (8001354 <monitor_modbus+0xb8>)
 80012ee:	2200      	movs	r2, #0
 80012f0:	701a      	strb	r2, [r3, #0]
		status = modbus_reset();
 80012f2:	1dfc      	adds	r4, r7, #7
 80012f4:	f7ff ff42 	bl	800117c <modbus_reset>
 80012f8:	0003      	movs	r3, r0
 80012fa:	7023      	strb	r3, [r4, #0]
		if(status != MB_SUCCESS)
 80012fc:	1dfb      	adds	r3, r7, #7
 80012fe:	781b      	ldrb	r3, [r3, #0]
 8001300:	b25b      	sxtb	r3, r3
 8001302:	2b00      	cmp	r3, #0
 8001304:	d003      	beq.n	800130e <monitor_modbus+0x72>
		{
			return status;
 8001306:	1dfb      	adds	r3, r7, #7
 8001308:	781b      	ldrb	r3, [r3, #0]
 800130a:	b25b      	sxtb	r3, r3
 800130c:	e01e      	b.n	800134c <monitor_modbus+0xb0>
		}
		return handle_modbus_error(MB_UART_ERROR);
 800130e:	2014      	movs	r0, #20
 8001310:	f000 f952 	bl	80015b8 <handle_modbus_error>
 8001314:	0003      	movs	r3, r0
 8001316:	e019      	b.n	800134c <monitor_modbus+0xb0>
	}

	// TX timeout handling
	if(!uart_tx_int)
 8001318:	4b0f      	ldr	r3, [pc, #60]	@ (8001358 <monitor_modbus+0xbc>)
 800131a:	781b      	ldrb	r3, [r3, #0]
 800131c:	b2db      	uxtb	r3, r3
 800131e:	2b00      	cmp	r3, #0
 8001320:	d111      	bne.n	8001346 <monitor_modbus+0xaa>
	{
		if(HAL_GetTick() - tx_time >= holding_register_database[MB_TRANSMIT_TIMEOUT])
 8001322:	f000 fc3b 	bl	8001b9c <HAL_GetTick>
 8001326:	0002      	movs	r2, r0
 8001328:	4b0c      	ldr	r3, [pc, #48]	@ (800135c <monitor_modbus+0xc0>)
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	1ad3      	subs	r3, r2, r3
 800132e:	4a0c      	ldr	r2, [pc, #48]	@ (8001360 <monitor_modbus+0xc4>)
 8001330:	8892      	ldrh	r2, [r2, #4]
 8001332:	4293      	cmp	r3, r2
 8001334:	d304      	bcc.n	8001340 <monitor_modbus+0xa4>
		{
			return handle_modbus_error(MB_TX_TIMEOUT);
 8001336:	2012      	movs	r0, #18
 8001338:	f000 f93e 	bl	80015b8 <handle_modbus_error>
 800133c:	0003      	movs	r3, r0
 800133e:	e005      	b.n	800134c <monitor_modbus+0xb0>
		}
		status = HAL_BUSY;
 8001340:	1dfb      	adds	r3, r7, #7
 8001342:	2202      	movs	r2, #2
 8001344:	701a      	strb	r2, [r3, #0]
			}
			status = HAL_BUSY;
		}
	}
#endif
	return status;
 8001346:	1dfb      	adds	r3, r7, #7
 8001348:	781b      	ldrb	r3, [r3, #0]
 800134a:	b25b      	sxtb	r3, r3
}
 800134c:	0018      	movs	r0, r3
 800134e:	46bd      	mov	sp, r7
 8001350:	b003      	add	sp, #12
 8001352:	bd90      	pop	{r4, r7, pc}
 8001354:	2000049f 	.word	0x2000049f
 8001358:	20000012 	.word	0x20000012
 800135c:	20000490 	.word	0x20000490
 8001360:	20000000 	.word	0x20000000

08001364 <modbus_startup>:

// General Modbus Control Functions ------------------------------------------------------------

int8_t modbus_startup()
{
 8001364:	b580      	push	{r7, lr}
 8001366:	b082      	sub	sp, #8
 8001368:	af00      	add	r7, sp, #0
	int8_t status = HAL_RS485Ex_Init(&huart1, UART_DE_POLARITY_HIGH, 0, 0);
 800136a:	4823      	ldr	r0, [pc, #140]	@ (80013f8 <modbus_startup+0x94>)
 800136c:	2300      	movs	r3, #0
 800136e:	2200      	movs	r2, #0
 8001370:	2100      	movs	r1, #0
 8001372:	f003 fc73 	bl	8004c5c <HAL_RS485Ex_Init>
 8001376:	0003      	movs	r3, r0
 8001378:	001a      	movs	r2, r3
 800137a:	1dfb      	adds	r3, r7, #7
 800137c:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 800137e:	1dfb      	adds	r3, r7, #7
 8001380:	781b      	ldrb	r3, [r3, #0]
 8001382:	b25b      	sxtb	r3, r3
 8001384:	2b00      	cmp	r3, #0
 8001386:	d003      	beq.n	8001390 <modbus_startup+0x2c>
	{
		return status;
 8001388:	1dfb      	adds	r3, r7, #7
 800138a:	781b      	ldrb	r3, [r3, #0]
 800138c:	b25b      	sxtb	r3, r3
 800138e:	e02e      	b.n	80013ee <modbus_startup+0x8a>
	}
	status = HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8);
 8001390:	4b19      	ldr	r3, [pc, #100]	@ (80013f8 <modbus_startup+0x94>)
 8001392:	2100      	movs	r1, #0
 8001394:	0018      	movs	r0, r3
 8001396:	f003 fd25 	bl	8004de4 <HAL_UARTEx_SetTxFifoThreshold>
 800139a:	0003      	movs	r3, r0
 800139c:	001a      	movs	r2, r3
 800139e:	1dfb      	adds	r3, r7, #7
 80013a0:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 80013a2:	1dfb      	adds	r3, r7, #7
 80013a4:	781b      	ldrb	r3, [r3, #0]
 80013a6:	b25b      	sxtb	r3, r3
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d003      	beq.n	80013b4 <modbus_startup+0x50>
	{
		return status;
 80013ac:	1dfb      	adds	r3, r7, #7
 80013ae:	781b      	ldrb	r3, [r3, #0]
 80013b0:	b25b      	sxtb	r3, r3
 80013b2:	e01c      	b.n	80013ee <modbus_startup+0x8a>
	}
	status = HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8);
 80013b4:	4b10      	ldr	r3, [pc, #64]	@ (80013f8 <modbus_startup+0x94>)
 80013b6:	2100      	movs	r1, #0
 80013b8:	0018      	movs	r0, r3
 80013ba:	f003 fd53 	bl	8004e64 <HAL_UARTEx_SetRxFifoThreshold>
 80013be:	0003      	movs	r3, r0
 80013c0:	001a      	movs	r2, r3
 80013c2:	1dfb      	adds	r3, r7, #7
 80013c4:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 80013c6:	1dfb      	adds	r3, r7, #7
 80013c8:	781b      	ldrb	r3, [r3, #0]
 80013ca:	b25b      	sxtb	r3, r3
 80013cc:	2b00      	cmp	r3, #0
 80013ce:	d003      	beq.n	80013d8 <modbus_startup+0x74>
	{
		return status;
 80013d0:	1dfb      	adds	r3, r7, #7
 80013d2:	781b      	ldrb	r3, [r3, #0]
 80013d4:	b25b      	sxtb	r3, r3
 80013d6:	e00a      	b.n	80013ee <modbus_startup+0x8a>
	}
	status = HAL_UARTEx_DisableFifoMode(&huart1);
 80013d8:	4b07      	ldr	r3, [pc, #28]	@ (80013f8 <modbus_startup+0x94>)
 80013da:	0018      	movs	r0, r3
 80013dc:	f003 fcc8 	bl	8004d70 <HAL_UARTEx_DisableFifoMode>
 80013e0:	0003      	movs	r3, r0
 80013e2:	001a      	movs	r2, r3
 80013e4:	1dfb      	adds	r3, r7, #7
 80013e6:	701a      	strb	r2, [r3, #0]
	return status;
 80013e8:	1dfb      	adds	r3, r7, #7
 80013ea:	781b      	ldrb	r3, [r3, #0]
 80013ec:	b25b      	sxtb	r3, r3
}
 80013ee:	0018      	movs	r0, r3
 80013f0:	46bd      	mov	sp, r7
 80013f2:	b002      	add	sp, #8
 80013f4:	bd80      	pop	{r7, pc}
 80013f6:	46c0      	nop			@ (mov r8, r8)
 80013f8:	2000003c 	.word	0x2000003c

080013fc <modbus_shutdown>:

int8_t modbus_shutdown()
{
 80013fc:	b580      	push	{r7, lr}
 80013fe:	b082      	sub	sp, #8
 8001400:	af00      	add	r7, sp, #0
	int8_t status = HAL_UART_AbortReceive(&huart1);
 8001402:	4b10      	ldr	r3, [pc, #64]	@ (8001444 <modbus_shutdown+0x48>)
 8001404:	0018      	movs	r0, r3
 8001406:	f002 f9e3 	bl	80037d0 <HAL_UART_AbortReceive>
 800140a:	0003      	movs	r3, r0
 800140c:	001a      	movs	r2, r3
 800140e:	1dfb      	adds	r3, r7, #7
 8001410:	701a      	strb	r2, [r3, #0]
	if(status != HAL_OK)
 8001412:	1dfb      	adds	r3, r7, #7
 8001414:	781b      	ldrb	r3, [r3, #0]
 8001416:	b25b      	sxtb	r3, r3
 8001418:	2b00      	cmp	r3, #0
 800141a:	d003      	beq.n	8001424 <modbus_shutdown+0x28>
	{
		return status;
 800141c:	1dfb      	adds	r3, r7, #7
 800141e:	781b      	ldrb	r3, [r3, #0]
 8001420:	b25b      	sxtb	r3, r3
 8001422:	e00a      	b.n	800143a <modbus_shutdown+0x3e>
	}
	status = HAL_UART_DeInit(&huart1);
 8001424:	4b07      	ldr	r3, [pc, #28]	@ (8001444 <modbus_shutdown+0x48>)
 8001426:	0018      	movs	r0, r3
 8001428:	f001 fff4 	bl	8003414 <HAL_UART_DeInit>
 800142c:	0003      	movs	r3, r0
 800142e:	001a      	movs	r2, r3
 8001430:	1dfb      	adds	r3, r7, #7
 8001432:	701a      	strb	r2, [r3, #0]

	return status;
 8001434:	1dfb      	adds	r3, r7, #7
 8001436:	781b      	ldrb	r3, [r3, #0]
 8001438:	b25b      	sxtb	r3, r3
}
 800143a:	0018      	movs	r0, r3
 800143c:	46bd      	mov	sp, r7
 800143e:	b002      	add	sp, #8
 8001440:	bd80      	pop	{r7, pc}
 8001442:	46c0      	nop			@ (mov r8, r8)
 8001444:	2000003c 	.word	0x2000003c

08001448 <modbus_change_baud_rate>:

int8_t modbus_change_baud_rate()
{
 8001448:	b590      	push	{r4, r7, lr}
 800144a:	b083      	sub	sp, #12
 800144c:	af00      	add	r7, sp, #0
	int8_t status = 0;
 800144e:	1dfb      	adds	r3, r7, #7
 8001450:	2200      	movs	r2, #0
 8001452:	701a      	strb	r2, [r3, #0]

	switch(holding_register_database[MB_BAUD_RATE])
 8001454:	4b3c      	ldr	r3, [pc, #240]	@ (8001548 <modbus_change_baud_rate+0x100>)
 8001456:	885b      	ldrh	r3, [r3, #2]
 8001458:	2b09      	cmp	r3, #9
 800145a:	d82c      	bhi.n	80014b6 <modbus_change_baud_rate+0x6e>
 800145c:	009a      	lsls	r2, r3, #2
 800145e:	4b3b      	ldr	r3, [pc, #236]	@ (800154c <modbus_change_baud_rate+0x104>)
 8001460:	18d3      	adds	r3, r2, r3
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	469f      	mov	pc, r3
	{
		case BAUD_RATE_4800:
		{
			huart1.Init.BaudRate = 4800;
 8001466:	4b3a      	ldr	r3, [pc, #232]	@ (8001550 <modbus_change_baud_rate+0x108>)
 8001468:	2296      	movs	r2, #150	@ 0x96
 800146a:	0152      	lsls	r2, r2, #5
 800146c:	605a      	str	r2, [r3, #4]
			break;
 800146e:	e049      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		case BAUD_RATE_9600:
		{
			huart1.Init.BaudRate = 9600;
 8001470:	4b37      	ldr	r3, [pc, #220]	@ (8001550 <modbus_change_baud_rate+0x108>)
 8001472:	2296      	movs	r2, #150	@ 0x96
 8001474:	0192      	lsls	r2, r2, #6
 8001476:	605a      	str	r2, [r3, #4]
			break;
 8001478:	e044      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		case BAUD_RATE_19200:
		{
			huart1.Init.BaudRate = 19200;
 800147a:	4b35      	ldr	r3, [pc, #212]	@ (8001550 <modbus_change_baud_rate+0x108>)
 800147c:	2296      	movs	r2, #150	@ 0x96
 800147e:	01d2      	lsls	r2, r2, #7
 8001480:	605a      	str	r2, [r3, #4]
			break;
 8001482:	e03f      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		case BAUD_RATE_38400:
		{
			huart1.Init.BaudRate = 38400;
 8001484:	4b32      	ldr	r3, [pc, #200]	@ (8001550 <modbus_change_baud_rate+0x108>)
 8001486:	2296      	movs	r2, #150	@ 0x96
 8001488:	0212      	lsls	r2, r2, #8
 800148a:	605a      	str	r2, [r3, #4]
			break;
 800148c:	e03a      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		case BAUD_RATE_57600:
		{
			huart1.Init.BaudRate = 57600;
 800148e:	4b30      	ldr	r3, [pc, #192]	@ (8001550 <modbus_change_baud_rate+0x108>)
 8001490:	22e1      	movs	r2, #225	@ 0xe1
 8001492:	0212      	lsls	r2, r2, #8
 8001494:	605a      	str	r2, [r3, #4]
			break;
 8001496:	e035      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		case BAUD_RATE_115200:
		{
			huart1.Init.BaudRate = 115200;
 8001498:	4b2d      	ldr	r3, [pc, #180]	@ (8001550 <modbus_change_baud_rate+0x108>)
 800149a:	22e1      	movs	r2, #225	@ 0xe1
 800149c:	0252      	lsls	r2, r2, #9
 800149e:	605a      	str	r2, [r3, #4]
			break;
 80014a0:	e030      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		case BAUD_RATE_128000:
		{
			huart1.Init.BaudRate = 128000;
 80014a2:	4b2b      	ldr	r3, [pc, #172]	@ (8001550 <modbus_change_baud_rate+0x108>)
 80014a4:	22fa      	movs	r2, #250	@ 0xfa
 80014a6:	0252      	lsls	r2, r2, #9
 80014a8:	605a      	str	r2, [r3, #4]
			break;
 80014aa:	e02b      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		case BAUD_RATE_256000:
		{
			huart1.Init.BaudRate = 256000;
 80014ac:	4b28      	ldr	r3, [pc, #160]	@ (8001550 <modbus_change_baud_rate+0x108>)
 80014ae:	22fa      	movs	r2, #250	@ 0xfa
 80014b0:	0292      	lsls	r2, r2, #10
 80014b2:	605a      	str	r2, [r3, #4]
			break;
 80014b4:	e026      	b.n	8001504 <modbus_change_baud_rate+0xbc>
		}
		default:
		{
			holding_register_database[MB_BAUD_RATE] = BAUD_RATE_9600;
 80014b6:	4b24      	ldr	r3, [pc, #144]	@ (8001548 <modbus_change_baud_rate+0x100>)
 80014b8:	2203      	movs	r2, #3
 80014ba:	805a      	strh	r2, [r3, #2]
			huart1.Init.BaudRate = 9600;
 80014bc:	4b24      	ldr	r3, [pc, #144]	@ (8001550 <modbus_change_baud_rate+0x108>)
 80014be:	2296      	movs	r2, #150	@ 0x96
 80014c0:	0192      	lsls	r2, r2, #6
 80014c2:	605a      	str	r2, [r3, #4]
			status = UART_SetConfig(&huart1);
 80014c4:	4b22      	ldr	r3, [pc, #136]	@ (8001550 <modbus_change_baud_rate+0x108>)
 80014c6:	0018      	movs	r0, r3
 80014c8:	f002 fd94 	bl	8003ff4 <UART_SetConfig>
 80014cc:	0003      	movs	r3, r0
 80014ce:	001a      	movs	r2, r3
 80014d0:	1dfb      	adds	r3, r7, #7
 80014d2:	701a      	strb	r2, [r3, #0]
			if(status == HAL_OK)
 80014d4:	1dfb      	adds	r3, r7, #7
 80014d6:	781b      	ldrb	r3, [r3, #0]
 80014d8:	b25b      	sxtb	r3, r3
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d10d      	bne.n	80014fa <modbus_change_baud_rate+0xb2>
			{
				status = modbus_reset();
 80014de:	1dfc      	adds	r4, r7, #7
 80014e0:	f7ff fe4c 	bl	800117c <modbus_reset>
 80014e4:	0003      	movs	r3, r0
 80014e6:	7023      	strb	r3, [r4, #0]
				if(status != HAL_OK)
 80014e8:	1dfb      	adds	r3, r7, #7
 80014ea:	781b      	ldrb	r3, [r3, #0]
 80014ec:	b25b      	sxtb	r3, r3
 80014ee:	2b00      	cmp	r3, #0
 80014f0:	d003      	beq.n	80014fa <modbus_change_baud_rate+0xb2>
				{
					return status;
 80014f2:	1dfb      	adds	r3, r7, #7
 80014f4:	781b      	ldrb	r3, [r3, #0]
 80014f6:	b25b      	sxtb	r3, r3
 80014f8:	e022      	b.n	8001540 <modbus_change_baud_rate+0xf8>
				}
			}
			return handle_modbus_error(RANGE_ERROR);
 80014fa:	200e      	movs	r0, #14
 80014fc:	f000 f85c 	bl	80015b8 <handle_modbus_error>
 8001500:	0003      	movs	r3, r0
 8001502:	e01d      	b.n	8001540 <modbus_change_baud_rate+0xf8>
		}
	}
	status = UART_SetConfig(&huart1);
 8001504:	4b12      	ldr	r3, [pc, #72]	@ (8001550 <modbus_change_baud_rate+0x108>)
 8001506:	0018      	movs	r0, r3
 8001508:	f002 fd74 	bl	8003ff4 <UART_SetConfig>
 800150c:	0003      	movs	r3, r0
 800150e:	001a      	movs	r2, r3
 8001510:	1dfb      	adds	r3, r7, #7
 8001512:	701a      	strb	r2, [r3, #0]
	if(status == HAL_OK)
 8001514:	1dfb      	adds	r3, r7, #7
 8001516:	781b      	ldrb	r3, [r3, #0]
 8001518:	b25b      	sxtb	r3, r3
 800151a:	2b00      	cmp	r3, #0
 800151c:	d10d      	bne.n	800153a <modbus_change_baud_rate+0xf2>
	{
		// Log error, reset UART
		status = modbus_reset();
 800151e:	1dfc      	adds	r4, r7, #7
 8001520:	f7ff fe2c 	bl	800117c <modbus_reset>
 8001524:	0003      	movs	r3, r0
 8001526:	7023      	strb	r3, [r4, #0]
		if(status != HAL_OK)
 8001528:	1dfb      	adds	r3, r7, #7
 800152a:	781b      	ldrb	r3, [r3, #0]
 800152c:	b25b      	sxtb	r3, r3
 800152e:	2b00      	cmp	r3, #0
 8001530:	d003      	beq.n	800153a <modbus_change_baud_rate+0xf2>
		{
			return status;
 8001532:	1dfb      	adds	r3, r7, #7
 8001534:	781b      	ldrb	r3, [r3, #0]
 8001536:	b25b      	sxtb	r3, r3
 8001538:	e002      	b.n	8001540 <modbus_change_baud_rate+0xf8>
		}
	}

	return modbus_set_rx();
 800153a:	f7ff fe8d 	bl	8001258 <modbus_set_rx>
 800153e:	0003      	movs	r3, r0
}
 8001540:	0018      	movs	r0, r3
 8001542:	46bd      	mov	sp, r7
 8001544:	b003      	add	sp, #12
 8001546:	bd90      	pop	{r4, r7, pc}
 8001548:	20000000 	.word	0x20000000
 800154c:	0800530c 	.word	0x0800530c
 8001550:	2000003c 	.word	0x2000003c

08001554 <get_rx_buffer>:
}


// Low Level Functions -------------------------------------------------------------------------
uint8_t get_rx_buffer(uint8_t index)
{
 8001554:	b580      	push	{r7, lr}
 8001556:	b082      	sub	sp, #8
 8001558:	af00      	add	r7, sp, #0
 800155a:	0002      	movs	r2, r0
 800155c:	1dfb      	adds	r3, r7, #7
 800155e:	701a      	strb	r2, [r3, #0]
	if (index < MODBUS_RX_BUFFER_SIZE - 1)
 8001560:	1dfb      	adds	r3, r7, #7
 8001562:	781b      	ldrb	r3, [r3, #0]
 8001564:	2bff      	cmp	r3, #255	@ 0xff
 8001566:	d01e      	beq.n	80015a6 <get_rx_buffer+0x52>
	{
		return ((start_index + index) > (MODBUS_RX_BUFFER_SIZE - 1))?
 8001568:	4b11      	ldr	r3, [pc, #68]	@ (80015b0 <get_rx_buffer+0x5c>)
 800156a:	881b      	ldrh	r3, [r3, #0]
 800156c:	b29b      	uxth	r3, r3
 800156e:	001a      	movs	r2, r3
 8001570:	1dfb      	adds	r3, r7, #7
 8001572:	781b      	ldrb	r3, [r3, #0]
 8001574:	18d3      	adds	r3, r2, r3
				modbus_rx_buffer[(start_index + index) - MODBUS_RX_BUFFER_SIZE] :
 8001576:	2bff      	cmp	r3, #255	@ 0xff
 8001578:	dd0b      	ble.n	8001592 <get_rx_buffer+0x3e>
 800157a:	4b0d      	ldr	r3, [pc, #52]	@ (80015b0 <get_rx_buffer+0x5c>)
 800157c:	881b      	ldrh	r3, [r3, #0]
 800157e:	b29b      	uxth	r3, r3
 8001580:	001a      	movs	r2, r3
 8001582:	1dfb      	adds	r3, r7, #7
 8001584:	781b      	ldrb	r3, [r3, #0]
 8001586:	18d3      	adds	r3, r2, r3
 8001588:	3b01      	subs	r3, #1
 800158a:	3bff      	subs	r3, #255	@ 0xff
 800158c:	4a09      	ldr	r2, [pc, #36]	@ (80015b4 <get_rx_buffer+0x60>)
 800158e:	5cd3      	ldrb	r3, [r2, r3]
 8001590:	e00a      	b.n	80015a8 <get_rx_buffer+0x54>
				modbus_rx_buffer[start_index + index];
 8001592:	4b07      	ldr	r3, [pc, #28]	@ (80015b0 <get_rx_buffer+0x5c>)
 8001594:	881b      	ldrh	r3, [r3, #0]
 8001596:	b29b      	uxth	r3, r3
 8001598:	001a      	movs	r2, r3
 800159a:	1dfb      	adds	r3, r7, #7
 800159c:	781b      	ldrb	r3, [r3, #0]
 800159e:	18d3      	adds	r3, r2, r3
				modbus_rx_buffer[(start_index + index) - MODBUS_RX_BUFFER_SIZE] :
 80015a0:	4a04      	ldr	r2, [pc, #16]	@ (80015b4 <get_rx_buffer+0x60>)
 80015a2:	5cd3      	ldrb	r3, [r2, r3]
 80015a4:	e000      	b.n	80015a8 <get_rx_buffer+0x54>
	}
	return 0xFF;
 80015a6:	23ff      	movs	r3, #255	@ 0xff
}
 80015a8:	0018      	movs	r0, r3
 80015aa:	46bd      	mov	sp, r7
 80015ac:	b002      	add	sp, #8
 80015ae:	bd80      	pop	{r7, pc}
 80015b0:	20000498 	.word	0x20000498
 80015b4:	20000194 	.word	0x20000194

080015b8 <handle_modbus_error>:

int8_t handle_modbus_error(int8_t error_code)
{
 80015b8:	b580      	push	{r7, lr}
 80015ba:	b082      	sub	sp, #8
 80015bc:	af00      	add	r7, sp, #0
 80015be:	0002      	movs	r2, r0
 80015c0:	1dfb      	adds	r3, r7, #7
 80015c2:	701a      	strb	r2, [r3, #0]
	holding_register_database[MB_ERRORS] |= 1U << (error_code - RANGE_ERROR);
 80015c4:	4b0a      	ldr	r3, [pc, #40]	@ (80015f0 <handle_modbus_error+0x38>)
 80015c6:	891a      	ldrh	r2, [r3, #8]
 80015c8:	1dfb      	adds	r3, r7, #7
 80015ca:	781b      	ldrb	r3, [r3, #0]
 80015cc:	b25b      	sxtb	r3, r3
 80015ce:	3b0e      	subs	r3, #14
 80015d0:	2101      	movs	r1, #1
 80015d2:	4099      	lsls	r1, r3
 80015d4:	000b      	movs	r3, r1
 80015d6:	b29b      	uxth	r3, r3
 80015d8:	4313      	orrs	r3, r2
 80015da:	b29a      	uxth	r2, r3
 80015dc:	4b04      	ldr	r3, [pc, #16]	@ (80015f0 <handle_modbus_error+0x38>)
 80015de:	811a      	strh	r2, [r3, #8]
	return error_code;
 80015e0:	1dfb      	adds	r3, r7, #7
 80015e2:	781b      	ldrb	r3, [r3, #0]
 80015e4:	b25b      	sxtb	r3, r3
}
 80015e6:	0018      	movs	r0, r3
 80015e8:	46bd      	mov	sp, r7
 80015ea:	b002      	add	sp, #8
 80015ec:	bd80      	pop	{r7, pc}
 80015ee:	46c0      	nop			@ (mov r8, r8)
 80015f0:	20000000 	.word	0x20000000

080015f4 <crc_16>:

// Private Functions ---------------------------------------------------------------------------

uint16_t crc_16(uint8_t *data, uint8_t size)
{
 80015f4:	b580      	push	{r7, lr}
 80015f6:	b084      	sub	sp, #16
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	6078      	str	r0, [r7, #4]
 80015fc:	000a      	movs	r2, r1
 80015fe:	1cfb      	adds	r3, r7, #3
 8001600:	701a      	strb	r2, [r3, #0]
	uint8_t crc_hi = 0xFF;
 8001602:	230f      	movs	r3, #15
 8001604:	18fb      	adds	r3, r7, r3
 8001606:	22ff      	movs	r2, #255	@ 0xff
 8001608:	701a      	strb	r2, [r3, #0]
	uint8_t crc_low = 0xFF;
 800160a:	230e      	movs	r3, #14
 800160c:	18fb      	adds	r3, r7, r3
 800160e:	22ff      	movs	r2, #255	@ 0xff
 8001610:	701a      	strb	r2, [r3, #0]
	 unsigned int i; /* will index into CRC lookup */

	/* pass through message buffer */
	while (size--)
 8001612:	e019      	b.n	8001648 <crc_16+0x54>
	{
		i = crc_low ^ *data++; /* calculate the CRC  */
 8001614:	687b      	ldr	r3, [r7, #4]
 8001616:	1c5a      	adds	r2, r3, #1
 8001618:	607a      	str	r2, [r7, #4]
 800161a:	781a      	ldrb	r2, [r3, #0]
 800161c:	200e      	movs	r0, #14
 800161e:	183b      	adds	r3, r7, r0
 8001620:	781b      	ldrb	r3, [r3, #0]
 8001622:	4053      	eors	r3, r2
 8001624:	b2db      	uxtb	r3, r3
 8001626:	60bb      	str	r3, [r7, #8]
		crc_low = crc_hi ^ table_crc_hi[i];
 8001628:	4a13      	ldr	r2, [pc, #76]	@ (8001678 <crc_16+0x84>)
 800162a:	68bb      	ldr	r3, [r7, #8]
 800162c:	18d3      	adds	r3, r2, r3
 800162e:	7819      	ldrb	r1, [r3, #0]
 8001630:	183b      	adds	r3, r7, r0
 8001632:	200f      	movs	r0, #15
 8001634:	183a      	adds	r2, r7, r0
 8001636:	7812      	ldrb	r2, [r2, #0]
 8001638:	404a      	eors	r2, r1
 800163a:	701a      	strb	r2, [r3, #0]
		crc_hi = table_crc_lo[i];
 800163c:	183b      	adds	r3, r7, r0
 800163e:	490f      	ldr	r1, [pc, #60]	@ (800167c <crc_16+0x88>)
 8001640:	68ba      	ldr	r2, [r7, #8]
 8001642:	188a      	adds	r2, r1, r2
 8001644:	7812      	ldrb	r2, [r2, #0]
 8001646:	701a      	strb	r2, [r3, #0]
	while (size--)
 8001648:	1cfb      	adds	r3, r7, #3
 800164a:	781b      	ldrb	r3, [r3, #0]
 800164c:	1cfa      	adds	r2, r7, #3
 800164e:	1e59      	subs	r1, r3, #1
 8001650:	7011      	strb	r1, [r2, #0]
 8001652:	2b00      	cmp	r3, #0
 8001654:	d1de      	bne.n	8001614 <crc_16+0x20>
	}

	return (crc_hi << 8 | crc_low);
 8001656:	230f      	movs	r3, #15
 8001658:	18fb      	adds	r3, r7, r3
 800165a:	781b      	ldrb	r3, [r3, #0]
 800165c:	021b      	lsls	r3, r3, #8
 800165e:	b21a      	sxth	r2, r3
 8001660:	230e      	movs	r3, #14
 8001662:	18fb      	adds	r3, r7, r3
 8001664:	781b      	ldrb	r3, [r3, #0]
 8001666:	b21b      	sxth	r3, r3
 8001668:	4313      	orrs	r3, r2
 800166a:	b21b      	sxth	r3, r3
 800166c:	b29b      	uxth	r3, r3
}
 800166e:	0018      	movs	r0, r3
 8001670:	46bd      	mov	sp, r7
 8001672:	b004      	add	sp, #16
 8001674:	bd80      	pop	{r7, pc}
 8001676:	46c0      	nop			@ (mov r8, r8)
 8001678:	080050f8 	.word	0x080050f8
 800167c:	080051f8 	.word	0x080051f8

08001680 <handle_chunk_miss>:

int8_t handle_chunk_miss()
{
 8001680:	b590      	push	{r4, r7, lr}
 8001682:	b083      	sub	sp, #12
 8001684:	af00      	add	r7, sp, #0
	if(modbus_header == 0)
 8001686:	4b15      	ldr	r3, [pc, #84]	@ (80016dc <handle_chunk_miss+0x5c>)
 8001688:	881b      	ldrh	r3, [r3, #0]
 800168a:	b29b      	uxth	r3, r3
 800168c:	2b00      	cmp	r3, #0
 800168e:	d120      	bne.n	80016d2 <handle_chunk_miss+0x52>
	{
		if(HAL_GetTick() - chunk_time > 10)
 8001690:	f000 fa84 	bl	8001b9c <HAL_GetTick>
 8001694:	0002      	movs	r2, r0
 8001696:	4b12      	ldr	r3, [pc, #72]	@ (80016e0 <handle_chunk_miss+0x60>)
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	1ad3      	subs	r3, r2, r3
 800169c:	2b0a      	cmp	r3, #10
 800169e:	d918      	bls.n	80016d2 <handle_chunk_miss+0x52>
		{
			modbus_header = 1;
 80016a0:	4b0e      	ldr	r3, [pc, #56]	@ (80016dc <handle_chunk_miss+0x5c>)
 80016a2:	2201      	movs	r2, #1
 80016a4:	801a      	strh	r2, [r3, #0]
			int8_t status = HAL_UART_Abort(&huart1);
 80016a6:	4b0f      	ldr	r3, [pc, #60]	@ (80016e4 <handle_chunk_miss+0x64>)
 80016a8:	0018      	movs	r0, r3
 80016aa:	f001 ff85 	bl	80035b8 <HAL_UART_Abort>
 80016ae:	0003      	movs	r3, r0
 80016b0:	001a      	movs	r2, r3
 80016b2:	1dfb      	adds	r3, r7, #7
 80016b4:	701a      	strb	r2, [r3, #0]
			if(status == HAL_OK)
 80016b6:	1dfb      	adds	r3, r7, #7
 80016b8:	781b      	ldrb	r3, [r3, #0]
 80016ba:	b25b      	sxtb	r3, r3
 80016bc:	2b00      	cmp	r3, #0
 80016be:	d104      	bne.n	80016ca <handle_chunk_miss+0x4a>
			{
				status = modbus_set_rx();
 80016c0:	1dfc      	adds	r4, r7, #7
 80016c2:	f7ff fdc9 	bl	8001258 <modbus_set_rx>
 80016c6:	0003      	movs	r3, r0
 80016c8:	7023      	strb	r3, [r4, #0]
			}
			return status;
 80016ca:	1dfb      	adds	r3, r7, #7
 80016cc:	781b      	ldrb	r3, [r3, #0]
 80016ce:	b25b      	sxtb	r3, r3
 80016d0:	e000      	b.n	80016d4 <handle_chunk_miss+0x54>
		}
	}
	return MB_SUCCESS;
 80016d2:	2300      	movs	r3, #0
}
 80016d4:	0018      	movs	r0, r3
 80016d6:	46bd      	mov	sp, r7
 80016d8:	b003      	add	sp, #12
 80016da:	bd90      	pop	{r4, r7, pc}
 80016dc:	20000010 	.word	0x20000010
 80016e0:	20000494 	.word	0x20000494
 80016e4:	2000003c 	.word	0x2000003c

080016e8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80016e8:	b580      	push	{r7, lr}
 80016ea:	b082      	sub	sp, #8
 80016ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80016ee:	4b0f      	ldr	r3, [pc, #60]	@ (800172c <HAL_MspInit+0x44>)
 80016f0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80016f2:	4b0e      	ldr	r3, [pc, #56]	@ (800172c <HAL_MspInit+0x44>)
 80016f4:	2101      	movs	r1, #1
 80016f6:	430a      	orrs	r2, r1
 80016f8:	641a      	str	r2, [r3, #64]	@ 0x40
 80016fa:	4b0c      	ldr	r3, [pc, #48]	@ (800172c <HAL_MspInit+0x44>)
 80016fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016fe:	2201      	movs	r2, #1
 8001700:	4013      	ands	r3, r2
 8001702:	607b      	str	r3, [r7, #4]
 8001704:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001706:	4b09      	ldr	r3, [pc, #36]	@ (800172c <HAL_MspInit+0x44>)
 8001708:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800170a:	4b08      	ldr	r3, [pc, #32]	@ (800172c <HAL_MspInit+0x44>)
 800170c:	2180      	movs	r1, #128	@ 0x80
 800170e:	0549      	lsls	r1, r1, #21
 8001710:	430a      	orrs	r2, r1
 8001712:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001714:	4b05      	ldr	r3, [pc, #20]	@ (800172c <HAL_MspInit+0x44>)
 8001716:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8001718:	2380      	movs	r3, #128	@ 0x80
 800171a:	055b      	lsls	r3, r3, #21
 800171c:	4013      	ands	r3, r2
 800171e:	603b      	str	r3, [r7, #0]
 8001720:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001722:	46c0      	nop			@ (mov r8, r8)
 8001724:	46bd      	mov	sp, r7
 8001726:	b002      	add	sp, #8
 8001728:	bd80      	pop	{r7, pc}
 800172a:	46c0      	nop			@ (mov r8, r8)
 800172c:	40021000 	.word	0x40021000

08001730 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001730:	b590      	push	{r4, r7, lr}
 8001732:	b095      	sub	sp, #84	@ 0x54
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001738:	233c      	movs	r3, #60	@ 0x3c
 800173a:	18fb      	adds	r3, r7, r3
 800173c:	0018      	movs	r0, r3
 800173e:	2314      	movs	r3, #20
 8001740:	001a      	movs	r2, r3
 8001742:	2100      	movs	r1, #0
 8001744:	f003 fc96 	bl	8005074 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001748:	241c      	movs	r4, #28
 800174a:	193b      	adds	r3, r7, r4
 800174c:	0018      	movs	r0, r3
 800174e:	2320      	movs	r3, #32
 8001750:	001a      	movs	r2, r3
 8001752:	2100      	movs	r1, #0
 8001754:	f003 fc8e 	bl	8005074 <memset>
  if(huart->Instance==USART1)
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	681b      	ldr	r3, [r3, #0]
 800175c:	4a74      	ldr	r2, [pc, #464]	@ (8001930 <HAL_UART_MspInit+0x200>)
 800175e:	4293      	cmp	r3, r2
 8001760:	d000      	beq.n	8001764 <HAL_UART_MspInit+0x34>
 8001762:	e0e1      	b.n	8001928 <HAL_UART_MspInit+0x1f8>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001764:	193b      	adds	r3, r7, r4
 8001766:	2201      	movs	r2, #1
 8001768:	601a      	str	r2, [r3, #0]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 800176a:	193b      	adds	r3, r7, r4
 800176c:	2200      	movs	r2, #0
 800176e:	609a      	str	r2, [r3, #8]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001770:	193b      	adds	r3, r7, r4
 8001772:	0018      	movs	r0, r3
 8001774:	f001 fd52 	bl	800321c <HAL_RCCEx_PeriphCLKConfig>
 8001778:	1e03      	subs	r3, r0, #0
 800177a:	d001      	beq.n	8001780 <HAL_UART_MspInit+0x50>
    {
      Error_Handler();
 800177c:	f7ff f95e 	bl	8000a3c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001780:	4b6c      	ldr	r3, [pc, #432]	@ (8001934 <HAL_UART_MspInit+0x204>)
 8001782:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001784:	4b6b      	ldr	r3, [pc, #428]	@ (8001934 <HAL_UART_MspInit+0x204>)
 8001786:	2180      	movs	r1, #128	@ 0x80
 8001788:	01c9      	lsls	r1, r1, #7
 800178a:	430a      	orrs	r2, r1
 800178c:	641a      	str	r2, [r3, #64]	@ 0x40
 800178e:	4b69      	ldr	r3, [pc, #420]	@ (8001934 <HAL_UART_MspInit+0x204>)
 8001790:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001792:	2380      	movs	r3, #128	@ 0x80
 8001794:	01db      	lsls	r3, r3, #7
 8001796:	4013      	ands	r3, r2
 8001798:	61bb      	str	r3, [r7, #24]
 800179a:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800179c:	4b65      	ldr	r3, [pc, #404]	@ (8001934 <HAL_UART_MspInit+0x204>)
 800179e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80017a0:	4b64      	ldr	r3, [pc, #400]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017a2:	2104      	movs	r1, #4
 80017a4:	430a      	orrs	r2, r1
 80017a6:	635a      	str	r2, [r3, #52]	@ 0x34
 80017a8:	4b62      	ldr	r3, [pc, #392]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017aa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80017ac:	2204      	movs	r2, #4
 80017ae:	4013      	ands	r3, r2
 80017b0:	617b      	str	r3, [r7, #20]
 80017b2:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017b4:	4b5f      	ldr	r3, [pc, #380]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017b6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80017b8:	4b5e      	ldr	r3, [pc, #376]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017ba:	2102      	movs	r1, #2
 80017bc:	430a      	orrs	r2, r1
 80017be:	635a      	str	r2, [r3, #52]	@ 0x34
 80017c0:	4b5c      	ldr	r3, [pc, #368]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017c2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80017c4:	2202      	movs	r2, #2
 80017c6:	4013      	ands	r3, r2
 80017c8:	613b      	str	r3, [r7, #16]
 80017ca:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80017cc:	4b59      	ldr	r3, [pc, #356]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017ce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80017d0:	4b58      	ldr	r3, [pc, #352]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017d2:	2101      	movs	r1, #1
 80017d4:	430a      	orrs	r2, r1
 80017d6:	635a      	str	r2, [r3, #52]	@ 0x34
 80017d8:	4b56      	ldr	r3, [pc, #344]	@ (8001934 <HAL_UART_MspInit+0x204>)
 80017da:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80017dc:	2201      	movs	r2, #1
 80017de:	4013      	ands	r3, r2
 80017e0:	60fb      	str	r3, [r7, #12]
 80017e2:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PC14-OSCX_IN(PC14)     ------> USART1_TX
    PB2     ------> USART1_RX
    PA12 [PA10]     ------> USART1_DE
    */
    GPIO_InitStruct.Pin = GPIO_PIN_14;
 80017e4:	213c      	movs	r1, #60	@ 0x3c
 80017e6:	187b      	adds	r3, r7, r1
 80017e8:	2280      	movs	r2, #128	@ 0x80
 80017ea:	01d2      	lsls	r2, r2, #7
 80017ec:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017ee:	000c      	movs	r4, r1
 80017f0:	193b      	adds	r3, r7, r4
 80017f2:	2202      	movs	r2, #2
 80017f4:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017f6:	193b      	adds	r3, r7, r4
 80017f8:	2200      	movs	r2, #0
 80017fa:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017fc:	193b      	adds	r3, r7, r4
 80017fe:	2200      	movs	r2, #0
 8001800:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 8001802:	193b      	adds	r3, r7, r4
 8001804:	2200      	movs	r2, #0
 8001806:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001808:	193b      	adds	r3, r7, r4
 800180a:	4a4b      	ldr	r2, [pc, #300]	@ (8001938 <HAL_UART_MspInit+0x208>)
 800180c:	0019      	movs	r1, r3
 800180e:	0010      	movs	r0, r2
 8001810:	f000 feb4 	bl	800257c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001814:	193b      	adds	r3, r7, r4
 8001816:	2204      	movs	r2, #4
 8001818:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800181a:	193b      	adds	r3, r7, r4
 800181c:	2202      	movs	r2, #2
 800181e:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001820:	193b      	adds	r3, r7, r4
 8001822:	2200      	movs	r2, #0
 8001824:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001826:	193b      	adds	r3, r7, r4
 8001828:	2200      	movs	r2, #0
 800182a:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 800182c:	193b      	adds	r3, r7, r4
 800182e:	2200      	movs	r2, #0
 8001830:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001832:	193b      	adds	r3, r7, r4
 8001834:	4a41      	ldr	r2, [pc, #260]	@ (800193c <HAL_UART_MspInit+0x20c>)
 8001836:	0019      	movs	r1, r3
 8001838:	0010      	movs	r0, r2
 800183a:	f000 fe9f 	bl	800257c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 800183e:	0021      	movs	r1, r4
 8001840:	187b      	adds	r3, r7, r1
 8001842:	2280      	movs	r2, #128	@ 0x80
 8001844:	0152      	lsls	r2, r2, #5
 8001846:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001848:	187b      	adds	r3, r7, r1
 800184a:	2202      	movs	r2, #2
 800184c:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800184e:	187b      	adds	r3, r7, r1
 8001850:	2200      	movs	r2, #0
 8001852:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001854:	187b      	adds	r3, r7, r1
 8001856:	2200      	movs	r2, #0
 8001858:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 800185a:	187b      	adds	r3, r7, r1
 800185c:	2201      	movs	r2, #1
 800185e:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001860:	187a      	adds	r2, r7, r1
 8001862:	23a0      	movs	r3, #160	@ 0xa0
 8001864:	05db      	lsls	r3, r3, #23
 8001866:	0011      	movs	r1, r2
 8001868:	0018      	movs	r0, r3
 800186a:	f000 fe87 	bl	800257c <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA1_Channel1;
 800186e:	4b34      	ldr	r3, [pc, #208]	@ (8001940 <HAL_UART_MspInit+0x210>)
 8001870:	4a34      	ldr	r2, [pc, #208]	@ (8001944 <HAL_UART_MspInit+0x214>)
 8001872:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Request = DMA_REQUEST_USART1_RX;
 8001874:	4b32      	ldr	r3, [pc, #200]	@ (8001940 <HAL_UART_MspInit+0x210>)
 8001876:	2232      	movs	r2, #50	@ 0x32
 8001878:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800187a:	4b31      	ldr	r3, [pc, #196]	@ (8001940 <HAL_UART_MspInit+0x210>)
 800187c:	2200      	movs	r2, #0
 800187e:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001880:	4b2f      	ldr	r3, [pc, #188]	@ (8001940 <HAL_UART_MspInit+0x210>)
 8001882:	2200      	movs	r2, #0
 8001884:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 8001886:	4b2e      	ldr	r3, [pc, #184]	@ (8001940 <HAL_UART_MspInit+0x210>)
 8001888:	2280      	movs	r2, #128	@ 0x80
 800188a:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800188c:	4b2c      	ldr	r3, [pc, #176]	@ (8001940 <HAL_UART_MspInit+0x210>)
 800188e:	2200      	movs	r2, #0
 8001890:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001892:	4b2b      	ldr	r3, [pc, #172]	@ (8001940 <HAL_UART_MspInit+0x210>)
 8001894:	2200      	movs	r2, #0
 8001896:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 8001898:	4b29      	ldr	r3, [pc, #164]	@ (8001940 <HAL_UART_MspInit+0x210>)
 800189a:	2200      	movs	r2, #0
 800189c:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 800189e:	4b28      	ldr	r3, [pc, #160]	@ (8001940 <HAL_UART_MspInit+0x210>)
 80018a0:	22c0      	movs	r2, #192	@ 0xc0
 80018a2:	0192      	lsls	r2, r2, #6
 80018a4:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 80018a6:	4b26      	ldr	r3, [pc, #152]	@ (8001940 <HAL_UART_MspInit+0x210>)
 80018a8:	0018      	movs	r0, r3
 80018aa:	f000 fab5 	bl	8001e18 <HAL_DMA_Init>
 80018ae:	1e03      	subs	r3, r0, #0
 80018b0:	d001      	beq.n	80018b6 <HAL_UART_MspInit+0x186>
    {
      Error_Handler();
 80018b2:	f7ff f8c3 	bl	8000a3c <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	2180      	movs	r1, #128	@ 0x80
 80018ba:	4a21      	ldr	r2, [pc, #132]	@ (8001940 <HAL_UART_MspInit+0x210>)
 80018bc:	505a      	str	r2, [r3, r1]
 80018be:	4b20      	ldr	r3, [pc, #128]	@ (8001940 <HAL_UART_MspInit+0x210>)
 80018c0:	687a      	ldr	r2, [r7, #4]
 80018c2:	629a      	str	r2, [r3, #40]	@ 0x28

    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA1_Channel2;
 80018c4:	4b20      	ldr	r3, [pc, #128]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018c6:	4a21      	ldr	r2, [pc, #132]	@ (800194c <HAL_UART_MspInit+0x21c>)
 80018c8:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 80018ca:	4b1f      	ldr	r3, [pc, #124]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018cc:	2233      	movs	r2, #51	@ 0x33
 80018ce:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80018d0:	4b1d      	ldr	r3, [pc, #116]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018d2:	2210      	movs	r2, #16
 80018d4:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80018d6:	4b1c      	ldr	r3, [pc, #112]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018d8:	2200      	movs	r2, #0
 80018da:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 80018dc:	4b1a      	ldr	r3, [pc, #104]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018de:	2280      	movs	r2, #128	@ 0x80
 80018e0:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80018e2:	4b19      	ldr	r3, [pc, #100]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018e4:	2200      	movs	r2, #0
 80018e6:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80018e8:	4b17      	ldr	r3, [pc, #92]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018ea:	2200      	movs	r2, #0
 80018ec:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 80018ee:	4b16      	ldr	r3, [pc, #88]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018f0:	2200      	movs	r2, #0
 80018f2:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 80018f4:	4b14      	ldr	r3, [pc, #80]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018f6:	22c0      	movs	r2, #192	@ 0xc0
 80018f8:	0192      	lsls	r2, r2, #6
 80018fa:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 80018fc:	4b12      	ldr	r3, [pc, #72]	@ (8001948 <HAL_UART_MspInit+0x218>)
 80018fe:	0018      	movs	r0, r3
 8001900:	f000 fa8a 	bl	8001e18 <HAL_DMA_Init>
 8001904:	1e03      	subs	r3, r0, #0
 8001906:	d001      	beq.n	800190c <HAL_UART_MspInit+0x1dc>
    {
      Error_Handler();
 8001908:	f7ff f898 	bl	8000a3c <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	4a0e      	ldr	r2, [pc, #56]	@ (8001948 <HAL_UART_MspInit+0x218>)
 8001910:	67da      	str	r2, [r3, #124]	@ 0x7c
 8001912:	4b0d      	ldr	r3, [pc, #52]	@ (8001948 <HAL_UART_MspInit+0x218>)
 8001914:	687a      	ldr	r2, [r7, #4]
 8001916:	629a      	str	r2, [r3, #40]	@ 0x28

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8001918:	2200      	movs	r2, #0
 800191a:	2100      	movs	r1, #0
 800191c:	201b      	movs	r0, #27
 800191e:	f000 fa39 	bl	8001d94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001922:	201b      	movs	r0, #27
 8001924:	f000 fa4b 	bl	8001dbe <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART1_MspInit 1 */

  }

}
 8001928:	46c0      	nop			@ (mov r8, r8)
 800192a:	46bd      	mov	sp, r7
 800192c:	b015      	add	sp, #84	@ 0x54
 800192e:	bd90      	pop	{r4, r7, pc}
 8001930:	40013800 	.word	0x40013800
 8001934:	40021000 	.word	0x40021000
 8001938:	50000800 	.word	0x50000800
 800193c:	50000400 	.word	0x50000400
 8001940:	200000d0 	.word	0x200000d0
 8001944:	40020008 	.word	0x40020008
 8001948:	2000012c 	.word	0x2000012c
 800194c:	4002001c 	.word	0x4002001c

08001950 <HAL_UART_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
{
 8001950:	b580      	push	{r7, lr}
 8001952:	b082      	sub	sp, #8
 8001954:	af00      	add	r7, sp, #0
 8001956:	6078      	str	r0, [r7, #4]
  if(huart->Instance==USART1)
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	4a17      	ldr	r2, [pc, #92]	@ (80019bc <HAL_UART_MspDeInit+0x6c>)
 800195e:	4293      	cmp	r3, r2
 8001960:	d127      	bne.n	80019b2 <HAL_UART_MspDeInit+0x62>
  {
  /* USER CODE BEGIN USART1_MspDeInit 0 */

  /* USER CODE END USART1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_USART1_CLK_DISABLE();
 8001962:	4b17      	ldr	r3, [pc, #92]	@ (80019c0 <HAL_UART_MspDeInit+0x70>)
 8001964:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001966:	4b16      	ldr	r3, [pc, #88]	@ (80019c0 <HAL_UART_MspDeInit+0x70>)
 8001968:	4916      	ldr	r1, [pc, #88]	@ (80019c4 <HAL_UART_MspDeInit+0x74>)
 800196a:	400a      	ands	r2, r1
 800196c:	641a      	str	r2, [r3, #64]	@ 0x40
    /**USART1 GPIO Configuration
    PC14-OSCX_IN(PC14)     ------> USART1_TX
    PB2     ------> USART1_RX
    PA12 [PA10]     ------> USART1_DE
    */
    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_14);
 800196e:	2380      	movs	r3, #128	@ 0x80
 8001970:	01db      	lsls	r3, r3, #7
 8001972:	4a15      	ldr	r2, [pc, #84]	@ (80019c8 <HAL_UART_MspDeInit+0x78>)
 8001974:	0019      	movs	r1, r3
 8001976:	0010      	movs	r0, r2
 8001978:	f000 ff72 	bl	8002860 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 800197c:	4b13      	ldr	r3, [pc, #76]	@ (80019cc <HAL_UART_MspDeInit+0x7c>)
 800197e:	2104      	movs	r1, #4
 8001980:	0018      	movs	r0, r3
 8001982:	f000 ff6d 	bl	8002860 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_12);
 8001986:	2380      	movs	r3, #128	@ 0x80
 8001988:	015a      	lsls	r2, r3, #5
 800198a:	23a0      	movs	r3, #160	@ 0xa0
 800198c:	05db      	lsls	r3, r3, #23
 800198e:	0011      	movs	r1, r2
 8001990:	0018      	movs	r0, r3
 8001992:	f000 ff65 	bl	8002860 <HAL_GPIO_DeInit>

    /* USART1 DMA DeInit */
    HAL_DMA_DeInit(huart->hdmarx);
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	2280      	movs	r2, #128	@ 0x80
 800199a:	589b      	ldr	r3, [r3, r2]
 800199c:	0018      	movs	r0, r3
 800199e:	f000 fac5 	bl	8001f2c <HAL_DMA_DeInit>
    HAL_DMA_DeInit(huart->hdmatx);
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80019a6:	0018      	movs	r0, r3
 80019a8:	f000 fac0 	bl	8001f2c <HAL_DMA_DeInit>

    /* USART1 interrupt DeInit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
 80019ac:	201b      	movs	r0, #27
 80019ae:	f000 fa16 	bl	8001dde <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }

}
 80019b2:	46c0      	nop			@ (mov r8, r8)
 80019b4:	46bd      	mov	sp, r7
 80019b6:	b002      	add	sp, #8
 80019b8:	bd80      	pop	{r7, pc}
 80019ba:	46c0      	nop			@ (mov r8, r8)
 80019bc:	40013800 	.word	0x40013800
 80019c0:	40021000 	.word	0x40021000
 80019c4:	ffffbfff 	.word	0xffffbfff
 80019c8:	50000800 	.word	0x50000800
 80019cc:	50000400 	.word	0x50000400

080019d0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80019d0:	b580      	push	{r7, lr}
 80019d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80019d4:	46c0      	nop			@ (mov r8, r8)
 80019d6:	e7fd      	b.n	80019d4 <NMI_Handler+0x4>

080019d8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80019d8:	b580      	push	{r7, lr}
 80019da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80019dc:	46c0      	nop			@ (mov r8, r8)
 80019de:	e7fd      	b.n	80019dc <HardFault_Handler+0x4>

080019e0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80019e0:	b580      	push	{r7, lr}
 80019e2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80019e4:	46c0      	nop			@ (mov r8, r8)
 80019e6:	46bd      	mov	sp, r7
 80019e8:	bd80      	pop	{r7, pc}

080019ea <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80019ea:	b580      	push	{r7, lr}
 80019ec:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80019ee:	46c0      	nop			@ (mov r8, r8)
 80019f0:	46bd      	mov	sp, r7
 80019f2:	bd80      	pop	{r7, pc}

080019f4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80019f4:	b580      	push	{r7, lr}
 80019f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80019f8:	f000 f8be 	bl	8001b78 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80019fc:	46c0      	nop			@ (mov r8, r8)
 80019fe:	46bd      	mov	sp, r7
 8001a00:	bd80      	pop	{r7, pc}
	...

08001a04 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 1 interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8001a04:	b580      	push	{r7, lr}
 8001a06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */

  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 8001a08:	4b03      	ldr	r3, [pc, #12]	@ (8001a18 <DMA1_Channel1_IRQHandler+0x14>)
 8001a0a:	0018      	movs	r0, r3
 8001a0c:	f000 fc6a 	bl	80022e4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8001a10:	46c0      	nop			@ (mov r8, r8)
 8001a12:	46bd      	mov	sp, r7
 8001a14:	bd80      	pop	{r7, pc}
 8001a16:	46c0      	nop			@ (mov r8, r8)
 8001a18:	200000d0 	.word	0x200000d0

08001a1c <DMA1_Channel2_3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 2 and channel 3 interrupts.
  */
void DMA1_Channel2_3_IRQHandler(void)
{
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */

  /* USER CODE END DMA1_Channel2_3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 8001a20:	4b03      	ldr	r3, [pc, #12]	@ (8001a30 <DMA1_Channel2_3_IRQHandler+0x14>)
 8001a22:	0018      	movs	r0, r3
 8001a24:	f000 fc5e 	bl	80022e4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */

  /* USER CODE END DMA1_Channel2_3_IRQn 1 */
}
 8001a28:	46c0      	nop			@ (mov r8, r8)
 8001a2a:	46bd      	mov	sp, r7
 8001a2c:	bd80      	pop	{r7, pc}
 8001a2e:	46c0      	nop			@ (mov r8, r8)
 8001a30:	2000012c 	.word	0x2000012c

08001a34 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 interrupt.
  */
void USART1_IRQHandler(void)
{
 8001a34:	b580      	push	{r7, lr}
 8001a36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8001a38:	4b03      	ldr	r3, [pc, #12]	@ (8001a48 <USART1_IRQHandler+0x14>)
 8001a3a:	0018      	movs	r0, r3
 8001a3c:	f001 ff7c 	bl	8003938 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8001a40:	46c0      	nop			@ (mov r8, r8)
 8001a42:	46bd      	mov	sp, r7
 8001a44:	bd80      	pop	{r7, pc}
 8001a46:	46c0      	nop			@ (mov r8, r8)
 8001a48:	2000003c 	.word	0x2000003c

08001a4c <SystemInit>:
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	af00      	add	r7, sp, #0
 8001a50:	4b03      	ldr	r3, [pc, #12]	@ (8001a60 <SystemInit+0x14>)
 8001a52:	2280      	movs	r2, #128	@ 0x80
 8001a54:	0512      	lsls	r2, r2, #20
 8001a56:	609a      	str	r2, [r3, #8]
 8001a58:	46c0      	nop			@ (mov r8, r8)
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}
 8001a5e:	46c0      	nop			@ (mov r8, r8)
 8001a60:	e000ed00 	.word	0xe000ed00

08001a64 <Reset_Handler>:
 8001a64:	480d      	ldr	r0, [pc, #52]	@ (8001a9c <LoopForever+0x2>)
 8001a66:	4685      	mov	sp, r0
 8001a68:	f7ff fff0 	bl	8001a4c <SystemInit>
 8001a6c:	2100      	movs	r1, #0
 8001a6e:	e003      	b.n	8001a78 <LoopCopyDataInit>

08001a70 <CopyDataInit>:
 8001a70:	4b0b      	ldr	r3, [pc, #44]	@ (8001aa0 <LoopForever+0x6>)
 8001a72:	585b      	ldr	r3, [r3, r1]
 8001a74:	5043      	str	r3, [r0, r1]
 8001a76:	3104      	adds	r1, #4

08001a78 <LoopCopyDataInit>:
 8001a78:	480a      	ldr	r0, [pc, #40]	@ (8001aa4 <LoopForever+0xa>)
 8001a7a:	4b0b      	ldr	r3, [pc, #44]	@ (8001aa8 <LoopForever+0xe>)
 8001a7c:	1842      	adds	r2, r0, r1
 8001a7e:	429a      	cmp	r2, r3
 8001a80:	d3f6      	bcc.n	8001a70 <CopyDataInit>
 8001a82:	4a0a      	ldr	r2, [pc, #40]	@ (8001aac <LoopForever+0x12>)
 8001a84:	e002      	b.n	8001a8c <LoopFillZerobss>

08001a86 <FillZerobss>:
 8001a86:	2300      	movs	r3, #0
 8001a88:	6013      	str	r3, [r2, #0]
 8001a8a:	3204      	adds	r2, #4

08001a8c <LoopFillZerobss>:
 8001a8c:	4b08      	ldr	r3, [pc, #32]	@ (8001ab0 <LoopForever+0x16>)
 8001a8e:	429a      	cmp	r2, r3
 8001a90:	d3f9      	bcc.n	8001a86 <FillZerobss>
 8001a92:	f003 faf7 	bl	8005084 <__libc_init_array>
 8001a96:	f7fe fcad 	bl	80003f4 <main>

08001a9a <LoopForever>:
 8001a9a:	e7fe      	b.n	8001a9a <LoopForever>
 8001a9c:	20006000 	.word	0x20006000
 8001aa0:	080053c4 	.word	0x080053c4
 8001aa4:	20000000 	.word	0x20000000
 8001aa8:	20000020 	.word	0x20000020
 8001aac:	20000020 	.word	0x20000020
 8001ab0:	200004a4 	.word	0x200004a4

08001ab4 <ADC1_IRQHandler>:
 8001ab4:	e7fe      	b.n	8001ab4 <ADC1_IRQHandler>

08001ab6 <HAL_Init>:
 8001ab6:	b580      	push	{r7, lr}
 8001ab8:	b082      	sub	sp, #8
 8001aba:	af00      	add	r7, sp, #0
 8001abc:	1dfb      	adds	r3, r7, #7
 8001abe:	2200      	movs	r2, #0
 8001ac0:	701a      	strb	r2, [r3, #0]
 8001ac2:	2003      	movs	r0, #3
 8001ac4:	f000 f80e 	bl	8001ae4 <HAL_InitTick>
 8001ac8:	1e03      	subs	r3, r0, #0
 8001aca:	d003      	beq.n	8001ad4 <HAL_Init+0x1e>
 8001acc:	1dfb      	adds	r3, r7, #7
 8001ace:	2201      	movs	r2, #1
 8001ad0:	701a      	strb	r2, [r3, #0]
 8001ad2:	e001      	b.n	8001ad8 <HAL_Init+0x22>
 8001ad4:	f7ff fe08 	bl	80016e8 <HAL_MspInit>
 8001ad8:	1dfb      	adds	r3, r7, #7
 8001ada:	781b      	ldrb	r3, [r3, #0]
 8001adc:	0018      	movs	r0, r3
 8001ade:	46bd      	mov	sp, r7
 8001ae0:	b002      	add	sp, #8
 8001ae2:	bd80      	pop	{r7, pc}

08001ae4 <HAL_InitTick>:
 8001ae4:	b590      	push	{r4, r7, lr}
 8001ae6:	b085      	sub	sp, #20
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	6078      	str	r0, [r7, #4]
 8001aec:	230f      	movs	r3, #15
 8001aee:	18fb      	adds	r3, r7, r3
 8001af0:	2200      	movs	r2, #0
 8001af2:	701a      	strb	r2, [r3, #0]
 8001af4:	4b1d      	ldr	r3, [pc, #116]	@ (8001b6c <HAL_InitTick+0x88>)
 8001af6:	781b      	ldrb	r3, [r3, #0]
 8001af8:	2b00      	cmp	r3, #0
 8001afa:	d02b      	beq.n	8001b54 <HAL_InitTick+0x70>
 8001afc:	4b1c      	ldr	r3, [pc, #112]	@ (8001b70 <HAL_InitTick+0x8c>)
 8001afe:	681c      	ldr	r4, [r3, #0]
 8001b00:	4b1a      	ldr	r3, [pc, #104]	@ (8001b6c <HAL_InitTick+0x88>)
 8001b02:	781b      	ldrb	r3, [r3, #0]
 8001b04:	0019      	movs	r1, r3
 8001b06:	23fa      	movs	r3, #250	@ 0xfa
 8001b08:	0098      	lsls	r0, r3, #2
 8001b0a:	f7fe fafd 	bl	8000108 <__udivsi3>
 8001b0e:	0003      	movs	r3, r0
 8001b10:	0019      	movs	r1, r3
 8001b12:	0020      	movs	r0, r4
 8001b14:	f7fe faf8 	bl	8000108 <__udivsi3>
 8001b18:	0003      	movs	r3, r0
 8001b1a:	0018      	movs	r0, r3
 8001b1c:	f000 f96f 	bl	8001dfe <HAL_SYSTICK_Config>
 8001b20:	1e03      	subs	r3, r0, #0
 8001b22:	d112      	bne.n	8001b4a <HAL_InitTick+0x66>
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	2b03      	cmp	r3, #3
 8001b28:	d80a      	bhi.n	8001b40 <HAL_InitTick+0x5c>
 8001b2a:	6879      	ldr	r1, [r7, #4]
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	425b      	negs	r3, r3
 8001b30:	2200      	movs	r2, #0
 8001b32:	0018      	movs	r0, r3
 8001b34:	f000 f92e 	bl	8001d94 <HAL_NVIC_SetPriority>
 8001b38:	4b0e      	ldr	r3, [pc, #56]	@ (8001b74 <HAL_InitTick+0x90>)
 8001b3a:	687a      	ldr	r2, [r7, #4]
 8001b3c:	601a      	str	r2, [r3, #0]
 8001b3e:	e00d      	b.n	8001b5c <HAL_InitTick+0x78>
 8001b40:	230f      	movs	r3, #15
 8001b42:	18fb      	adds	r3, r7, r3
 8001b44:	2201      	movs	r2, #1
 8001b46:	701a      	strb	r2, [r3, #0]
 8001b48:	e008      	b.n	8001b5c <HAL_InitTick+0x78>
 8001b4a:	230f      	movs	r3, #15
 8001b4c:	18fb      	adds	r3, r7, r3
 8001b4e:	2201      	movs	r2, #1
 8001b50:	701a      	strb	r2, [r3, #0]
 8001b52:	e003      	b.n	8001b5c <HAL_InitTick+0x78>
 8001b54:	230f      	movs	r3, #15
 8001b56:	18fb      	adds	r3, r7, r3
 8001b58:	2201      	movs	r2, #1
 8001b5a:	701a      	strb	r2, [r3, #0]
 8001b5c:	230f      	movs	r3, #15
 8001b5e:	18fb      	adds	r3, r7, r3
 8001b60:	781b      	ldrb	r3, [r3, #0]
 8001b62:	0018      	movs	r0, r3
 8001b64:	46bd      	mov	sp, r7
 8001b66:	b005      	add	sp, #20
 8001b68:	bd90      	pop	{r4, r7, pc}
 8001b6a:	46c0      	nop			@ (mov r8, r8)
 8001b6c:	2000001c 	.word	0x2000001c
 8001b70:	20000014 	.word	0x20000014
 8001b74:	20000018 	.word	0x20000018

08001b78 <HAL_IncTick>:
 8001b78:	b580      	push	{r7, lr}
 8001b7a:	af00      	add	r7, sp, #0
 8001b7c:	4b05      	ldr	r3, [pc, #20]	@ (8001b94 <HAL_IncTick+0x1c>)
 8001b7e:	781b      	ldrb	r3, [r3, #0]
 8001b80:	001a      	movs	r2, r3
 8001b82:	4b05      	ldr	r3, [pc, #20]	@ (8001b98 <HAL_IncTick+0x20>)
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	18d2      	adds	r2, r2, r3
 8001b88:	4b03      	ldr	r3, [pc, #12]	@ (8001b98 <HAL_IncTick+0x20>)
 8001b8a:	601a      	str	r2, [r3, #0]
 8001b8c:	46c0      	nop			@ (mov r8, r8)
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}
 8001b92:	46c0      	nop			@ (mov r8, r8)
 8001b94:	2000001c 	.word	0x2000001c
 8001b98:	200004a0 	.word	0x200004a0

08001b9c <HAL_GetTick>:
 8001b9c:	b580      	push	{r7, lr}
 8001b9e:	af00      	add	r7, sp, #0
 8001ba0:	4b02      	ldr	r3, [pc, #8]	@ (8001bac <HAL_GetTick+0x10>)
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	0018      	movs	r0, r3
 8001ba6:	46bd      	mov	sp, r7
 8001ba8:	bd80      	pop	{r7, pc}
 8001baa:	46c0      	nop			@ (mov r8, r8)
 8001bac:	200004a0 	.word	0x200004a0

08001bb0 <HAL_Delay>:
 8001bb0:	b580      	push	{r7, lr}
 8001bb2:	b084      	sub	sp, #16
 8001bb4:	af00      	add	r7, sp, #0
 8001bb6:	6078      	str	r0, [r7, #4]
 8001bb8:	f7ff fff0 	bl	8001b9c <HAL_GetTick>
 8001bbc:	0003      	movs	r3, r0
 8001bbe:	60bb      	str	r3, [r7, #8]
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	60fb      	str	r3, [r7, #12]
 8001bc4:	68fb      	ldr	r3, [r7, #12]
 8001bc6:	3301      	adds	r3, #1
 8001bc8:	d005      	beq.n	8001bd6 <HAL_Delay+0x26>
 8001bca:	4b0a      	ldr	r3, [pc, #40]	@ (8001bf4 <HAL_Delay+0x44>)
 8001bcc:	781b      	ldrb	r3, [r3, #0]
 8001bce:	001a      	movs	r2, r3
 8001bd0:	68fb      	ldr	r3, [r7, #12]
 8001bd2:	189b      	adds	r3, r3, r2
 8001bd4:	60fb      	str	r3, [r7, #12]
 8001bd6:	46c0      	nop			@ (mov r8, r8)
 8001bd8:	f7ff ffe0 	bl	8001b9c <HAL_GetTick>
 8001bdc:	0002      	movs	r2, r0
 8001bde:	68bb      	ldr	r3, [r7, #8]
 8001be0:	1ad3      	subs	r3, r2, r3
 8001be2:	68fa      	ldr	r2, [r7, #12]
 8001be4:	429a      	cmp	r2, r3
 8001be6:	d8f7      	bhi.n	8001bd8 <HAL_Delay+0x28>
 8001be8:	46c0      	nop			@ (mov r8, r8)
 8001bea:	46c0      	nop			@ (mov r8, r8)
 8001bec:	46bd      	mov	sp, r7
 8001bee:	b004      	add	sp, #16
 8001bf0:	bd80      	pop	{r7, pc}
 8001bf2:	46c0      	nop			@ (mov r8, r8)
 8001bf4:	2000001c 	.word	0x2000001c

08001bf8 <__NVIC_EnableIRQ>:
 8001bf8:	b580      	push	{r7, lr}
 8001bfa:	b082      	sub	sp, #8
 8001bfc:	af00      	add	r7, sp, #0
 8001bfe:	0002      	movs	r2, r0
 8001c00:	1dfb      	adds	r3, r7, #7
 8001c02:	701a      	strb	r2, [r3, #0]
 8001c04:	1dfb      	adds	r3, r7, #7
 8001c06:	781b      	ldrb	r3, [r3, #0]
 8001c08:	2b7f      	cmp	r3, #127	@ 0x7f
 8001c0a:	d809      	bhi.n	8001c20 <__NVIC_EnableIRQ+0x28>
 8001c0c:	1dfb      	adds	r3, r7, #7
 8001c0e:	781b      	ldrb	r3, [r3, #0]
 8001c10:	001a      	movs	r2, r3
 8001c12:	231f      	movs	r3, #31
 8001c14:	401a      	ands	r2, r3
 8001c16:	4b04      	ldr	r3, [pc, #16]	@ (8001c28 <__NVIC_EnableIRQ+0x30>)
 8001c18:	2101      	movs	r1, #1
 8001c1a:	4091      	lsls	r1, r2
 8001c1c:	000a      	movs	r2, r1
 8001c1e:	601a      	str	r2, [r3, #0]
 8001c20:	46c0      	nop			@ (mov r8, r8)
 8001c22:	46bd      	mov	sp, r7
 8001c24:	b002      	add	sp, #8
 8001c26:	bd80      	pop	{r7, pc}
 8001c28:	e000e100 	.word	0xe000e100

08001c2c <__NVIC_DisableIRQ>:
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b082      	sub	sp, #8
 8001c30:	af00      	add	r7, sp, #0
 8001c32:	0002      	movs	r2, r0
 8001c34:	1dfb      	adds	r3, r7, #7
 8001c36:	701a      	strb	r2, [r3, #0]
 8001c38:	1dfb      	adds	r3, r7, #7
 8001c3a:	781b      	ldrb	r3, [r3, #0]
 8001c3c:	2b7f      	cmp	r3, #127	@ 0x7f
 8001c3e:	d810      	bhi.n	8001c62 <__NVIC_DisableIRQ+0x36>
 8001c40:	1dfb      	adds	r3, r7, #7
 8001c42:	781b      	ldrb	r3, [r3, #0]
 8001c44:	001a      	movs	r2, r3
 8001c46:	231f      	movs	r3, #31
 8001c48:	4013      	ands	r3, r2
 8001c4a:	4908      	ldr	r1, [pc, #32]	@ (8001c6c <__NVIC_DisableIRQ+0x40>)
 8001c4c:	2201      	movs	r2, #1
 8001c4e:	409a      	lsls	r2, r3
 8001c50:	0013      	movs	r3, r2
 8001c52:	2280      	movs	r2, #128	@ 0x80
 8001c54:	508b      	str	r3, [r1, r2]
 8001c56:	f3bf 8f4f 	dsb	sy
 8001c5a:	46c0      	nop			@ (mov r8, r8)
 8001c5c:	f3bf 8f6f 	isb	sy
 8001c60:	46c0      	nop			@ (mov r8, r8)
 8001c62:	46c0      	nop			@ (mov r8, r8)
 8001c64:	46bd      	mov	sp, r7
 8001c66:	b002      	add	sp, #8
 8001c68:	bd80      	pop	{r7, pc}
 8001c6a:	46c0      	nop			@ (mov r8, r8)
 8001c6c:	e000e100 	.word	0xe000e100

08001c70 <__NVIC_SetPriority>:
 8001c70:	b590      	push	{r4, r7, lr}
 8001c72:	b083      	sub	sp, #12
 8001c74:	af00      	add	r7, sp, #0
 8001c76:	0002      	movs	r2, r0
 8001c78:	6039      	str	r1, [r7, #0]
 8001c7a:	1dfb      	adds	r3, r7, #7
 8001c7c:	701a      	strb	r2, [r3, #0]
 8001c7e:	1dfb      	adds	r3, r7, #7
 8001c80:	781b      	ldrb	r3, [r3, #0]
 8001c82:	2b7f      	cmp	r3, #127	@ 0x7f
 8001c84:	d828      	bhi.n	8001cd8 <__NVIC_SetPriority+0x68>
 8001c86:	4a2f      	ldr	r2, [pc, #188]	@ (8001d44 <__NVIC_SetPriority+0xd4>)
 8001c88:	1dfb      	adds	r3, r7, #7
 8001c8a:	781b      	ldrb	r3, [r3, #0]
 8001c8c:	b25b      	sxtb	r3, r3
 8001c8e:	089b      	lsrs	r3, r3, #2
 8001c90:	33c0      	adds	r3, #192	@ 0xc0
 8001c92:	009b      	lsls	r3, r3, #2
 8001c94:	589b      	ldr	r3, [r3, r2]
 8001c96:	1dfa      	adds	r2, r7, #7
 8001c98:	7812      	ldrb	r2, [r2, #0]
 8001c9a:	0011      	movs	r1, r2
 8001c9c:	2203      	movs	r2, #3
 8001c9e:	400a      	ands	r2, r1
 8001ca0:	00d2      	lsls	r2, r2, #3
 8001ca2:	21ff      	movs	r1, #255	@ 0xff
 8001ca4:	4091      	lsls	r1, r2
 8001ca6:	000a      	movs	r2, r1
 8001ca8:	43d2      	mvns	r2, r2
 8001caa:	401a      	ands	r2, r3
 8001cac:	0011      	movs	r1, r2
 8001cae:	683b      	ldr	r3, [r7, #0]
 8001cb0:	019b      	lsls	r3, r3, #6
 8001cb2:	22ff      	movs	r2, #255	@ 0xff
 8001cb4:	401a      	ands	r2, r3
 8001cb6:	1dfb      	adds	r3, r7, #7
 8001cb8:	781b      	ldrb	r3, [r3, #0]
 8001cba:	0018      	movs	r0, r3
 8001cbc:	2303      	movs	r3, #3
 8001cbe:	4003      	ands	r3, r0
 8001cc0:	00db      	lsls	r3, r3, #3
 8001cc2:	409a      	lsls	r2, r3
 8001cc4:	481f      	ldr	r0, [pc, #124]	@ (8001d44 <__NVIC_SetPriority+0xd4>)
 8001cc6:	1dfb      	adds	r3, r7, #7
 8001cc8:	781b      	ldrb	r3, [r3, #0]
 8001cca:	b25b      	sxtb	r3, r3
 8001ccc:	089b      	lsrs	r3, r3, #2
 8001cce:	430a      	orrs	r2, r1
 8001cd0:	33c0      	adds	r3, #192	@ 0xc0
 8001cd2:	009b      	lsls	r3, r3, #2
 8001cd4:	501a      	str	r2, [r3, r0]
 8001cd6:	e031      	b.n	8001d3c <__NVIC_SetPriority+0xcc>
 8001cd8:	4a1b      	ldr	r2, [pc, #108]	@ (8001d48 <__NVIC_SetPriority+0xd8>)
 8001cda:	1dfb      	adds	r3, r7, #7
 8001cdc:	781b      	ldrb	r3, [r3, #0]
 8001cde:	0019      	movs	r1, r3
 8001ce0:	230f      	movs	r3, #15
 8001ce2:	400b      	ands	r3, r1
 8001ce4:	3b08      	subs	r3, #8
 8001ce6:	089b      	lsrs	r3, r3, #2
 8001ce8:	3306      	adds	r3, #6
 8001cea:	009b      	lsls	r3, r3, #2
 8001cec:	18d3      	adds	r3, r2, r3
 8001cee:	3304      	adds	r3, #4
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	1dfa      	adds	r2, r7, #7
 8001cf4:	7812      	ldrb	r2, [r2, #0]
 8001cf6:	0011      	movs	r1, r2
 8001cf8:	2203      	movs	r2, #3
 8001cfa:	400a      	ands	r2, r1
 8001cfc:	00d2      	lsls	r2, r2, #3
 8001cfe:	21ff      	movs	r1, #255	@ 0xff
 8001d00:	4091      	lsls	r1, r2
 8001d02:	000a      	movs	r2, r1
 8001d04:	43d2      	mvns	r2, r2
 8001d06:	401a      	ands	r2, r3
 8001d08:	0011      	movs	r1, r2
 8001d0a:	683b      	ldr	r3, [r7, #0]
 8001d0c:	019b      	lsls	r3, r3, #6
 8001d0e:	22ff      	movs	r2, #255	@ 0xff
 8001d10:	401a      	ands	r2, r3
 8001d12:	1dfb      	adds	r3, r7, #7
 8001d14:	781b      	ldrb	r3, [r3, #0]
 8001d16:	0018      	movs	r0, r3
 8001d18:	2303      	movs	r3, #3
 8001d1a:	4003      	ands	r3, r0
 8001d1c:	00db      	lsls	r3, r3, #3
 8001d1e:	409a      	lsls	r2, r3
 8001d20:	4809      	ldr	r0, [pc, #36]	@ (8001d48 <__NVIC_SetPriority+0xd8>)
 8001d22:	1dfb      	adds	r3, r7, #7
 8001d24:	781b      	ldrb	r3, [r3, #0]
 8001d26:	001c      	movs	r4, r3
 8001d28:	230f      	movs	r3, #15
 8001d2a:	4023      	ands	r3, r4
 8001d2c:	3b08      	subs	r3, #8
 8001d2e:	089b      	lsrs	r3, r3, #2
 8001d30:	430a      	orrs	r2, r1
 8001d32:	3306      	adds	r3, #6
 8001d34:	009b      	lsls	r3, r3, #2
 8001d36:	18c3      	adds	r3, r0, r3
 8001d38:	3304      	adds	r3, #4
 8001d3a:	601a      	str	r2, [r3, #0]
 8001d3c:	46c0      	nop			@ (mov r8, r8)
 8001d3e:	46bd      	mov	sp, r7
 8001d40:	b003      	add	sp, #12
 8001d42:	bd90      	pop	{r4, r7, pc}
 8001d44:	e000e100 	.word	0xe000e100
 8001d48:	e000ed00 	.word	0xe000ed00

08001d4c <SysTick_Config>:
 8001d4c:	b580      	push	{r7, lr}
 8001d4e:	b082      	sub	sp, #8
 8001d50:	af00      	add	r7, sp, #0
 8001d52:	6078      	str	r0, [r7, #4]
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	1e5a      	subs	r2, r3, #1
 8001d58:	2380      	movs	r3, #128	@ 0x80
 8001d5a:	045b      	lsls	r3, r3, #17
 8001d5c:	429a      	cmp	r2, r3
 8001d5e:	d301      	bcc.n	8001d64 <SysTick_Config+0x18>
 8001d60:	2301      	movs	r3, #1
 8001d62:	e010      	b.n	8001d86 <SysTick_Config+0x3a>
 8001d64:	4b0a      	ldr	r3, [pc, #40]	@ (8001d90 <SysTick_Config+0x44>)
 8001d66:	687a      	ldr	r2, [r7, #4]
 8001d68:	3a01      	subs	r2, #1
 8001d6a:	605a      	str	r2, [r3, #4]
 8001d6c:	2301      	movs	r3, #1
 8001d6e:	425b      	negs	r3, r3
 8001d70:	2103      	movs	r1, #3
 8001d72:	0018      	movs	r0, r3
 8001d74:	f7ff ff7c 	bl	8001c70 <__NVIC_SetPriority>
 8001d78:	4b05      	ldr	r3, [pc, #20]	@ (8001d90 <SysTick_Config+0x44>)
 8001d7a:	2200      	movs	r2, #0
 8001d7c:	609a      	str	r2, [r3, #8]
 8001d7e:	4b04      	ldr	r3, [pc, #16]	@ (8001d90 <SysTick_Config+0x44>)
 8001d80:	2207      	movs	r2, #7
 8001d82:	601a      	str	r2, [r3, #0]
 8001d84:	2300      	movs	r3, #0
 8001d86:	0018      	movs	r0, r3
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	b002      	add	sp, #8
 8001d8c:	bd80      	pop	{r7, pc}
 8001d8e:	46c0      	nop			@ (mov r8, r8)
 8001d90:	e000e010 	.word	0xe000e010

08001d94 <HAL_NVIC_SetPriority>:
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b084      	sub	sp, #16
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	60b9      	str	r1, [r7, #8]
 8001d9c:	607a      	str	r2, [r7, #4]
 8001d9e:	210f      	movs	r1, #15
 8001da0:	187b      	adds	r3, r7, r1
 8001da2:	1c02      	adds	r2, r0, #0
 8001da4:	701a      	strb	r2, [r3, #0]
 8001da6:	68ba      	ldr	r2, [r7, #8]
 8001da8:	187b      	adds	r3, r7, r1
 8001daa:	781b      	ldrb	r3, [r3, #0]
 8001dac:	b25b      	sxtb	r3, r3
 8001dae:	0011      	movs	r1, r2
 8001db0:	0018      	movs	r0, r3
 8001db2:	f7ff ff5d 	bl	8001c70 <__NVIC_SetPriority>
 8001db6:	46c0      	nop			@ (mov r8, r8)
 8001db8:	46bd      	mov	sp, r7
 8001dba:	b004      	add	sp, #16
 8001dbc:	bd80      	pop	{r7, pc}

08001dbe <HAL_NVIC_EnableIRQ>:
 8001dbe:	b580      	push	{r7, lr}
 8001dc0:	b082      	sub	sp, #8
 8001dc2:	af00      	add	r7, sp, #0
 8001dc4:	0002      	movs	r2, r0
 8001dc6:	1dfb      	adds	r3, r7, #7
 8001dc8:	701a      	strb	r2, [r3, #0]
 8001dca:	1dfb      	adds	r3, r7, #7
 8001dcc:	781b      	ldrb	r3, [r3, #0]
 8001dce:	b25b      	sxtb	r3, r3
 8001dd0:	0018      	movs	r0, r3
 8001dd2:	f7ff ff11 	bl	8001bf8 <__NVIC_EnableIRQ>
 8001dd6:	46c0      	nop			@ (mov r8, r8)
 8001dd8:	46bd      	mov	sp, r7
 8001dda:	b002      	add	sp, #8
 8001ddc:	bd80      	pop	{r7, pc}

08001dde <HAL_NVIC_DisableIRQ>:
 8001dde:	b580      	push	{r7, lr}
 8001de0:	b082      	sub	sp, #8
 8001de2:	af00      	add	r7, sp, #0
 8001de4:	0002      	movs	r2, r0
 8001de6:	1dfb      	adds	r3, r7, #7
 8001de8:	701a      	strb	r2, [r3, #0]
 8001dea:	1dfb      	adds	r3, r7, #7
 8001dec:	781b      	ldrb	r3, [r3, #0]
 8001dee:	b25b      	sxtb	r3, r3
 8001df0:	0018      	movs	r0, r3
 8001df2:	f7ff ff1b 	bl	8001c2c <__NVIC_DisableIRQ>
 8001df6:	46c0      	nop			@ (mov r8, r8)
 8001df8:	46bd      	mov	sp, r7
 8001dfa:	b002      	add	sp, #8
 8001dfc:	bd80      	pop	{r7, pc}

08001dfe <HAL_SYSTICK_Config>:
 8001dfe:	b580      	push	{r7, lr}
 8001e00:	b082      	sub	sp, #8
 8001e02:	af00      	add	r7, sp, #0
 8001e04:	6078      	str	r0, [r7, #4]
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	0018      	movs	r0, r3
 8001e0a:	f7ff ff9f 	bl	8001d4c <SysTick_Config>
 8001e0e:	0003      	movs	r3, r0
 8001e10:	0018      	movs	r0, r3
 8001e12:	46bd      	mov	sp, r7
 8001e14:	b002      	add	sp, #8
 8001e16:	bd80      	pop	{r7, pc}

08001e18 <HAL_DMA_Init>:
 8001e18:	b580      	push	{r7, lr}
 8001e1a:	b082      	sub	sp, #8
 8001e1c:	af00      	add	r7, sp, #0
 8001e1e:	6078      	str	r0, [r7, #4]
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	d101      	bne.n	8001e2a <HAL_DMA_Init+0x12>
 8001e26:	2301      	movs	r3, #1
 8001e28:	e077      	b.n	8001f1a <HAL_DMA_Init+0x102>
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	4a3d      	ldr	r2, [pc, #244]	@ (8001f24 <HAL_DMA_Init+0x10c>)
 8001e30:	4694      	mov	ip, r2
 8001e32:	4463      	add	r3, ip
 8001e34:	2114      	movs	r1, #20
 8001e36:	0018      	movs	r0, r3
 8001e38:	f7fe f966 	bl	8000108 <__udivsi3>
 8001e3c:	0003      	movs	r3, r0
 8001e3e:	009a      	lsls	r2, r3, #2
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	2225      	movs	r2, #37	@ 0x25
 8001e48:	2102      	movs	r1, #2
 8001e4a:	5499      	strb	r1, [r3, r2]
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	681b      	ldr	r3, [r3, #0]
 8001e50:	681a      	ldr	r2, [r3, #0]
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	4934      	ldr	r1, [pc, #208]	@ (8001f28 <HAL_DMA_Init+0x110>)
 8001e58:	400a      	ands	r2, r1
 8001e5a:	601a      	str	r2, [r3, #0]
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	6819      	ldr	r1, [r3, #0]
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	689a      	ldr	r2, [r3, #8]
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	68db      	ldr	r3, [r3, #12]
 8001e6a:	431a      	orrs	r2, r3
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	691b      	ldr	r3, [r3, #16]
 8001e70:	431a      	orrs	r2, r3
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	695b      	ldr	r3, [r3, #20]
 8001e76:	431a      	orrs	r2, r3
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	699b      	ldr	r3, [r3, #24]
 8001e7c:	431a      	orrs	r2, r3
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	69db      	ldr	r3, [r3, #28]
 8001e82:	431a      	orrs	r2, r3
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	6a1b      	ldr	r3, [r3, #32]
 8001e88:	431a      	orrs	r2, r3
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	430a      	orrs	r2, r1
 8001e90:	601a      	str	r2, [r3, #0]
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	0018      	movs	r0, r3
 8001e96:	f000 fb21 	bl	80024dc <DMA_CalcDMAMUXChannelBaseAndMask>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	689a      	ldr	r2, [r3, #8]
 8001e9e:	2380      	movs	r3, #128	@ 0x80
 8001ea0:	01db      	lsls	r3, r3, #7
 8001ea2:	429a      	cmp	r2, r3
 8001ea4:	d102      	bne.n	8001eac <HAL_DMA_Init+0x94>
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	2200      	movs	r2, #0
 8001eaa:	605a      	str	r2, [r3, #4]
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	685a      	ldr	r2, [r3, #4]
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001eb4:	21ff      	movs	r1, #255	@ 0xff
 8001eb6:	400a      	ands	r2, r1
 8001eb8:	601a      	str	r2, [r3, #0]
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001ebe:	687a      	ldr	r2, [r7, #4]
 8001ec0:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8001ec2:	605a      	str	r2, [r3, #4]
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	685b      	ldr	r3, [r3, #4]
 8001ec8:	2b00      	cmp	r3, #0
 8001eca:	d011      	beq.n	8001ef0 <HAL_DMA_Init+0xd8>
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	685b      	ldr	r3, [r3, #4]
 8001ed0:	2b04      	cmp	r3, #4
 8001ed2:	d80d      	bhi.n	8001ef0 <HAL_DMA_Init+0xd8>
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	0018      	movs	r0, r3
 8001ed8:	f000 fb2c 	bl	8002534 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	601a      	str	r2, [r3, #0]
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001ee8:	687a      	ldr	r2, [r7, #4]
 8001eea:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8001eec:	605a      	str	r2, [r3, #4]
 8001eee:	e008      	b.n	8001f02 <HAL_DMA_Init+0xea>
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	651a      	str	r2, [r3, #80]	@ 0x50
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	2200      	movs	r2, #0
 8001efa:	655a      	str	r2, [r3, #84]	@ 0x54
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	2200      	movs	r2, #0
 8001f00:	659a      	str	r2, [r3, #88]	@ 0x58
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	2200      	movs	r2, #0
 8001f06:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	2225      	movs	r2, #37	@ 0x25
 8001f0c:	2101      	movs	r1, #1
 8001f0e:	5499      	strb	r1, [r3, r2]
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	2224      	movs	r2, #36	@ 0x24
 8001f14:	2100      	movs	r1, #0
 8001f16:	5499      	strb	r1, [r3, r2]
 8001f18:	2300      	movs	r3, #0
 8001f1a:	0018      	movs	r0, r3
 8001f1c:	46bd      	mov	sp, r7
 8001f1e:	b002      	add	sp, #8
 8001f20:	bd80      	pop	{r7, pc}
 8001f22:	46c0      	nop			@ (mov r8, r8)
 8001f24:	bffdfff8 	.word	0xbffdfff8
 8001f28:	ffff800f 	.word	0xffff800f

08001f2c <HAL_DMA_DeInit>:
 8001f2c:	b580      	push	{r7, lr}
 8001f2e:	b082      	sub	sp, #8
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	6078      	str	r0, [r7, #4]
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d101      	bne.n	8001f3e <HAL_DMA_DeInit+0x12>
 8001f3a:	2301      	movs	r3, #1
 8001f3c:	e066      	b.n	800200c <HAL_DMA_DeInit+0xe0>
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	681a      	ldr	r2, [r3, #0]
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	2101      	movs	r1, #1
 8001f4a:	438a      	bics	r2, r1
 8001f4c:	601a      	str	r2, [r3, #0]
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	4a30      	ldr	r2, [pc, #192]	@ (8002014 <HAL_DMA_DeInit+0xe8>)
 8001f54:	4694      	mov	ip, r2
 8001f56:	4463      	add	r3, ip
 8001f58:	2114      	movs	r1, #20
 8001f5a:	0018      	movs	r0, r3
 8001f5c:	f7fe f8d4 	bl	8000108 <__udivsi3>
 8001f60:	0003      	movs	r3, r0
 8001f62:	009a      	lsls	r2, r3, #2
 8001f64:	687b      	ldr	r3, [r7, #4]
 8001f66:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	2200      	movs	r2, #0
 8001f6e:	601a      	str	r2, [r3, #0]
 8001f70:	4b29      	ldr	r3, [pc, #164]	@ (8002018 <HAL_DMA_DeInit+0xec>)
 8001f72:	6859      	ldr	r1, [r3, #4]
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f78:	221c      	movs	r2, #28
 8001f7a:	4013      	ands	r3, r2
 8001f7c:	2201      	movs	r2, #1
 8001f7e:	409a      	lsls	r2, r3
 8001f80:	4b25      	ldr	r3, [pc, #148]	@ (8002018 <HAL_DMA_DeInit+0xec>)
 8001f82:	430a      	orrs	r2, r1
 8001f84:	605a      	str	r2, [r3, #4]
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	0018      	movs	r0, r3
 8001f8a:	f000 faa7 	bl	80024dc <DMA_CalcDMAMUXChannelBaseAndMask>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f92:	2200      	movs	r2, #0
 8001f94:	601a      	str	r2, [r3, #0]
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001f9a:	687a      	ldr	r2, [r7, #4]
 8001f9c:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8001f9e:	605a      	str	r2, [r3, #4]
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	685b      	ldr	r3, [r3, #4]
 8001fa4:	2b00      	cmp	r3, #0
 8001fa6:	d010      	beq.n	8001fca <HAL_DMA_DeInit+0x9e>
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	685b      	ldr	r3, [r3, #4]
 8001fac:	2b04      	cmp	r3, #4
 8001fae:	d80c      	bhi.n	8001fca <HAL_DMA_DeInit+0x9e>
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	0018      	movs	r0, r3
 8001fb4:	f000 fabe 	bl	8002534 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001fbc:	2200      	movs	r2, #0
 8001fbe:	601a      	str	r2, [r3, #0]
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001fc4:	687a      	ldr	r2, [r7, #4]
 8001fc6:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8001fc8:	605a      	str	r2, [r3, #4]
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	2200      	movs	r2, #0
 8001fce:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	2200      	movs	r2, #0
 8001fd4:	631a      	str	r2, [r3, #48]	@ 0x30
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	2200      	movs	r2, #0
 8001fda:	635a      	str	r2, [r3, #52]	@ 0x34
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	2200      	movs	r2, #0
 8001fe0:	639a      	str	r2, [r3, #56]	@ 0x38
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	651a      	str	r2, [r3, #80]	@ 0x50
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	2200      	movs	r2, #0
 8001fec:	655a      	str	r2, [r3, #84]	@ 0x54
 8001fee:	687b      	ldr	r3, [r7, #4]
 8001ff0:	2200      	movs	r2, #0
 8001ff2:	659a      	str	r2, [r3, #88]	@ 0x58
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	2200      	movs	r2, #0
 8001ff8:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	2225      	movs	r2, #37	@ 0x25
 8001ffe:	2100      	movs	r1, #0
 8002000:	5499      	strb	r1, [r3, r2]
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	2224      	movs	r2, #36	@ 0x24
 8002006:	2100      	movs	r1, #0
 8002008:	5499      	strb	r1, [r3, r2]
 800200a:	2300      	movs	r3, #0
 800200c:	0018      	movs	r0, r3
 800200e:	46bd      	mov	sp, r7
 8002010:	b002      	add	sp, #8
 8002012:	bd80      	pop	{r7, pc}
 8002014:	bffdfff8 	.word	0xbffdfff8
 8002018:	40020000 	.word	0x40020000

0800201c <HAL_DMA_Start_IT>:
 800201c:	b580      	push	{r7, lr}
 800201e:	b086      	sub	sp, #24
 8002020:	af00      	add	r7, sp, #0
 8002022:	60f8      	str	r0, [r7, #12]
 8002024:	60b9      	str	r1, [r7, #8]
 8002026:	607a      	str	r2, [r7, #4]
 8002028:	603b      	str	r3, [r7, #0]
 800202a:	2317      	movs	r3, #23
 800202c:	18fb      	adds	r3, r7, r3
 800202e:	2200      	movs	r2, #0
 8002030:	701a      	strb	r2, [r3, #0]
 8002032:	68fb      	ldr	r3, [r7, #12]
 8002034:	2224      	movs	r2, #36	@ 0x24
 8002036:	5c9b      	ldrb	r3, [r3, r2]
 8002038:	2b01      	cmp	r3, #1
 800203a:	d101      	bne.n	8002040 <HAL_DMA_Start_IT+0x24>
 800203c:	2302      	movs	r3, #2
 800203e:	e070      	b.n	8002122 <HAL_DMA_Start_IT+0x106>
 8002040:	68fb      	ldr	r3, [r7, #12]
 8002042:	2224      	movs	r2, #36	@ 0x24
 8002044:	2101      	movs	r1, #1
 8002046:	5499      	strb	r1, [r3, r2]
 8002048:	68fb      	ldr	r3, [r7, #12]
 800204a:	2225      	movs	r2, #37	@ 0x25
 800204c:	5c9b      	ldrb	r3, [r3, r2]
 800204e:	b2db      	uxtb	r3, r3
 8002050:	2b01      	cmp	r3, #1
 8002052:	d157      	bne.n	8002104 <HAL_DMA_Start_IT+0xe8>
 8002054:	68fb      	ldr	r3, [r7, #12]
 8002056:	2225      	movs	r2, #37	@ 0x25
 8002058:	2102      	movs	r1, #2
 800205a:	5499      	strb	r1, [r3, r2]
 800205c:	68fb      	ldr	r3, [r7, #12]
 800205e:	2200      	movs	r2, #0
 8002060:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	681a      	ldr	r2, [r3, #0]
 8002068:	68fb      	ldr	r3, [r7, #12]
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	2101      	movs	r1, #1
 800206e:	438a      	bics	r2, r1
 8002070:	601a      	str	r2, [r3, #0]
 8002072:	683b      	ldr	r3, [r7, #0]
 8002074:	687a      	ldr	r2, [r7, #4]
 8002076:	68b9      	ldr	r1, [r7, #8]
 8002078:	68f8      	ldr	r0, [r7, #12]
 800207a:	f000 f9ef 	bl	800245c <DMA_SetConfig>
 800207e:	68fb      	ldr	r3, [r7, #12]
 8002080:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002082:	2b00      	cmp	r3, #0
 8002084:	d008      	beq.n	8002098 <HAL_DMA_Start_IT+0x7c>
 8002086:	68fb      	ldr	r3, [r7, #12]
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	681a      	ldr	r2, [r3, #0]
 800208c:	68fb      	ldr	r3, [r7, #12]
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	210e      	movs	r1, #14
 8002092:	430a      	orrs	r2, r1
 8002094:	601a      	str	r2, [r3, #0]
 8002096:	e00f      	b.n	80020b8 <HAL_DMA_Start_IT+0x9c>
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	681a      	ldr	r2, [r3, #0]
 800209e:	68fb      	ldr	r3, [r7, #12]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	2104      	movs	r1, #4
 80020a4:	438a      	bics	r2, r1
 80020a6:	601a      	str	r2, [r3, #0]
 80020a8:	68fb      	ldr	r3, [r7, #12]
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	681a      	ldr	r2, [r3, #0]
 80020ae:	68fb      	ldr	r3, [r7, #12]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	210a      	movs	r1, #10
 80020b4:	430a      	orrs	r2, r1
 80020b6:	601a      	str	r2, [r3, #0]
 80020b8:	68fb      	ldr	r3, [r7, #12]
 80020ba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80020bc:	681a      	ldr	r2, [r3, #0]
 80020be:	2380      	movs	r3, #128	@ 0x80
 80020c0:	025b      	lsls	r3, r3, #9
 80020c2:	4013      	ands	r3, r2
 80020c4:	d008      	beq.n	80020d8 <HAL_DMA_Start_IT+0xbc>
 80020c6:	68fb      	ldr	r3, [r7, #12]
 80020c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80020ca:	681a      	ldr	r2, [r3, #0]
 80020cc:	68fb      	ldr	r3, [r7, #12]
 80020ce:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80020d0:	2180      	movs	r1, #128	@ 0x80
 80020d2:	0049      	lsls	r1, r1, #1
 80020d4:	430a      	orrs	r2, r1
 80020d6:	601a      	str	r2, [r3, #0]
 80020d8:	68fb      	ldr	r3, [r7, #12]
 80020da:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80020dc:	2b00      	cmp	r3, #0
 80020de:	d008      	beq.n	80020f2 <HAL_DMA_Start_IT+0xd6>
 80020e0:	68fb      	ldr	r3, [r7, #12]
 80020e2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80020e4:	681a      	ldr	r2, [r3, #0]
 80020e6:	68fb      	ldr	r3, [r7, #12]
 80020e8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80020ea:	2180      	movs	r1, #128	@ 0x80
 80020ec:	0049      	lsls	r1, r1, #1
 80020ee:	430a      	orrs	r2, r1
 80020f0:	601a      	str	r2, [r3, #0]
 80020f2:	68fb      	ldr	r3, [r7, #12]
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	681a      	ldr	r2, [r3, #0]
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	2101      	movs	r1, #1
 80020fe:	430a      	orrs	r2, r1
 8002100:	601a      	str	r2, [r3, #0]
 8002102:	e007      	b.n	8002114 <HAL_DMA_Start_IT+0xf8>
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	2224      	movs	r2, #36	@ 0x24
 8002108:	2100      	movs	r1, #0
 800210a:	5499      	strb	r1, [r3, r2]
 800210c:	2317      	movs	r3, #23
 800210e:	18fb      	adds	r3, r7, r3
 8002110:	2202      	movs	r2, #2
 8002112:	701a      	strb	r2, [r3, #0]
 8002114:	68fb      	ldr	r3, [r7, #12]
 8002116:	2224      	movs	r2, #36	@ 0x24
 8002118:	2100      	movs	r1, #0
 800211a:	5499      	strb	r1, [r3, r2]
 800211c:	2317      	movs	r3, #23
 800211e:	18fb      	adds	r3, r7, r3
 8002120:	781b      	ldrb	r3, [r3, #0]
 8002122:	0018      	movs	r0, r3
 8002124:	46bd      	mov	sp, r7
 8002126:	b006      	add	sp, #24
 8002128:	bd80      	pop	{r7, pc}
	...

0800212c <HAL_DMA_Abort>:
 800212c:	b580      	push	{r7, lr}
 800212e:	b082      	sub	sp, #8
 8002130:	af00      	add	r7, sp, #0
 8002132:	6078      	str	r0, [r7, #4]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	2b00      	cmp	r3, #0
 8002138:	d101      	bne.n	800213e <HAL_DMA_Abort+0x12>
 800213a:	2301      	movs	r3, #1
 800213c:	e050      	b.n	80021e0 <HAL_DMA_Abort+0xb4>
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	2225      	movs	r2, #37	@ 0x25
 8002142:	5c9b      	ldrb	r3, [r3, r2]
 8002144:	b2db      	uxtb	r3, r3
 8002146:	2b02      	cmp	r3, #2
 8002148:	d008      	beq.n	800215c <HAL_DMA_Abort+0x30>
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	2204      	movs	r2, #4
 800214e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2224      	movs	r2, #36	@ 0x24
 8002154:	2100      	movs	r1, #0
 8002156:	5499      	strb	r1, [r3, r2]
 8002158:	2301      	movs	r3, #1
 800215a:	e041      	b.n	80021e0 <HAL_DMA_Abort+0xb4>
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	681a      	ldr	r2, [r3, #0]
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	210e      	movs	r1, #14
 8002168:	438a      	bics	r2, r1
 800216a:	601a      	str	r2, [r3, #0]
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002170:	681a      	ldr	r2, [r3, #0]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002176:	491c      	ldr	r1, [pc, #112]	@ (80021e8 <HAL_DMA_Abort+0xbc>)
 8002178:	400a      	ands	r2, r1
 800217a:	601a      	str	r2, [r3, #0]
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	681a      	ldr	r2, [r3, #0]
 8002182:	687b      	ldr	r3, [r7, #4]
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	2101      	movs	r1, #1
 8002188:	438a      	bics	r2, r1
 800218a:	601a      	str	r2, [r3, #0]
 800218c:	4b17      	ldr	r3, [pc, #92]	@ (80021ec <HAL_DMA_Abort+0xc0>)
 800218e:	6859      	ldr	r1, [r3, #4]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002194:	221c      	movs	r2, #28
 8002196:	4013      	ands	r3, r2
 8002198:	2201      	movs	r2, #1
 800219a:	409a      	lsls	r2, r3
 800219c:	4b13      	ldr	r3, [pc, #76]	@ (80021ec <HAL_DMA_Abort+0xc0>)
 800219e:	430a      	orrs	r2, r1
 80021a0:	605a      	str	r2, [r3, #4]
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80021a6:	687a      	ldr	r2, [r7, #4]
 80021a8:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 80021aa:	605a      	str	r2, [r3, #4]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80021b0:	2b00      	cmp	r3, #0
 80021b2:	d00c      	beq.n	80021ce <HAL_DMA_Abort+0xa2>
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80021b8:	681a      	ldr	r2, [r3, #0]
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80021be:	490a      	ldr	r1, [pc, #40]	@ (80021e8 <HAL_DMA_Abort+0xbc>)
 80021c0:	400a      	ands	r2, r1
 80021c2:	601a      	str	r2, [r3, #0]
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80021c8:	687a      	ldr	r2, [r7, #4]
 80021ca:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 80021cc:	605a      	str	r2, [r3, #4]
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	2225      	movs	r2, #37	@ 0x25
 80021d2:	2101      	movs	r1, #1
 80021d4:	5499      	strb	r1, [r3, r2]
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	2224      	movs	r2, #36	@ 0x24
 80021da:	2100      	movs	r1, #0
 80021dc:	5499      	strb	r1, [r3, r2]
 80021de:	2300      	movs	r3, #0
 80021e0:	0018      	movs	r0, r3
 80021e2:	46bd      	mov	sp, r7
 80021e4:	b002      	add	sp, #8
 80021e6:	bd80      	pop	{r7, pc}
 80021e8:	fffffeff 	.word	0xfffffeff
 80021ec:	40020000 	.word	0x40020000

080021f0 <HAL_DMA_Abort_IT>:
 80021f0:	b580      	push	{r7, lr}
 80021f2:	b084      	sub	sp, #16
 80021f4:	af00      	add	r7, sp, #0
 80021f6:	6078      	str	r0, [r7, #4]
 80021f8:	230f      	movs	r3, #15
 80021fa:	18fb      	adds	r3, r7, r3
 80021fc:	2200      	movs	r2, #0
 80021fe:	701a      	strb	r2, [r3, #0]
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	2224      	movs	r2, #36	@ 0x24
 8002204:	2100      	movs	r1, #0
 8002206:	5499      	strb	r1, [r3, r2]
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	2224      	movs	r2, #36	@ 0x24
 800220c:	5c9b      	ldrb	r3, [r3, r2]
 800220e:	2b01      	cmp	r3, #1
 8002210:	d101      	bne.n	8002216 <HAL_DMA_Abort_IT+0x26>
 8002212:	2302      	movs	r3, #2
 8002214:	e05e      	b.n	80022d4 <HAL_DMA_Abort_IT+0xe4>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	2224      	movs	r2, #36	@ 0x24
 800221a:	2101      	movs	r1, #1
 800221c:	5499      	strb	r1, [r3, r2]
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	2225      	movs	r2, #37	@ 0x25
 8002222:	5c9b      	ldrb	r3, [r3, r2]
 8002224:	b2db      	uxtb	r3, r3
 8002226:	2b02      	cmp	r3, #2
 8002228:	d007      	beq.n	800223a <HAL_DMA_Abort_IT+0x4a>
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	2204      	movs	r2, #4
 800222e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002230:	230f      	movs	r3, #15
 8002232:	18fb      	adds	r3, r7, r3
 8002234:	2201      	movs	r2, #1
 8002236:	701a      	strb	r2, [r3, #0]
 8002238:	e049      	b.n	80022ce <HAL_DMA_Abort_IT+0xde>
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	681a      	ldr	r2, [r3, #0]
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	210e      	movs	r1, #14
 8002246:	438a      	bics	r2, r1
 8002248:	601a      	str	r2, [r3, #0]
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	681b      	ldr	r3, [r3, #0]
 800224e:	681a      	ldr	r2, [r3, #0]
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	2101      	movs	r1, #1
 8002256:	438a      	bics	r2, r1
 8002258:	601a      	str	r2, [r3, #0]
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800225e:	681a      	ldr	r2, [r3, #0]
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002264:	491d      	ldr	r1, [pc, #116]	@ (80022dc <HAL_DMA_Abort_IT+0xec>)
 8002266:	400a      	ands	r2, r1
 8002268:	601a      	str	r2, [r3, #0]
 800226a:	4b1d      	ldr	r3, [pc, #116]	@ (80022e0 <HAL_DMA_Abort_IT+0xf0>)
 800226c:	6859      	ldr	r1, [r3, #4]
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002272:	221c      	movs	r2, #28
 8002274:	4013      	ands	r3, r2
 8002276:	2201      	movs	r2, #1
 8002278:	409a      	lsls	r2, r3
 800227a:	4b19      	ldr	r3, [pc, #100]	@ (80022e0 <HAL_DMA_Abort_IT+0xf0>)
 800227c:	430a      	orrs	r2, r1
 800227e:	605a      	str	r2, [r3, #4]
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002284:	687a      	ldr	r2, [r7, #4]
 8002286:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8002288:	605a      	str	r2, [r3, #4]
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800228e:	2b00      	cmp	r3, #0
 8002290:	d00c      	beq.n	80022ac <HAL_DMA_Abort_IT+0xbc>
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002296:	681a      	ldr	r2, [r3, #0]
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800229c:	490f      	ldr	r1, [pc, #60]	@ (80022dc <HAL_DMA_Abort_IT+0xec>)
 800229e:	400a      	ands	r2, r1
 80022a0:	601a      	str	r2, [r3, #0]
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80022a6:	687a      	ldr	r2, [r7, #4]
 80022a8:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 80022aa:	605a      	str	r2, [r3, #4]
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	2225      	movs	r2, #37	@ 0x25
 80022b0:	2101      	movs	r1, #1
 80022b2:	5499      	strb	r1, [r3, r2]
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	2224      	movs	r2, #36	@ 0x24
 80022b8:	2100      	movs	r1, #0
 80022ba:	5499      	strb	r1, [r3, r2]
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d004      	beq.n	80022ce <HAL_DMA_Abort_IT+0xde>
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80022c8:	687a      	ldr	r2, [r7, #4]
 80022ca:	0010      	movs	r0, r2
 80022cc:	4798      	blx	r3
 80022ce:	230f      	movs	r3, #15
 80022d0:	18fb      	adds	r3, r7, r3
 80022d2:	781b      	ldrb	r3, [r3, #0]
 80022d4:	0018      	movs	r0, r3
 80022d6:	46bd      	mov	sp, r7
 80022d8:	b004      	add	sp, #16
 80022da:	bd80      	pop	{r7, pc}
 80022dc:	fffffeff 	.word	0xfffffeff
 80022e0:	40020000 	.word	0x40020000

080022e4 <HAL_DMA_IRQHandler>:
 80022e4:	b580      	push	{r7, lr}
 80022e6:	b084      	sub	sp, #16
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	6078      	str	r0, [r7, #4]
 80022ec:	4b55      	ldr	r3, [pc, #340]	@ (8002444 <HAL_DMA_IRQHandler+0x160>)
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	60fb      	str	r3, [r7, #12]
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	681b      	ldr	r3, [r3, #0]
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	60bb      	str	r3, [r7, #8]
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022fe:	221c      	movs	r2, #28
 8002300:	4013      	ands	r3, r2
 8002302:	2204      	movs	r2, #4
 8002304:	409a      	lsls	r2, r3
 8002306:	0013      	movs	r3, r2
 8002308:	68fa      	ldr	r2, [r7, #12]
 800230a:	4013      	ands	r3, r2
 800230c:	d027      	beq.n	800235e <HAL_DMA_IRQHandler+0x7a>
 800230e:	68bb      	ldr	r3, [r7, #8]
 8002310:	2204      	movs	r2, #4
 8002312:	4013      	ands	r3, r2
 8002314:	d023      	beq.n	800235e <HAL_DMA_IRQHandler+0x7a>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	2220      	movs	r2, #32
 800231e:	4013      	ands	r3, r2
 8002320:	d107      	bne.n	8002332 <HAL_DMA_IRQHandler+0x4e>
 8002322:	687b      	ldr	r3, [r7, #4]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	681a      	ldr	r2, [r3, #0]
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	2104      	movs	r1, #4
 800232e:	438a      	bics	r2, r1
 8002330:	601a      	str	r2, [r3, #0]
 8002332:	4b44      	ldr	r3, [pc, #272]	@ (8002444 <HAL_DMA_IRQHandler+0x160>)
 8002334:	6859      	ldr	r1, [r3, #4]
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800233a:	221c      	movs	r2, #28
 800233c:	4013      	ands	r3, r2
 800233e:	2204      	movs	r2, #4
 8002340:	409a      	lsls	r2, r3
 8002342:	4b40      	ldr	r3, [pc, #256]	@ (8002444 <HAL_DMA_IRQHandler+0x160>)
 8002344:	430a      	orrs	r2, r1
 8002346:	605a      	str	r2, [r3, #4]
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800234c:	2b00      	cmp	r3, #0
 800234e:	d100      	bne.n	8002352 <HAL_DMA_IRQHandler+0x6e>
 8002350:	e073      	b.n	800243a <HAL_DMA_IRQHandler+0x156>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002356:	687a      	ldr	r2, [r7, #4]
 8002358:	0010      	movs	r0, r2
 800235a:	4798      	blx	r3
 800235c:	e06d      	b.n	800243a <HAL_DMA_IRQHandler+0x156>
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002362:	221c      	movs	r2, #28
 8002364:	4013      	ands	r3, r2
 8002366:	2202      	movs	r2, #2
 8002368:	409a      	lsls	r2, r3
 800236a:	0013      	movs	r3, r2
 800236c:	68fa      	ldr	r2, [r7, #12]
 800236e:	4013      	ands	r3, r2
 8002370:	d02e      	beq.n	80023d0 <HAL_DMA_IRQHandler+0xec>
 8002372:	68bb      	ldr	r3, [r7, #8]
 8002374:	2202      	movs	r2, #2
 8002376:	4013      	ands	r3, r2
 8002378:	d02a      	beq.n	80023d0 <HAL_DMA_IRQHandler+0xec>
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	681b      	ldr	r3, [r3, #0]
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	2220      	movs	r2, #32
 8002382:	4013      	ands	r3, r2
 8002384:	d10b      	bne.n	800239e <HAL_DMA_IRQHandler+0xba>
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	681a      	ldr	r2, [r3, #0]
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	681b      	ldr	r3, [r3, #0]
 8002390:	210a      	movs	r1, #10
 8002392:	438a      	bics	r2, r1
 8002394:	601a      	str	r2, [r3, #0]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	2225      	movs	r2, #37	@ 0x25
 800239a:	2101      	movs	r1, #1
 800239c:	5499      	strb	r1, [r3, r2]
 800239e:	4b29      	ldr	r3, [pc, #164]	@ (8002444 <HAL_DMA_IRQHandler+0x160>)
 80023a0:	6859      	ldr	r1, [r3, #4]
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023a6:	221c      	movs	r2, #28
 80023a8:	4013      	ands	r3, r2
 80023aa:	2202      	movs	r2, #2
 80023ac:	409a      	lsls	r2, r3
 80023ae:	4b25      	ldr	r3, [pc, #148]	@ (8002444 <HAL_DMA_IRQHandler+0x160>)
 80023b0:	430a      	orrs	r2, r1
 80023b2:	605a      	str	r2, [r3, #4]
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	2224      	movs	r2, #36	@ 0x24
 80023b8:	2100      	movs	r1, #0
 80023ba:	5499      	strb	r1, [r3, r2]
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80023c0:	2b00      	cmp	r3, #0
 80023c2:	d03a      	beq.n	800243a <HAL_DMA_IRQHandler+0x156>
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80023c8:	687a      	ldr	r2, [r7, #4]
 80023ca:	0010      	movs	r0, r2
 80023cc:	4798      	blx	r3
 80023ce:	e034      	b.n	800243a <HAL_DMA_IRQHandler+0x156>
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023d4:	221c      	movs	r2, #28
 80023d6:	4013      	ands	r3, r2
 80023d8:	2208      	movs	r2, #8
 80023da:	409a      	lsls	r2, r3
 80023dc:	0013      	movs	r3, r2
 80023de:	68fa      	ldr	r2, [r7, #12]
 80023e0:	4013      	ands	r3, r2
 80023e2:	d02b      	beq.n	800243c <HAL_DMA_IRQHandler+0x158>
 80023e4:	68bb      	ldr	r3, [r7, #8]
 80023e6:	2208      	movs	r2, #8
 80023e8:	4013      	ands	r3, r2
 80023ea:	d027      	beq.n	800243c <HAL_DMA_IRQHandler+0x158>
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	681a      	ldr	r2, [r3, #0]
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	210e      	movs	r1, #14
 80023f8:	438a      	bics	r2, r1
 80023fa:	601a      	str	r2, [r3, #0]
 80023fc:	4b11      	ldr	r3, [pc, #68]	@ (8002444 <HAL_DMA_IRQHandler+0x160>)
 80023fe:	6859      	ldr	r1, [r3, #4]
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002404:	221c      	movs	r2, #28
 8002406:	4013      	ands	r3, r2
 8002408:	2201      	movs	r2, #1
 800240a:	409a      	lsls	r2, r3
 800240c:	4b0d      	ldr	r3, [pc, #52]	@ (8002444 <HAL_DMA_IRQHandler+0x160>)
 800240e:	430a      	orrs	r2, r1
 8002410:	605a      	str	r2, [r3, #4]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	2201      	movs	r2, #1
 8002416:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	2225      	movs	r2, #37	@ 0x25
 800241c:	2101      	movs	r1, #1
 800241e:	5499      	strb	r1, [r3, r2]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	2224      	movs	r2, #36	@ 0x24
 8002424:	2100      	movs	r1, #0
 8002426:	5499      	strb	r1, [r3, r2]
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800242c:	2b00      	cmp	r3, #0
 800242e:	d005      	beq.n	800243c <HAL_DMA_IRQHandler+0x158>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002434:	687a      	ldr	r2, [r7, #4]
 8002436:	0010      	movs	r0, r2
 8002438:	4798      	blx	r3
 800243a:	46c0      	nop			@ (mov r8, r8)
 800243c:	46c0      	nop			@ (mov r8, r8)
 800243e:	46bd      	mov	sp, r7
 8002440:	b004      	add	sp, #16
 8002442:	bd80      	pop	{r7, pc}
 8002444:	40020000 	.word	0x40020000

08002448 <HAL_DMA_GetError>:
 8002448:	b580      	push	{r7, lr}
 800244a:	b082      	sub	sp, #8
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002454:	0018      	movs	r0, r3
 8002456:	46bd      	mov	sp, r7
 8002458:	b002      	add	sp, #8
 800245a:	bd80      	pop	{r7, pc}

0800245c <DMA_SetConfig>:
 800245c:	b580      	push	{r7, lr}
 800245e:	b084      	sub	sp, #16
 8002460:	af00      	add	r7, sp, #0
 8002462:	60f8      	str	r0, [r7, #12]
 8002464:	60b9      	str	r1, [r7, #8]
 8002466:	607a      	str	r2, [r7, #4]
 8002468:	603b      	str	r3, [r7, #0]
 800246a:	68fb      	ldr	r3, [r7, #12]
 800246c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800246e:	68fa      	ldr	r2, [r7, #12]
 8002470:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
 8002472:	605a      	str	r2, [r3, #4]
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002478:	2b00      	cmp	r3, #0
 800247a:	d004      	beq.n	8002486 <DMA_SetConfig+0x2a>
 800247c:	68fb      	ldr	r3, [r7, #12]
 800247e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002480:	68fa      	ldr	r2, [r7, #12]
 8002482:	6d92      	ldr	r2, [r2, #88]	@ 0x58
 8002484:	605a      	str	r2, [r3, #4]
 8002486:	4b14      	ldr	r3, [pc, #80]	@ (80024d8 <DMA_SetConfig+0x7c>)
 8002488:	6859      	ldr	r1, [r3, #4]
 800248a:	68fb      	ldr	r3, [r7, #12]
 800248c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800248e:	221c      	movs	r2, #28
 8002490:	4013      	ands	r3, r2
 8002492:	2201      	movs	r2, #1
 8002494:	409a      	lsls	r2, r3
 8002496:	4b10      	ldr	r3, [pc, #64]	@ (80024d8 <DMA_SetConfig+0x7c>)
 8002498:	430a      	orrs	r2, r1
 800249a:	605a      	str	r2, [r3, #4]
 800249c:	68fb      	ldr	r3, [r7, #12]
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	683a      	ldr	r2, [r7, #0]
 80024a2:	605a      	str	r2, [r3, #4]
 80024a4:	68fb      	ldr	r3, [r7, #12]
 80024a6:	689b      	ldr	r3, [r3, #8]
 80024a8:	2b10      	cmp	r3, #16
 80024aa:	d108      	bne.n	80024be <DMA_SetConfig+0x62>
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	687a      	ldr	r2, [r7, #4]
 80024b2:	609a      	str	r2, [r3, #8]
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	68ba      	ldr	r2, [r7, #8]
 80024ba:	60da      	str	r2, [r3, #12]
 80024bc:	e007      	b.n	80024ce <DMA_SetConfig+0x72>
 80024be:	68fb      	ldr	r3, [r7, #12]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	68ba      	ldr	r2, [r7, #8]
 80024c4:	609a      	str	r2, [r3, #8]
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	681b      	ldr	r3, [r3, #0]
 80024ca:	687a      	ldr	r2, [r7, #4]
 80024cc:	60da      	str	r2, [r3, #12]
 80024ce:	46c0      	nop			@ (mov r8, r8)
 80024d0:	46bd      	mov	sp, r7
 80024d2:	b004      	add	sp, #16
 80024d4:	bd80      	pop	{r7, pc}
 80024d6:	46c0      	nop			@ (mov r8, r8)
 80024d8:	40020000 	.word	0x40020000

080024dc <DMA_CalcDMAMUXChannelBaseAndMask>:
 80024dc:	b580      	push	{r7, lr}
 80024de:	b084      	sub	sp, #16
 80024e0:	af00      	add	r7, sp, #0
 80024e2:	6078      	str	r0, [r7, #4]
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	001a      	movs	r2, r3
 80024ea:	23ff      	movs	r3, #255	@ 0xff
 80024ec:	4013      	ands	r3, r2
 80024ee:	3b08      	subs	r3, #8
 80024f0:	2114      	movs	r1, #20
 80024f2:	0018      	movs	r0, r3
 80024f4:	f7fd fe08 	bl	8000108 <__udivsi3>
 80024f8:	0003      	movs	r3, r0
 80024fa:	60fb      	str	r3, [r7, #12]
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002500:	089b      	lsrs	r3, r3, #2
 8002502:	4a0a      	ldr	r2, [pc, #40]	@ (800252c <DMA_CalcDMAMUXChannelBaseAndMask+0x50>)
 8002504:	4694      	mov	ip, r2
 8002506:	4463      	add	r3, ip
 8002508:	009b      	lsls	r3, r3, #2
 800250a:	001a      	movs	r2, r3
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	4a07      	ldr	r2, [pc, #28]	@ (8002530 <DMA_CalcDMAMUXChannelBaseAndMask+0x54>)
 8002514:	649a      	str	r2, [r3, #72]	@ 0x48
 8002516:	68fb      	ldr	r3, [r7, #12]
 8002518:	221c      	movs	r2, #28
 800251a:	4013      	ands	r3, r2
 800251c:	2201      	movs	r2, #1
 800251e:	409a      	lsls	r2, r3
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	64da      	str	r2, [r3, #76]	@ 0x4c
 8002524:	46c0      	nop			@ (mov r8, r8)
 8002526:	46bd      	mov	sp, r7
 8002528:	b004      	add	sp, #16
 800252a:	bd80      	pop	{r7, pc}
 800252c:	10008200 	.word	0x10008200
 8002530:	40020880 	.word	0x40020880

08002534 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8002534:	b580      	push	{r7, lr}
 8002536:	b084      	sub	sp, #16
 8002538:	af00      	add	r7, sp, #0
 800253a:	6078      	str	r0, [r7, #4]
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	685b      	ldr	r3, [r3, #4]
 8002540:	22ff      	movs	r2, #255	@ 0xff
 8002542:	4013      	ands	r3, r2
 8002544:	60fb      	str	r3, [r7, #12]
 8002546:	68fb      	ldr	r3, [r7, #12]
 8002548:	4a0a      	ldr	r2, [pc, #40]	@ (8002574 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 800254a:	4694      	mov	ip, r2
 800254c:	4463      	add	r3, ip
 800254e:	009b      	lsls	r3, r3, #2
 8002550:	001a      	movs	r2, r3
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	651a      	str	r2, [r3, #80]	@ 0x50
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	4a07      	ldr	r2, [pc, #28]	@ (8002578 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 800255a:	655a      	str	r2, [r3, #84]	@ 0x54
 800255c:	68fb      	ldr	r3, [r7, #12]
 800255e:	3b01      	subs	r3, #1
 8002560:	2203      	movs	r2, #3
 8002562:	4013      	ands	r3, r2
 8002564:	2201      	movs	r2, #1
 8002566:	409a      	lsls	r2, r3
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	659a      	str	r2, [r3, #88]	@ 0x58
 800256c:	46c0      	nop			@ (mov r8, r8)
 800256e:	46bd      	mov	sp, r7
 8002570:	b004      	add	sp, #16
 8002572:	bd80      	pop	{r7, pc}
 8002574:	1000823f 	.word	0x1000823f
 8002578:	40020940 	.word	0x40020940

0800257c <HAL_GPIO_Init>:
 800257c:	b580      	push	{r7, lr}
 800257e:	b086      	sub	sp, #24
 8002580:	af00      	add	r7, sp, #0
 8002582:	6078      	str	r0, [r7, #4]
 8002584:	6039      	str	r1, [r7, #0]
 8002586:	2300      	movs	r3, #0
 8002588:	613b      	str	r3, [r7, #16]
 800258a:	e153      	b.n	8002834 <HAL_GPIO_Init+0x2b8>
 800258c:	683b      	ldr	r3, [r7, #0]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	2101      	movs	r1, #1
 8002592:	693a      	ldr	r2, [r7, #16]
 8002594:	4091      	lsls	r1, r2
 8002596:	000a      	movs	r2, r1
 8002598:	4013      	ands	r3, r2
 800259a:	60fb      	str	r3, [r7, #12]
 800259c:	68fb      	ldr	r3, [r7, #12]
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d100      	bne.n	80025a4 <HAL_GPIO_Init+0x28>
 80025a2:	e144      	b.n	800282e <HAL_GPIO_Init+0x2b2>
 80025a4:	683b      	ldr	r3, [r7, #0]
 80025a6:	685b      	ldr	r3, [r3, #4]
 80025a8:	2b02      	cmp	r3, #2
 80025aa:	d003      	beq.n	80025b4 <HAL_GPIO_Init+0x38>
 80025ac:	683b      	ldr	r3, [r7, #0]
 80025ae:	685b      	ldr	r3, [r3, #4]
 80025b0:	2b12      	cmp	r3, #18
 80025b2:	d125      	bne.n	8002600 <HAL_GPIO_Init+0x84>
 80025b4:	693b      	ldr	r3, [r7, #16]
 80025b6:	08da      	lsrs	r2, r3, #3
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	3208      	adds	r2, #8
 80025bc:	0092      	lsls	r2, r2, #2
 80025be:	58d3      	ldr	r3, [r2, r3]
 80025c0:	617b      	str	r3, [r7, #20]
 80025c2:	693b      	ldr	r3, [r7, #16]
 80025c4:	2207      	movs	r2, #7
 80025c6:	4013      	ands	r3, r2
 80025c8:	009b      	lsls	r3, r3, #2
 80025ca:	220f      	movs	r2, #15
 80025cc:	409a      	lsls	r2, r3
 80025ce:	0013      	movs	r3, r2
 80025d0:	43da      	mvns	r2, r3
 80025d2:	697b      	ldr	r3, [r7, #20]
 80025d4:	4013      	ands	r3, r2
 80025d6:	617b      	str	r3, [r7, #20]
 80025d8:	683b      	ldr	r3, [r7, #0]
 80025da:	691b      	ldr	r3, [r3, #16]
 80025dc:	220f      	movs	r2, #15
 80025de:	401a      	ands	r2, r3
 80025e0:	693b      	ldr	r3, [r7, #16]
 80025e2:	2107      	movs	r1, #7
 80025e4:	400b      	ands	r3, r1
 80025e6:	009b      	lsls	r3, r3, #2
 80025e8:	409a      	lsls	r2, r3
 80025ea:	0013      	movs	r3, r2
 80025ec:	697a      	ldr	r2, [r7, #20]
 80025ee:	4313      	orrs	r3, r2
 80025f0:	617b      	str	r3, [r7, #20]
 80025f2:	693b      	ldr	r3, [r7, #16]
 80025f4:	08da      	lsrs	r2, r3, #3
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	3208      	adds	r2, #8
 80025fa:	0092      	lsls	r2, r2, #2
 80025fc:	6979      	ldr	r1, [r7, #20]
 80025fe:	50d1      	str	r1, [r2, r3]
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	617b      	str	r3, [r7, #20]
 8002606:	693b      	ldr	r3, [r7, #16]
 8002608:	005b      	lsls	r3, r3, #1
 800260a:	2203      	movs	r2, #3
 800260c:	409a      	lsls	r2, r3
 800260e:	0013      	movs	r3, r2
 8002610:	43da      	mvns	r2, r3
 8002612:	697b      	ldr	r3, [r7, #20]
 8002614:	4013      	ands	r3, r2
 8002616:	617b      	str	r3, [r7, #20]
 8002618:	683b      	ldr	r3, [r7, #0]
 800261a:	685b      	ldr	r3, [r3, #4]
 800261c:	2203      	movs	r2, #3
 800261e:	401a      	ands	r2, r3
 8002620:	693b      	ldr	r3, [r7, #16]
 8002622:	005b      	lsls	r3, r3, #1
 8002624:	409a      	lsls	r2, r3
 8002626:	0013      	movs	r3, r2
 8002628:	697a      	ldr	r2, [r7, #20]
 800262a:	4313      	orrs	r3, r2
 800262c:	617b      	str	r3, [r7, #20]
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	697a      	ldr	r2, [r7, #20]
 8002632:	601a      	str	r2, [r3, #0]
 8002634:	683b      	ldr	r3, [r7, #0]
 8002636:	685b      	ldr	r3, [r3, #4]
 8002638:	2b01      	cmp	r3, #1
 800263a:	d00b      	beq.n	8002654 <HAL_GPIO_Init+0xd8>
 800263c:	683b      	ldr	r3, [r7, #0]
 800263e:	685b      	ldr	r3, [r3, #4]
 8002640:	2b02      	cmp	r3, #2
 8002642:	d007      	beq.n	8002654 <HAL_GPIO_Init+0xd8>
 8002644:	683b      	ldr	r3, [r7, #0]
 8002646:	685b      	ldr	r3, [r3, #4]
 8002648:	2b11      	cmp	r3, #17
 800264a:	d003      	beq.n	8002654 <HAL_GPIO_Init+0xd8>
 800264c:	683b      	ldr	r3, [r7, #0]
 800264e:	685b      	ldr	r3, [r3, #4]
 8002650:	2b12      	cmp	r3, #18
 8002652:	d130      	bne.n	80026b6 <HAL_GPIO_Init+0x13a>
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	689b      	ldr	r3, [r3, #8]
 8002658:	617b      	str	r3, [r7, #20]
 800265a:	693b      	ldr	r3, [r7, #16]
 800265c:	005b      	lsls	r3, r3, #1
 800265e:	2203      	movs	r2, #3
 8002660:	409a      	lsls	r2, r3
 8002662:	0013      	movs	r3, r2
 8002664:	43da      	mvns	r2, r3
 8002666:	697b      	ldr	r3, [r7, #20]
 8002668:	4013      	ands	r3, r2
 800266a:	617b      	str	r3, [r7, #20]
 800266c:	683b      	ldr	r3, [r7, #0]
 800266e:	68da      	ldr	r2, [r3, #12]
 8002670:	693b      	ldr	r3, [r7, #16]
 8002672:	005b      	lsls	r3, r3, #1
 8002674:	409a      	lsls	r2, r3
 8002676:	0013      	movs	r3, r2
 8002678:	697a      	ldr	r2, [r7, #20]
 800267a:	4313      	orrs	r3, r2
 800267c:	617b      	str	r3, [r7, #20]
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	697a      	ldr	r2, [r7, #20]
 8002682:	609a      	str	r2, [r3, #8]
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	685b      	ldr	r3, [r3, #4]
 8002688:	617b      	str	r3, [r7, #20]
 800268a:	2201      	movs	r2, #1
 800268c:	693b      	ldr	r3, [r7, #16]
 800268e:	409a      	lsls	r2, r3
 8002690:	0013      	movs	r3, r2
 8002692:	43da      	mvns	r2, r3
 8002694:	697b      	ldr	r3, [r7, #20]
 8002696:	4013      	ands	r3, r2
 8002698:	617b      	str	r3, [r7, #20]
 800269a:	683b      	ldr	r3, [r7, #0]
 800269c:	685b      	ldr	r3, [r3, #4]
 800269e:	091b      	lsrs	r3, r3, #4
 80026a0:	2201      	movs	r2, #1
 80026a2:	401a      	ands	r2, r3
 80026a4:	693b      	ldr	r3, [r7, #16]
 80026a6:	409a      	lsls	r2, r3
 80026a8:	0013      	movs	r3, r2
 80026aa:	697a      	ldr	r2, [r7, #20]
 80026ac:	4313      	orrs	r3, r2
 80026ae:	617b      	str	r3, [r7, #20]
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	697a      	ldr	r2, [r7, #20]
 80026b4:	605a      	str	r2, [r3, #4]
 80026b6:	683b      	ldr	r3, [r7, #0]
 80026b8:	685b      	ldr	r3, [r3, #4]
 80026ba:	2b03      	cmp	r3, #3
 80026bc:	d017      	beq.n	80026ee <HAL_GPIO_Init+0x172>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	68db      	ldr	r3, [r3, #12]
 80026c2:	617b      	str	r3, [r7, #20]
 80026c4:	693b      	ldr	r3, [r7, #16]
 80026c6:	005b      	lsls	r3, r3, #1
 80026c8:	2203      	movs	r2, #3
 80026ca:	409a      	lsls	r2, r3
 80026cc:	0013      	movs	r3, r2
 80026ce:	43da      	mvns	r2, r3
 80026d0:	697b      	ldr	r3, [r7, #20]
 80026d2:	4013      	ands	r3, r2
 80026d4:	617b      	str	r3, [r7, #20]
 80026d6:	683b      	ldr	r3, [r7, #0]
 80026d8:	689a      	ldr	r2, [r3, #8]
 80026da:	693b      	ldr	r3, [r7, #16]
 80026dc:	005b      	lsls	r3, r3, #1
 80026de:	409a      	lsls	r2, r3
 80026e0:	0013      	movs	r3, r2
 80026e2:	697a      	ldr	r2, [r7, #20]
 80026e4:	4313      	orrs	r3, r2
 80026e6:	617b      	str	r3, [r7, #20]
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	697a      	ldr	r2, [r7, #20]
 80026ec:	60da      	str	r2, [r3, #12]
 80026ee:	683b      	ldr	r3, [r7, #0]
 80026f0:	685a      	ldr	r2, [r3, #4]
 80026f2:	2380      	movs	r3, #128	@ 0x80
 80026f4:	055b      	lsls	r3, r3, #21
 80026f6:	4013      	ands	r3, r2
 80026f8:	d100      	bne.n	80026fc <HAL_GPIO_Init+0x180>
 80026fa:	e098      	b.n	800282e <HAL_GPIO_Init+0x2b2>
 80026fc:	4a53      	ldr	r2, [pc, #332]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 80026fe:	693b      	ldr	r3, [r7, #16]
 8002700:	089b      	lsrs	r3, r3, #2
 8002702:	3318      	adds	r3, #24
 8002704:	009b      	lsls	r3, r3, #2
 8002706:	589b      	ldr	r3, [r3, r2]
 8002708:	617b      	str	r3, [r7, #20]
 800270a:	693b      	ldr	r3, [r7, #16]
 800270c:	2203      	movs	r2, #3
 800270e:	4013      	ands	r3, r2
 8002710:	00db      	lsls	r3, r3, #3
 8002712:	220f      	movs	r2, #15
 8002714:	409a      	lsls	r2, r3
 8002716:	0013      	movs	r3, r2
 8002718:	43da      	mvns	r2, r3
 800271a:	697b      	ldr	r3, [r7, #20]
 800271c:	4013      	ands	r3, r2
 800271e:	617b      	str	r3, [r7, #20]
 8002720:	687a      	ldr	r2, [r7, #4]
 8002722:	23a0      	movs	r3, #160	@ 0xa0
 8002724:	05db      	lsls	r3, r3, #23
 8002726:	429a      	cmp	r2, r3
 8002728:	d019      	beq.n	800275e <HAL_GPIO_Init+0x1e2>
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	4a48      	ldr	r2, [pc, #288]	@ (8002850 <HAL_GPIO_Init+0x2d4>)
 800272e:	4293      	cmp	r3, r2
 8002730:	d013      	beq.n	800275a <HAL_GPIO_Init+0x1de>
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	4a47      	ldr	r2, [pc, #284]	@ (8002854 <HAL_GPIO_Init+0x2d8>)
 8002736:	4293      	cmp	r3, r2
 8002738:	d00d      	beq.n	8002756 <HAL_GPIO_Init+0x1da>
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	4a46      	ldr	r2, [pc, #280]	@ (8002858 <HAL_GPIO_Init+0x2dc>)
 800273e:	4293      	cmp	r3, r2
 8002740:	d007      	beq.n	8002752 <HAL_GPIO_Init+0x1d6>
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	4a45      	ldr	r2, [pc, #276]	@ (800285c <HAL_GPIO_Init+0x2e0>)
 8002746:	4293      	cmp	r3, r2
 8002748:	d101      	bne.n	800274e <HAL_GPIO_Init+0x1d2>
 800274a:	2305      	movs	r3, #5
 800274c:	e008      	b.n	8002760 <HAL_GPIO_Init+0x1e4>
 800274e:	2306      	movs	r3, #6
 8002750:	e006      	b.n	8002760 <HAL_GPIO_Init+0x1e4>
 8002752:	2303      	movs	r3, #3
 8002754:	e004      	b.n	8002760 <HAL_GPIO_Init+0x1e4>
 8002756:	2302      	movs	r3, #2
 8002758:	e002      	b.n	8002760 <HAL_GPIO_Init+0x1e4>
 800275a:	2301      	movs	r3, #1
 800275c:	e000      	b.n	8002760 <HAL_GPIO_Init+0x1e4>
 800275e:	2300      	movs	r3, #0
 8002760:	693a      	ldr	r2, [r7, #16]
 8002762:	2103      	movs	r1, #3
 8002764:	400a      	ands	r2, r1
 8002766:	00d2      	lsls	r2, r2, #3
 8002768:	4093      	lsls	r3, r2
 800276a:	697a      	ldr	r2, [r7, #20]
 800276c:	4313      	orrs	r3, r2
 800276e:	617b      	str	r3, [r7, #20]
 8002770:	4936      	ldr	r1, [pc, #216]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 8002772:	693b      	ldr	r3, [r7, #16]
 8002774:	089b      	lsrs	r3, r3, #2
 8002776:	3318      	adds	r3, #24
 8002778:	009b      	lsls	r3, r3, #2
 800277a:	697a      	ldr	r2, [r7, #20]
 800277c:	505a      	str	r2, [r3, r1]
 800277e:	4a33      	ldr	r2, [pc, #204]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 8002780:	2380      	movs	r3, #128	@ 0x80
 8002782:	58d3      	ldr	r3, [r2, r3]
 8002784:	617b      	str	r3, [r7, #20]
 8002786:	68fb      	ldr	r3, [r7, #12]
 8002788:	43da      	mvns	r2, r3
 800278a:	697b      	ldr	r3, [r7, #20]
 800278c:	4013      	ands	r3, r2
 800278e:	617b      	str	r3, [r7, #20]
 8002790:	683b      	ldr	r3, [r7, #0]
 8002792:	685a      	ldr	r2, [r3, #4]
 8002794:	2380      	movs	r3, #128	@ 0x80
 8002796:	025b      	lsls	r3, r3, #9
 8002798:	4013      	ands	r3, r2
 800279a:	d003      	beq.n	80027a4 <HAL_GPIO_Init+0x228>
 800279c:	697a      	ldr	r2, [r7, #20]
 800279e:	68fb      	ldr	r3, [r7, #12]
 80027a0:	4313      	orrs	r3, r2
 80027a2:	617b      	str	r3, [r7, #20]
 80027a4:	4929      	ldr	r1, [pc, #164]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 80027a6:	2280      	movs	r2, #128	@ 0x80
 80027a8:	697b      	ldr	r3, [r7, #20]
 80027aa:	508b      	str	r3, [r1, r2]
 80027ac:	4a27      	ldr	r2, [pc, #156]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 80027ae:	2384      	movs	r3, #132	@ 0x84
 80027b0:	58d3      	ldr	r3, [r2, r3]
 80027b2:	617b      	str	r3, [r7, #20]
 80027b4:	68fb      	ldr	r3, [r7, #12]
 80027b6:	43da      	mvns	r2, r3
 80027b8:	697b      	ldr	r3, [r7, #20]
 80027ba:	4013      	ands	r3, r2
 80027bc:	617b      	str	r3, [r7, #20]
 80027be:	683b      	ldr	r3, [r7, #0]
 80027c0:	685a      	ldr	r2, [r3, #4]
 80027c2:	2380      	movs	r3, #128	@ 0x80
 80027c4:	029b      	lsls	r3, r3, #10
 80027c6:	4013      	ands	r3, r2
 80027c8:	d003      	beq.n	80027d2 <HAL_GPIO_Init+0x256>
 80027ca:	697a      	ldr	r2, [r7, #20]
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	4313      	orrs	r3, r2
 80027d0:	617b      	str	r3, [r7, #20]
 80027d2:	491e      	ldr	r1, [pc, #120]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 80027d4:	2284      	movs	r2, #132	@ 0x84
 80027d6:	697b      	ldr	r3, [r7, #20]
 80027d8:	508b      	str	r3, [r1, r2]
 80027da:	4b1c      	ldr	r3, [pc, #112]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 80027dc:	681b      	ldr	r3, [r3, #0]
 80027de:	617b      	str	r3, [r7, #20]
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	43da      	mvns	r2, r3
 80027e4:	697b      	ldr	r3, [r7, #20]
 80027e6:	4013      	ands	r3, r2
 80027e8:	617b      	str	r3, [r7, #20]
 80027ea:	683b      	ldr	r3, [r7, #0]
 80027ec:	685a      	ldr	r2, [r3, #4]
 80027ee:	2380      	movs	r3, #128	@ 0x80
 80027f0:	035b      	lsls	r3, r3, #13
 80027f2:	4013      	ands	r3, r2
 80027f4:	d003      	beq.n	80027fe <HAL_GPIO_Init+0x282>
 80027f6:	697a      	ldr	r2, [r7, #20]
 80027f8:	68fb      	ldr	r3, [r7, #12]
 80027fa:	4313      	orrs	r3, r2
 80027fc:	617b      	str	r3, [r7, #20]
 80027fe:	4b13      	ldr	r3, [pc, #76]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 8002800:	697a      	ldr	r2, [r7, #20]
 8002802:	601a      	str	r2, [r3, #0]
 8002804:	4b11      	ldr	r3, [pc, #68]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 8002806:	685b      	ldr	r3, [r3, #4]
 8002808:	617b      	str	r3, [r7, #20]
 800280a:	68fb      	ldr	r3, [r7, #12]
 800280c:	43da      	mvns	r2, r3
 800280e:	697b      	ldr	r3, [r7, #20]
 8002810:	4013      	ands	r3, r2
 8002812:	617b      	str	r3, [r7, #20]
 8002814:	683b      	ldr	r3, [r7, #0]
 8002816:	685a      	ldr	r2, [r3, #4]
 8002818:	2380      	movs	r3, #128	@ 0x80
 800281a:	039b      	lsls	r3, r3, #14
 800281c:	4013      	ands	r3, r2
 800281e:	d003      	beq.n	8002828 <HAL_GPIO_Init+0x2ac>
 8002820:	697a      	ldr	r2, [r7, #20]
 8002822:	68fb      	ldr	r3, [r7, #12]
 8002824:	4313      	orrs	r3, r2
 8002826:	617b      	str	r3, [r7, #20]
 8002828:	4b08      	ldr	r3, [pc, #32]	@ (800284c <HAL_GPIO_Init+0x2d0>)
 800282a:	697a      	ldr	r2, [r7, #20]
 800282c:	605a      	str	r2, [r3, #4]
 800282e:	693b      	ldr	r3, [r7, #16]
 8002830:	3301      	adds	r3, #1
 8002832:	613b      	str	r3, [r7, #16]
 8002834:	683b      	ldr	r3, [r7, #0]
 8002836:	681a      	ldr	r2, [r3, #0]
 8002838:	693b      	ldr	r3, [r7, #16]
 800283a:	40da      	lsrs	r2, r3
 800283c:	1e13      	subs	r3, r2, #0
 800283e:	d000      	beq.n	8002842 <HAL_GPIO_Init+0x2c6>
 8002840:	e6a4      	b.n	800258c <HAL_GPIO_Init+0x10>
 8002842:	46c0      	nop			@ (mov r8, r8)
 8002844:	46c0      	nop			@ (mov r8, r8)
 8002846:	46bd      	mov	sp, r7
 8002848:	b006      	add	sp, #24
 800284a:	bd80      	pop	{r7, pc}
 800284c:	40021800 	.word	0x40021800
 8002850:	50000400 	.word	0x50000400
 8002854:	50000800 	.word	0x50000800
 8002858:	50000c00 	.word	0x50000c00
 800285c:	50001400 	.word	0x50001400

08002860 <HAL_GPIO_DeInit>:
 8002860:	b580      	push	{r7, lr}
 8002862:	b086      	sub	sp, #24
 8002864:	af00      	add	r7, sp, #0
 8002866:	6078      	str	r0, [r7, #4]
 8002868:	6039      	str	r1, [r7, #0]
 800286a:	2300      	movs	r3, #0
 800286c:	617b      	str	r3, [r7, #20]
 800286e:	e0ba      	b.n	80029e6 <HAL_GPIO_DeInit+0x186>
 8002870:	2201      	movs	r2, #1
 8002872:	697b      	ldr	r3, [r7, #20]
 8002874:	409a      	lsls	r2, r3
 8002876:	683b      	ldr	r3, [r7, #0]
 8002878:	4013      	ands	r3, r2
 800287a:	613b      	str	r3, [r7, #16]
 800287c:	693b      	ldr	r3, [r7, #16]
 800287e:	2b00      	cmp	r3, #0
 8002880:	d100      	bne.n	8002884 <HAL_GPIO_DeInit+0x24>
 8002882:	e0ad      	b.n	80029e0 <HAL_GPIO_DeInit+0x180>
 8002884:	4a5d      	ldr	r2, [pc, #372]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002886:	697b      	ldr	r3, [r7, #20]
 8002888:	089b      	lsrs	r3, r3, #2
 800288a:	3318      	adds	r3, #24
 800288c:	009b      	lsls	r3, r3, #2
 800288e:	589b      	ldr	r3, [r3, r2]
 8002890:	60fb      	str	r3, [r7, #12]
 8002892:	697b      	ldr	r3, [r7, #20]
 8002894:	2203      	movs	r2, #3
 8002896:	4013      	ands	r3, r2
 8002898:	00db      	lsls	r3, r3, #3
 800289a:	220f      	movs	r2, #15
 800289c:	409a      	lsls	r2, r3
 800289e:	68fb      	ldr	r3, [r7, #12]
 80028a0:	4013      	ands	r3, r2
 80028a2:	60fb      	str	r3, [r7, #12]
 80028a4:	687a      	ldr	r2, [r7, #4]
 80028a6:	23a0      	movs	r3, #160	@ 0xa0
 80028a8:	05db      	lsls	r3, r3, #23
 80028aa:	429a      	cmp	r2, r3
 80028ac:	d019      	beq.n	80028e2 <HAL_GPIO_DeInit+0x82>
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	4a53      	ldr	r2, [pc, #332]	@ (8002a00 <HAL_GPIO_DeInit+0x1a0>)
 80028b2:	4293      	cmp	r3, r2
 80028b4:	d013      	beq.n	80028de <HAL_GPIO_DeInit+0x7e>
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	4a52      	ldr	r2, [pc, #328]	@ (8002a04 <HAL_GPIO_DeInit+0x1a4>)
 80028ba:	4293      	cmp	r3, r2
 80028bc:	d00d      	beq.n	80028da <HAL_GPIO_DeInit+0x7a>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	4a51      	ldr	r2, [pc, #324]	@ (8002a08 <HAL_GPIO_DeInit+0x1a8>)
 80028c2:	4293      	cmp	r3, r2
 80028c4:	d007      	beq.n	80028d6 <HAL_GPIO_DeInit+0x76>
 80028c6:	687b      	ldr	r3, [r7, #4]
 80028c8:	4a50      	ldr	r2, [pc, #320]	@ (8002a0c <HAL_GPIO_DeInit+0x1ac>)
 80028ca:	4293      	cmp	r3, r2
 80028cc:	d101      	bne.n	80028d2 <HAL_GPIO_DeInit+0x72>
 80028ce:	2305      	movs	r3, #5
 80028d0:	e008      	b.n	80028e4 <HAL_GPIO_DeInit+0x84>
 80028d2:	2306      	movs	r3, #6
 80028d4:	e006      	b.n	80028e4 <HAL_GPIO_DeInit+0x84>
 80028d6:	2303      	movs	r3, #3
 80028d8:	e004      	b.n	80028e4 <HAL_GPIO_DeInit+0x84>
 80028da:	2302      	movs	r3, #2
 80028dc:	e002      	b.n	80028e4 <HAL_GPIO_DeInit+0x84>
 80028de:	2301      	movs	r3, #1
 80028e0:	e000      	b.n	80028e4 <HAL_GPIO_DeInit+0x84>
 80028e2:	2300      	movs	r3, #0
 80028e4:	697a      	ldr	r2, [r7, #20]
 80028e6:	2103      	movs	r1, #3
 80028e8:	400a      	ands	r2, r1
 80028ea:	00d2      	lsls	r2, r2, #3
 80028ec:	4093      	lsls	r3, r2
 80028ee:	68fa      	ldr	r2, [r7, #12]
 80028f0:	429a      	cmp	r2, r3
 80028f2:	d136      	bne.n	8002962 <HAL_GPIO_DeInit+0x102>
 80028f4:	4a41      	ldr	r2, [pc, #260]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 80028f6:	2380      	movs	r3, #128	@ 0x80
 80028f8:	58d3      	ldr	r3, [r2, r3]
 80028fa:	693a      	ldr	r2, [r7, #16]
 80028fc:	43d2      	mvns	r2, r2
 80028fe:	493f      	ldr	r1, [pc, #252]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002900:	4013      	ands	r3, r2
 8002902:	2280      	movs	r2, #128	@ 0x80
 8002904:	508b      	str	r3, [r1, r2]
 8002906:	4a3d      	ldr	r2, [pc, #244]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002908:	2384      	movs	r3, #132	@ 0x84
 800290a:	58d3      	ldr	r3, [r2, r3]
 800290c:	693a      	ldr	r2, [r7, #16]
 800290e:	43d2      	mvns	r2, r2
 8002910:	493a      	ldr	r1, [pc, #232]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002912:	4013      	ands	r3, r2
 8002914:	2284      	movs	r2, #132	@ 0x84
 8002916:	508b      	str	r3, [r1, r2]
 8002918:	4b38      	ldr	r3, [pc, #224]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 800291a:	681a      	ldr	r2, [r3, #0]
 800291c:	693b      	ldr	r3, [r7, #16]
 800291e:	43d9      	mvns	r1, r3
 8002920:	4b36      	ldr	r3, [pc, #216]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002922:	400a      	ands	r2, r1
 8002924:	601a      	str	r2, [r3, #0]
 8002926:	4b35      	ldr	r3, [pc, #212]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002928:	685a      	ldr	r2, [r3, #4]
 800292a:	693b      	ldr	r3, [r7, #16]
 800292c:	43d9      	mvns	r1, r3
 800292e:	4b33      	ldr	r3, [pc, #204]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002930:	400a      	ands	r2, r1
 8002932:	605a      	str	r2, [r3, #4]
 8002934:	697b      	ldr	r3, [r7, #20]
 8002936:	2203      	movs	r2, #3
 8002938:	4013      	ands	r3, r2
 800293a:	00db      	lsls	r3, r3, #3
 800293c:	220f      	movs	r2, #15
 800293e:	409a      	lsls	r2, r3
 8002940:	0013      	movs	r3, r2
 8002942:	60fb      	str	r3, [r7, #12]
 8002944:	4a2d      	ldr	r2, [pc, #180]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002946:	697b      	ldr	r3, [r7, #20]
 8002948:	089b      	lsrs	r3, r3, #2
 800294a:	3318      	adds	r3, #24
 800294c:	009b      	lsls	r3, r3, #2
 800294e:	589a      	ldr	r2, [r3, r2]
 8002950:	68fb      	ldr	r3, [r7, #12]
 8002952:	43d9      	mvns	r1, r3
 8002954:	4829      	ldr	r0, [pc, #164]	@ (80029fc <HAL_GPIO_DeInit+0x19c>)
 8002956:	697b      	ldr	r3, [r7, #20]
 8002958:	089b      	lsrs	r3, r3, #2
 800295a:	400a      	ands	r2, r1
 800295c:	3318      	adds	r3, #24
 800295e:	009b      	lsls	r3, r3, #2
 8002960:	501a      	str	r2, [r3, r0]
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	681a      	ldr	r2, [r3, #0]
 8002966:	697b      	ldr	r3, [r7, #20]
 8002968:	005b      	lsls	r3, r3, #1
 800296a:	2103      	movs	r1, #3
 800296c:	4099      	lsls	r1, r3
 800296e:	000b      	movs	r3, r1
 8002970:	431a      	orrs	r2, r3
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	601a      	str	r2, [r3, #0]
 8002976:	697b      	ldr	r3, [r7, #20]
 8002978:	08da      	lsrs	r2, r3, #3
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	3208      	adds	r2, #8
 800297e:	0092      	lsls	r2, r2, #2
 8002980:	58d3      	ldr	r3, [r2, r3]
 8002982:	697a      	ldr	r2, [r7, #20]
 8002984:	2107      	movs	r1, #7
 8002986:	400a      	ands	r2, r1
 8002988:	0092      	lsls	r2, r2, #2
 800298a:	210f      	movs	r1, #15
 800298c:	4091      	lsls	r1, r2
 800298e:	000a      	movs	r2, r1
 8002990:	43d1      	mvns	r1, r2
 8002992:	697a      	ldr	r2, [r7, #20]
 8002994:	08d2      	lsrs	r2, r2, #3
 8002996:	4019      	ands	r1, r3
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	3208      	adds	r2, #8
 800299c:	0092      	lsls	r2, r2, #2
 800299e:	50d1      	str	r1, [r2, r3]
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	689b      	ldr	r3, [r3, #8]
 80029a4:	697a      	ldr	r2, [r7, #20]
 80029a6:	0052      	lsls	r2, r2, #1
 80029a8:	2103      	movs	r1, #3
 80029aa:	4091      	lsls	r1, r2
 80029ac:	000a      	movs	r2, r1
 80029ae:	43d2      	mvns	r2, r2
 80029b0:	401a      	ands	r2, r3
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	609a      	str	r2, [r3, #8]
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	685b      	ldr	r3, [r3, #4]
 80029ba:	2101      	movs	r1, #1
 80029bc:	697a      	ldr	r2, [r7, #20]
 80029be:	4091      	lsls	r1, r2
 80029c0:	000a      	movs	r2, r1
 80029c2:	43d2      	mvns	r2, r2
 80029c4:	401a      	ands	r2, r3
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	605a      	str	r2, [r3, #4]
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	68db      	ldr	r3, [r3, #12]
 80029ce:	697a      	ldr	r2, [r7, #20]
 80029d0:	0052      	lsls	r2, r2, #1
 80029d2:	2103      	movs	r1, #3
 80029d4:	4091      	lsls	r1, r2
 80029d6:	000a      	movs	r2, r1
 80029d8:	43d2      	mvns	r2, r2
 80029da:	401a      	ands	r2, r3
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	60da      	str	r2, [r3, #12]
 80029e0:	697b      	ldr	r3, [r7, #20]
 80029e2:	3301      	adds	r3, #1
 80029e4:	617b      	str	r3, [r7, #20]
 80029e6:	683a      	ldr	r2, [r7, #0]
 80029e8:	697b      	ldr	r3, [r7, #20]
 80029ea:	40da      	lsrs	r2, r3
 80029ec:	1e13      	subs	r3, r2, #0
 80029ee:	d000      	beq.n	80029f2 <HAL_GPIO_DeInit+0x192>
 80029f0:	e73e      	b.n	8002870 <HAL_GPIO_DeInit+0x10>
 80029f2:	46c0      	nop			@ (mov r8, r8)
 80029f4:	46c0      	nop			@ (mov r8, r8)
 80029f6:	46bd      	mov	sp, r7
 80029f8:	b006      	add	sp, #24
 80029fa:	bd80      	pop	{r7, pc}
 80029fc:	40021800 	.word	0x40021800
 8002a00:	50000400 	.word	0x50000400
 8002a04:	50000800 	.word	0x50000800
 8002a08:	50000c00 	.word	0x50000c00
 8002a0c:	50001400 	.word	0x50001400

08002a10 <HAL_GPIO_ReadPin>:
 8002a10:	b580      	push	{r7, lr}
 8002a12:	b084      	sub	sp, #16
 8002a14:	af00      	add	r7, sp, #0
 8002a16:	6078      	str	r0, [r7, #4]
 8002a18:	000a      	movs	r2, r1
 8002a1a:	1cbb      	adds	r3, r7, #2
 8002a1c:	801a      	strh	r2, [r3, #0]
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	691b      	ldr	r3, [r3, #16]
 8002a22:	1cba      	adds	r2, r7, #2
 8002a24:	8812      	ldrh	r2, [r2, #0]
 8002a26:	4013      	ands	r3, r2
 8002a28:	d004      	beq.n	8002a34 <HAL_GPIO_ReadPin+0x24>
 8002a2a:	230f      	movs	r3, #15
 8002a2c:	18fb      	adds	r3, r7, r3
 8002a2e:	2201      	movs	r2, #1
 8002a30:	701a      	strb	r2, [r3, #0]
 8002a32:	e003      	b.n	8002a3c <HAL_GPIO_ReadPin+0x2c>
 8002a34:	230f      	movs	r3, #15
 8002a36:	18fb      	adds	r3, r7, r3
 8002a38:	2200      	movs	r2, #0
 8002a3a:	701a      	strb	r2, [r3, #0]
 8002a3c:	230f      	movs	r3, #15
 8002a3e:	18fb      	adds	r3, r7, r3
 8002a40:	781b      	ldrb	r3, [r3, #0]
 8002a42:	0018      	movs	r0, r3
 8002a44:	46bd      	mov	sp, r7
 8002a46:	b004      	add	sp, #16
 8002a48:	bd80      	pop	{r7, pc}

08002a4a <HAL_GPIO_WritePin>:
 8002a4a:	b580      	push	{r7, lr}
 8002a4c:	b082      	sub	sp, #8
 8002a4e:	af00      	add	r7, sp, #0
 8002a50:	6078      	str	r0, [r7, #4]
 8002a52:	0008      	movs	r0, r1
 8002a54:	0011      	movs	r1, r2
 8002a56:	1cbb      	adds	r3, r7, #2
 8002a58:	1c02      	adds	r2, r0, #0
 8002a5a:	801a      	strh	r2, [r3, #0]
 8002a5c:	1c7b      	adds	r3, r7, #1
 8002a5e:	1c0a      	adds	r2, r1, #0
 8002a60:	701a      	strb	r2, [r3, #0]
 8002a62:	1c7b      	adds	r3, r7, #1
 8002a64:	781b      	ldrb	r3, [r3, #0]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d004      	beq.n	8002a74 <HAL_GPIO_WritePin+0x2a>
 8002a6a:	1cbb      	adds	r3, r7, #2
 8002a6c:	881a      	ldrh	r2, [r3, #0]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	619a      	str	r2, [r3, #24]
 8002a72:	e003      	b.n	8002a7c <HAL_GPIO_WritePin+0x32>
 8002a74:	1cbb      	adds	r3, r7, #2
 8002a76:	881a      	ldrh	r2, [r3, #0]
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002a7c:	46c0      	nop			@ (mov r8, r8)
 8002a7e:	46bd      	mov	sp, r7
 8002a80:	b002      	add	sp, #8
 8002a82:	bd80      	pop	{r7, pc}

08002a84 <HAL_RCC_OscConfig>:
 8002a84:	b580      	push	{r7, lr}
 8002a86:	b086      	sub	sp, #24
 8002a88:	af00      	add	r7, sp, #0
 8002a8a:	6078      	str	r0, [r7, #4]
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d101      	bne.n	8002a96 <HAL_RCC_OscConfig+0x12>
 8002a92:	2301      	movs	r3, #1
 8002a94:	e20f      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	2201      	movs	r2, #1
 8002a9c:	4013      	ands	r3, r2
 8002a9e:	d100      	bne.n	8002aa2 <HAL_RCC_OscConfig+0x1e>
 8002aa0:	e069      	b.n	8002b76 <HAL_RCC_OscConfig+0xf2>
 8002aa2:	4bc8      	ldr	r3, [pc, #800]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002aa4:	689b      	ldr	r3, [r3, #8]
 8002aa6:	2238      	movs	r2, #56	@ 0x38
 8002aa8:	4013      	ands	r3, r2
 8002aaa:	617b      	str	r3, [r7, #20]
 8002aac:	697b      	ldr	r3, [r7, #20]
 8002aae:	2b08      	cmp	r3, #8
 8002ab0:	d105      	bne.n	8002abe <HAL_RCC_OscConfig+0x3a>
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	685b      	ldr	r3, [r3, #4]
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d15d      	bne.n	8002b76 <HAL_RCC_OscConfig+0xf2>
 8002aba:	2301      	movs	r3, #1
 8002abc:	e1fb      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	685a      	ldr	r2, [r3, #4]
 8002ac2:	2380      	movs	r3, #128	@ 0x80
 8002ac4:	025b      	lsls	r3, r3, #9
 8002ac6:	429a      	cmp	r2, r3
 8002ac8:	d107      	bne.n	8002ada <HAL_RCC_OscConfig+0x56>
 8002aca:	4bbe      	ldr	r3, [pc, #760]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002acc:	681a      	ldr	r2, [r3, #0]
 8002ace:	4bbd      	ldr	r3, [pc, #756]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002ad0:	2180      	movs	r1, #128	@ 0x80
 8002ad2:	0249      	lsls	r1, r1, #9
 8002ad4:	430a      	orrs	r2, r1
 8002ad6:	601a      	str	r2, [r3, #0]
 8002ad8:	e020      	b.n	8002b1c <HAL_RCC_OscConfig+0x98>
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	685a      	ldr	r2, [r3, #4]
 8002ade:	23a0      	movs	r3, #160	@ 0xa0
 8002ae0:	02db      	lsls	r3, r3, #11
 8002ae2:	429a      	cmp	r2, r3
 8002ae4:	d10e      	bne.n	8002b04 <HAL_RCC_OscConfig+0x80>
 8002ae6:	4bb7      	ldr	r3, [pc, #732]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002ae8:	681a      	ldr	r2, [r3, #0]
 8002aea:	4bb6      	ldr	r3, [pc, #728]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002aec:	2180      	movs	r1, #128	@ 0x80
 8002aee:	02c9      	lsls	r1, r1, #11
 8002af0:	430a      	orrs	r2, r1
 8002af2:	601a      	str	r2, [r3, #0]
 8002af4:	4bb3      	ldr	r3, [pc, #716]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002af6:	681a      	ldr	r2, [r3, #0]
 8002af8:	4bb2      	ldr	r3, [pc, #712]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002afa:	2180      	movs	r1, #128	@ 0x80
 8002afc:	0249      	lsls	r1, r1, #9
 8002afe:	430a      	orrs	r2, r1
 8002b00:	601a      	str	r2, [r3, #0]
 8002b02:	e00b      	b.n	8002b1c <HAL_RCC_OscConfig+0x98>
 8002b04:	4baf      	ldr	r3, [pc, #700]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002b06:	681a      	ldr	r2, [r3, #0]
 8002b08:	4bae      	ldr	r3, [pc, #696]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002b0a:	49af      	ldr	r1, [pc, #700]	@ (8002dc8 <HAL_RCC_OscConfig+0x344>)
 8002b0c:	400a      	ands	r2, r1
 8002b0e:	601a      	str	r2, [r3, #0]
 8002b10:	4bac      	ldr	r3, [pc, #688]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002b12:	681a      	ldr	r2, [r3, #0]
 8002b14:	4bab      	ldr	r3, [pc, #684]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002b16:	49ad      	ldr	r1, [pc, #692]	@ (8002dcc <HAL_RCC_OscConfig+0x348>)
 8002b18:	400a      	ands	r2, r1
 8002b1a:	601a      	str	r2, [r3, #0]
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	685b      	ldr	r3, [r3, #4]
 8002b20:	2b00      	cmp	r3, #0
 8002b22:	d014      	beq.n	8002b4e <HAL_RCC_OscConfig+0xca>
 8002b24:	f7ff f83a 	bl	8001b9c <HAL_GetTick>
 8002b28:	0003      	movs	r3, r0
 8002b2a:	613b      	str	r3, [r7, #16]
 8002b2c:	e008      	b.n	8002b40 <HAL_RCC_OscConfig+0xbc>
 8002b2e:	f7ff f835 	bl	8001b9c <HAL_GetTick>
 8002b32:	0002      	movs	r2, r0
 8002b34:	693b      	ldr	r3, [r7, #16]
 8002b36:	1ad3      	subs	r3, r2, r3
 8002b38:	2b64      	cmp	r3, #100	@ 0x64
 8002b3a:	d901      	bls.n	8002b40 <HAL_RCC_OscConfig+0xbc>
 8002b3c:	2303      	movs	r3, #3
 8002b3e:	e1ba      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002b40:	4ba0      	ldr	r3, [pc, #640]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002b42:	681a      	ldr	r2, [r3, #0]
 8002b44:	2380      	movs	r3, #128	@ 0x80
 8002b46:	029b      	lsls	r3, r3, #10
 8002b48:	4013      	ands	r3, r2
 8002b4a:	d0f0      	beq.n	8002b2e <HAL_RCC_OscConfig+0xaa>
 8002b4c:	e013      	b.n	8002b76 <HAL_RCC_OscConfig+0xf2>
 8002b4e:	f7ff f825 	bl	8001b9c <HAL_GetTick>
 8002b52:	0003      	movs	r3, r0
 8002b54:	613b      	str	r3, [r7, #16]
 8002b56:	e008      	b.n	8002b6a <HAL_RCC_OscConfig+0xe6>
 8002b58:	f7ff f820 	bl	8001b9c <HAL_GetTick>
 8002b5c:	0002      	movs	r2, r0
 8002b5e:	693b      	ldr	r3, [r7, #16]
 8002b60:	1ad3      	subs	r3, r2, r3
 8002b62:	2b64      	cmp	r3, #100	@ 0x64
 8002b64:	d901      	bls.n	8002b6a <HAL_RCC_OscConfig+0xe6>
 8002b66:	2303      	movs	r3, #3
 8002b68:	e1a5      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002b6a:	4b96      	ldr	r3, [pc, #600]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002b6c:	681a      	ldr	r2, [r3, #0]
 8002b6e:	2380      	movs	r3, #128	@ 0x80
 8002b70:	029b      	lsls	r3, r3, #10
 8002b72:	4013      	ands	r3, r2
 8002b74:	d1f0      	bne.n	8002b58 <HAL_RCC_OscConfig+0xd4>
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	2202      	movs	r2, #2
 8002b7c:	4013      	ands	r3, r2
 8002b7e:	d100      	bne.n	8002b82 <HAL_RCC_OscConfig+0xfe>
 8002b80:	e086      	b.n	8002c90 <HAL_RCC_OscConfig+0x20c>
 8002b82:	4b90      	ldr	r3, [pc, #576]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002b84:	689b      	ldr	r3, [r3, #8]
 8002b86:	2238      	movs	r2, #56	@ 0x38
 8002b88:	4013      	ands	r3, r2
 8002b8a:	617b      	str	r3, [r7, #20]
 8002b8c:	697b      	ldr	r3, [r7, #20]
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	d12f      	bne.n	8002bf2 <HAL_RCC_OscConfig+0x16e>
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	68db      	ldr	r3, [r3, #12]
 8002b96:	2b00      	cmp	r3, #0
 8002b98:	d101      	bne.n	8002b9e <HAL_RCC_OscConfig+0x11a>
 8002b9a:	2301      	movs	r3, #1
 8002b9c:	e18b      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002b9e:	4b89      	ldr	r3, [pc, #548]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002ba0:	685b      	ldr	r3, [r3, #4]
 8002ba2:	4a8b      	ldr	r2, [pc, #556]	@ (8002dd0 <HAL_RCC_OscConfig+0x34c>)
 8002ba4:	4013      	ands	r3, r2
 8002ba6:	0019      	movs	r1, r3
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	695b      	ldr	r3, [r3, #20]
 8002bac:	021a      	lsls	r2, r3, #8
 8002bae:	4b85      	ldr	r3, [pc, #532]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002bb0:	430a      	orrs	r2, r1
 8002bb2:	605a      	str	r2, [r3, #4]
 8002bb4:	697b      	ldr	r3, [r7, #20]
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	d112      	bne.n	8002be0 <HAL_RCC_OscConfig+0x15c>
 8002bba:	4b82      	ldr	r3, [pc, #520]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	4a85      	ldr	r2, [pc, #532]	@ (8002dd4 <HAL_RCC_OscConfig+0x350>)
 8002bc0:	4013      	ands	r3, r2
 8002bc2:	0019      	movs	r1, r3
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	691a      	ldr	r2, [r3, #16]
 8002bc8:	4b7e      	ldr	r3, [pc, #504]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002bca:	430a      	orrs	r2, r1
 8002bcc:	601a      	str	r2, [r3, #0]
 8002bce:	4b7d      	ldr	r3, [pc, #500]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	0adb      	lsrs	r3, r3, #11
 8002bd4:	2207      	movs	r2, #7
 8002bd6:	4013      	ands	r3, r2
 8002bd8:	4a7f      	ldr	r2, [pc, #508]	@ (8002dd8 <HAL_RCC_OscConfig+0x354>)
 8002bda:	40da      	lsrs	r2, r3
 8002bdc:	4b7f      	ldr	r3, [pc, #508]	@ (8002ddc <HAL_RCC_OscConfig+0x358>)
 8002bde:	601a      	str	r2, [r3, #0]
 8002be0:	4b7f      	ldr	r3, [pc, #508]	@ (8002de0 <HAL_RCC_OscConfig+0x35c>)
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	0018      	movs	r0, r3
 8002be6:	f7fe ff7d 	bl	8001ae4 <HAL_InitTick>
 8002bea:	1e03      	subs	r3, r0, #0
 8002bec:	d050      	beq.n	8002c90 <HAL_RCC_OscConfig+0x20c>
 8002bee:	2301      	movs	r3, #1
 8002bf0:	e161      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	68db      	ldr	r3, [r3, #12]
 8002bf6:	2b00      	cmp	r3, #0
 8002bf8:	d030      	beq.n	8002c5c <HAL_RCC_OscConfig+0x1d8>
 8002bfa:	4b72      	ldr	r3, [pc, #456]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	4a75      	ldr	r2, [pc, #468]	@ (8002dd4 <HAL_RCC_OscConfig+0x350>)
 8002c00:	4013      	ands	r3, r2
 8002c02:	0019      	movs	r1, r3
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	691a      	ldr	r2, [r3, #16]
 8002c08:	4b6e      	ldr	r3, [pc, #440]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c0a:	430a      	orrs	r2, r1
 8002c0c:	601a      	str	r2, [r3, #0]
 8002c0e:	4b6d      	ldr	r3, [pc, #436]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c10:	681a      	ldr	r2, [r3, #0]
 8002c12:	4b6c      	ldr	r3, [pc, #432]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c14:	2180      	movs	r1, #128	@ 0x80
 8002c16:	0049      	lsls	r1, r1, #1
 8002c18:	430a      	orrs	r2, r1
 8002c1a:	601a      	str	r2, [r3, #0]
 8002c1c:	f7fe ffbe 	bl	8001b9c <HAL_GetTick>
 8002c20:	0003      	movs	r3, r0
 8002c22:	613b      	str	r3, [r7, #16]
 8002c24:	e008      	b.n	8002c38 <HAL_RCC_OscConfig+0x1b4>
 8002c26:	f7fe ffb9 	bl	8001b9c <HAL_GetTick>
 8002c2a:	0002      	movs	r2, r0
 8002c2c:	693b      	ldr	r3, [r7, #16]
 8002c2e:	1ad3      	subs	r3, r2, r3
 8002c30:	2b02      	cmp	r3, #2
 8002c32:	d901      	bls.n	8002c38 <HAL_RCC_OscConfig+0x1b4>
 8002c34:	2303      	movs	r3, #3
 8002c36:	e13e      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002c38:	4b62      	ldr	r3, [pc, #392]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c3a:	681a      	ldr	r2, [r3, #0]
 8002c3c:	2380      	movs	r3, #128	@ 0x80
 8002c3e:	00db      	lsls	r3, r3, #3
 8002c40:	4013      	ands	r3, r2
 8002c42:	d0f0      	beq.n	8002c26 <HAL_RCC_OscConfig+0x1a2>
 8002c44:	4b5f      	ldr	r3, [pc, #380]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c46:	685b      	ldr	r3, [r3, #4]
 8002c48:	4a61      	ldr	r2, [pc, #388]	@ (8002dd0 <HAL_RCC_OscConfig+0x34c>)
 8002c4a:	4013      	ands	r3, r2
 8002c4c:	0019      	movs	r1, r3
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	695b      	ldr	r3, [r3, #20]
 8002c52:	021a      	lsls	r2, r3, #8
 8002c54:	4b5b      	ldr	r3, [pc, #364]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c56:	430a      	orrs	r2, r1
 8002c58:	605a      	str	r2, [r3, #4]
 8002c5a:	e019      	b.n	8002c90 <HAL_RCC_OscConfig+0x20c>
 8002c5c:	4b59      	ldr	r3, [pc, #356]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c5e:	681a      	ldr	r2, [r3, #0]
 8002c60:	4b58      	ldr	r3, [pc, #352]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c62:	4960      	ldr	r1, [pc, #384]	@ (8002de4 <HAL_RCC_OscConfig+0x360>)
 8002c64:	400a      	ands	r2, r1
 8002c66:	601a      	str	r2, [r3, #0]
 8002c68:	f7fe ff98 	bl	8001b9c <HAL_GetTick>
 8002c6c:	0003      	movs	r3, r0
 8002c6e:	613b      	str	r3, [r7, #16]
 8002c70:	e008      	b.n	8002c84 <HAL_RCC_OscConfig+0x200>
 8002c72:	f7fe ff93 	bl	8001b9c <HAL_GetTick>
 8002c76:	0002      	movs	r2, r0
 8002c78:	693b      	ldr	r3, [r7, #16]
 8002c7a:	1ad3      	subs	r3, r2, r3
 8002c7c:	2b02      	cmp	r3, #2
 8002c7e:	d901      	bls.n	8002c84 <HAL_RCC_OscConfig+0x200>
 8002c80:	2303      	movs	r3, #3
 8002c82:	e118      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002c84:	4b4f      	ldr	r3, [pc, #316]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c86:	681a      	ldr	r2, [r3, #0]
 8002c88:	2380      	movs	r3, #128	@ 0x80
 8002c8a:	00db      	lsls	r3, r3, #3
 8002c8c:	4013      	ands	r3, r2
 8002c8e:	d1f0      	bne.n	8002c72 <HAL_RCC_OscConfig+0x1ee>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	2208      	movs	r2, #8
 8002c96:	4013      	ands	r3, r2
 8002c98:	d042      	beq.n	8002d20 <HAL_RCC_OscConfig+0x29c>
 8002c9a:	4b4a      	ldr	r3, [pc, #296]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002c9c:	689b      	ldr	r3, [r3, #8]
 8002c9e:	2238      	movs	r2, #56	@ 0x38
 8002ca0:	4013      	ands	r3, r2
 8002ca2:	2b18      	cmp	r3, #24
 8002ca4:	d105      	bne.n	8002cb2 <HAL_RCC_OscConfig+0x22e>
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	699b      	ldr	r3, [r3, #24]
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	d138      	bne.n	8002d20 <HAL_RCC_OscConfig+0x29c>
 8002cae:	2301      	movs	r3, #1
 8002cb0:	e101      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	699b      	ldr	r3, [r3, #24]
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d019      	beq.n	8002cee <HAL_RCC_OscConfig+0x26a>
 8002cba:	4b42      	ldr	r3, [pc, #264]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002cbc:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8002cbe:	4b41      	ldr	r3, [pc, #260]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002cc0:	2101      	movs	r1, #1
 8002cc2:	430a      	orrs	r2, r1
 8002cc4:	661a      	str	r2, [r3, #96]	@ 0x60
 8002cc6:	f7fe ff69 	bl	8001b9c <HAL_GetTick>
 8002cca:	0003      	movs	r3, r0
 8002ccc:	613b      	str	r3, [r7, #16]
 8002cce:	e008      	b.n	8002ce2 <HAL_RCC_OscConfig+0x25e>
 8002cd0:	f7fe ff64 	bl	8001b9c <HAL_GetTick>
 8002cd4:	0002      	movs	r2, r0
 8002cd6:	693b      	ldr	r3, [r7, #16]
 8002cd8:	1ad3      	subs	r3, r2, r3
 8002cda:	2b02      	cmp	r3, #2
 8002cdc:	d901      	bls.n	8002ce2 <HAL_RCC_OscConfig+0x25e>
 8002cde:	2303      	movs	r3, #3
 8002ce0:	e0e9      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002ce2:	4b38      	ldr	r3, [pc, #224]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002ce4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002ce6:	2202      	movs	r2, #2
 8002ce8:	4013      	ands	r3, r2
 8002cea:	d0f1      	beq.n	8002cd0 <HAL_RCC_OscConfig+0x24c>
 8002cec:	e018      	b.n	8002d20 <HAL_RCC_OscConfig+0x29c>
 8002cee:	4b35      	ldr	r3, [pc, #212]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002cf0:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8002cf2:	4b34      	ldr	r3, [pc, #208]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002cf4:	2101      	movs	r1, #1
 8002cf6:	438a      	bics	r2, r1
 8002cf8:	661a      	str	r2, [r3, #96]	@ 0x60
 8002cfa:	f7fe ff4f 	bl	8001b9c <HAL_GetTick>
 8002cfe:	0003      	movs	r3, r0
 8002d00:	613b      	str	r3, [r7, #16]
 8002d02:	e008      	b.n	8002d16 <HAL_RCC_OscConfig+0x292>
 8002d04:	f7fe ff4a 	bl	8001b9c <HAL_GetTick>
 8002d08:	0002      	movs	r2, r0
 8002d0a:	693b      	ldr	r3, [r7, #16]
 8002d0c:	1ad3      	subs	r3, r2, r3
 8002d0e:	2b02      	cmp	r3, #2
 8002d10:	d901      	bls.n	8002d16 <HAL_RCC_OscConfig+0x292>
 8002d12:	2303      	movs	r3, #3
 8002d14:	e0cf      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002d16:	4b2b      	ldr	r3, [pc, #172]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d18:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002d1a:	2202      	movs	r2, #2
 8002d1c:	4013      	ands	r3, r2
 8002d1e:	d1f1      	bne.n	8002d04 <HAL_RCC_OscConfig+0x280>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	2204      	movs	r2, #4
 8002d26:	4013      	ands	r3, r2
 8002d28:	d100      	bne.n	8002d2c <HAL_RCC_OscConfig+0x2a8>
 8002d2a:	e084      	b.n	8002e36 <HAL_RCC_OscConfig+0x3b2>
 8002d2c:	230f      	movs	r3, #15
 8002d2e:	18fb      	adds	r3, r7, r3
 8002d30:	2200      	movs	r2, #0
 8002d32:	701a      	strb	r2, [r3, #0]
 8002d34:	4b23      	ldr	r3, [pc, #140]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d36:	689b      	ldr	r3, [r3, #8]
 8002d38:	2238      	movs	r2, #56	@ 0x38
 8002d3a:	4013      	ands	r3, r2
 8002d3c:	2b20      	cmp	r3, #32
 8002d3e:	d106      	bne.n	8002d4e <HAL_RCC_OscConfig+0x2ca>
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	689b      	ldr	r3, [r3, #8]
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	d000      	beq.n	8002d4a <HAL_RCC_OscConfig+0x2c6>
 8002d48:	e075      	b.n	8002e36 <HAL_RCC_OscConfig+0x3b2>
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	e0b3      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	689b      	ldr	r3, [r3, #8]
 8002d52:	2b01      	cmp	r3, #1
 8002d54:	d106      	bne.n	8002d64 <HAL_RCC_OscConfig+0x2e0>
 8002d56:	4b1b      	ldr	r3, [pc, #108]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d58:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d5a:	4b1a      	ldr	r3, [pc, #104]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d5c:	2101      	movs	r1, #1
 8002d5e:	430a      	orrs	r2, r1
 8002d60:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d62:	e01c      	b.n	8002d9e <HAL_RCC_OscConfig+0x31a>
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	689b      	ldr	r3, [r3, #8]
 8002d68:	2b05      	cmp	r3, #5
 8002d6a:	d10c      	bne.n	8002d86 <HAL_RCC_OscConfig+0x302>
 8002d6c:	4b15      	ldr	r3, [pc, #84]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d6e:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d70:	4b14      	ldr	r3, [pc, #80]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d72:	2104      	movs	r1, #4
 8002d74:	430a      	orrs	r2, r1
 8002d76:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d78:	4b12      	ldr	r3, [pc, #72]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d7a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d7c:	4b11      	ldr	r3, [pc, #68]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d7e:	2101      	movs	r1, #1
 8002d80:	430a      	orrs	r2, r1
 8002d82:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d84:	e00b      	b.n	8002d9e <HAL_RCC_OscConfig+0x31a>
 8002d86:	4b0f      	ldr	r3, [pc, #60]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d88:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d8a:	4b0e      	ldr	r3, [pc, #56]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d8c:	2101      	movs	r1, #1
 8002d8e:	438a      	bics	r2, r1
 8002d90:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d92:	4b0c      	ldr	r3, [pc, #48]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d94:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8002d96:	4b0b      	ldr	r3, [pc, #44]	@ (8002dc4 <HAL_RCC_OscConfig+0x340>)
 8002d98:	2104      	movs	r1, #4
 8002d9a:	438a      	bics	r2, r1
 8002d9c:	65da      	str	r2, [r3, #92]	@ 0x5c
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	689b      	ldr	r3, [r3, #8]
 8002da2:	2b00      	cmp	r3, #0
 8002da4:	d028      	beq.n	8002df8 <HAL_RCC_OscConfig+0x374>
 8002da6:	f7fe fef9 	bl	8001b9c <HAL_GetTick>
 8002daa:	0003      	movs	r3, r0
 8002dac:	613b      	str	r3, [r7, #16]
 8002dae:	e01d      	b.n	8002dec <HAL_RCC_OscConfig+0x368>
 8002db0:	f7fe fef4 	bl	8001b9c <HAL_GetTick>
 8002db4:	0002      	movs	r2, r0
 8002db6:	693b      	ldr	r3, [r7, #16]
 8002db8:	1ad3      	subs	r3, r2, r3
 8002dba:	4a0b      	ldr	r2, [pc, #44]	@ (8002de8 <HAL_RCC_OscConfig+0x364>)
 8002dbc:	4293      	cmp	r3, r2
 8002dbe:	d915      	bls.n	8002dec <HAL_RCC_OscConfig+0x368>
 8002dc0:	2303      	movs	r3, #3
 8002dc2:	e078      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002dc4:	40021000 	.word	0x40021000
 8002dc8:	fffeffff 	.word	0xfffeffff
 8002dcc:	fffbffff 	.word	0xfffbffff
 8002dd0:	ffff80ff 	.word	0xffff80ff
 8002dd4:	ffffc7ff 	.word	0xffffc7ff
 8002dd8:	02dc6c00 	.word	0x02dc6c00
 8002ddc:	20000014 	.word	0x20000014
 8002de0:	20000018 	.word	0x20000018
 8002de4:	fffffeff 	.word	0xfffffeff
 8002de8:	00001388 	.word	0x00001388
 8002dec:	4b34      	ldr	r3, [pc, #208]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002dee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002df0:	2202      	movs	r2, #2
 8002df2:	4013      	ands	r3, r2
 8002df4:	d0dc      	beq.n	8002db0 <HAL_RCC_OscConfig+0x32c>
 8002df6:	e013      	b.n	8002e20 <HAL_RCC_OscConfig+0x39c>
 8002df8:	f7fe fed0 	bl	8001b9c <HAL_GetTick>
 8002dfc:	0003      	movs	r3, r0
 8002dfe:	613b      	str	r3, [r7, #16]
 8002e00:	e009      	b.n	8002e16 <HAL_RCC_OscConfig+0x392>
 8002e02:	f7fe fecb 	bl	8001b9c <HAL_GetTick>
 8002e06:	0002      	movs	r2, r0
 8002e08:	693b      	ldr	r3, [r7, #16]
 8002e0a:	1ad3      	subs	r3, r2, r3
 8002e0c:	4a2d      	ldr	r2, [pc, #180]	@ (8002ec4 <HAL_RCC_OscConfig+0x440>)
 8002e0e:	4293      	cmp	r3, r2
 8002e10:	d901      	bls.n	8002e16 <HAL_RCC_OscConfig+0x392>
 8002e12:	2303      	movs	r3, #3
 8002e14:	e04f      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002e16:	4b2a      	ldr	r3, [pc, #168]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e18:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002e1a:	2202      	movs	r2, #2
 8002e1c:	4013      	ands	r3, r2
 8002e1e:	d1f0      	bne.n	8002e02 <HAL_RCC_OscConfig+0x37e>
 8002e20:	230f      	movs	r3, #15
 8002e22:	18fb      	adds	r3, r7, r3
 8002e24:	781b      	ldrb	r3, [r3, #0]
 8002e26:	2b01      	cmp	r3, #1
 8002e28:	d105      	bne.n	8002e36 <HAL_RCC_OscConfig+0x3b2>
 8002e2a:	4b25      	ldr	r3, [pc, #148]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e2c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8002e2e:	4b24      	ldr	r3, [pc, #144]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e30:	4925      	ldr	r1, [pc, #148]	@ (8002ec8 <HAL_RCC_OscConfig+0x444>)
 8002e32:	400a      	ands	r2, r1
 8002e34:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	681b      	ldr	r3, [r3, #0]
 8002e3a:	2210      	movs	r2, #16
 8002e3c:	4013      	ands	r3, r2
 8002e3e:	d039      	beq.n	8002eb4 <HAL_RCC_OscConfig+0x430>
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	69db      	ldr	r3, [r3, #28]
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	d01b      	beq.n	8002e80 <HAL_RCC_OscConfig+0x3fc>
 8002e48:	4b1d      	ldr	r3, [pc, #116]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e4a:	681a      	ldr	r2, [r3, #0]
 8002e4c:	4b1c      	ldr	r3, [pc, #112]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e4e:	2180      	movs	r1, #128	@ 0x80
 8002e50:	03c9      	lsls	r1, r1, #15
 8002e52:	430a      	orrs	r2, r1
 8002e54:	601a      	str	r2, [r3, #0]
 8002e56:	f7fe fea1 	bl	8001b9c <HAL_GetTick>
 8002e5a:	0003      	movs	r3, r0
 8002e5c:	613b      	str	r3, [r7, #16]
 8002e5e:	e008      	b.n	8002e72 <HAL_RCC_OscConfig+0x3ee>
 8002e60:	f7fe fe9c 	bl	8001b9c <HAL_GetTick>
 8002e64:	0002      	movs	r2, r0
 8002e66:	693b      	ldr	r3, [r7, #16]
 8002e68:	1ad3      	subs	r3, r2, r3
 8002e6a:	2b02      	cmp	r3, #2
 8002e6c:	d901      	bls.n	8002e72 <HAL_RCC_OscConfig+0x3ee>
 8002e6e:	2303      	movs	r3, #3
 8002e70:	e021      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002e72:	4b13      	ldr	r3, [pc, #76]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e74:	681a      	ldr	r2, [r3, #0]
 8002e76:	2380      	movs	r3, #128	@ 0x80
 8002e78:	041b      	lsls	r3, r3, #16
 8002e7a:	4013      	ands	r3, r2
 8002e7c:	d0f0      	beq.n	8002e60 <HAL_RCC_OscConfig+0x3dc>
 8002e7e:	e019      	b.n	8002eb4 <HAL_RCC_OscConfig+0x430>
 8002e80:	4b0f      	ldr	r3, [pc, #60]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e82:	681a      	ldr	r2, [r3, #0]
 8002e84:	4b0e      	ldr	r3, [pc, #56]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002e86:	4911      	ldr	r1, [pc, #68]	@ (8002ecc <HAL_RCC_OscConfig+0x448>)
 8002e88:	400a      	ands	r2, r1
 8002e8a:	601a      	str	r2, [r3, #0]
 8002e8c:	f7fe fe86 	bl	8001b9c <HAL_GetTick>
 8002e90:	0003      	movs	r3, r0
 8002e92:	613b      	str	r3, [r7, #16]
 8002e94:	e008      	b.n	8002ea8 <HAL_RCC_OscConfig+0x424>
 8002e96:	f7fe fe81 	bl	8001b9c <HAL_GetTick>
 8002e9a:	0002      	movs	r2, r0
 8002e9c:	693b      	ldr	r3, [r7, #16]
 8002e9e:	1ad3      	subs	r3, r2, r3
 8002ea0:	2b02      	cmp	r3, #2
 8002ea2:	d901      	bls.n	8002ea8 <HAL_RCC_OscConfig+0x424>
 8002ea4:	2303      	movs	r3, #3
 8002ea6:	e006      	b.n	8002eb6 <HAL_RCC_OscConfig+0x432>
 8002ea8:	4b05      	ldr	r3, [pc, #20]	@ (8002ec0 <HAL_RCC_OscConfig+0x43c>)
 8002eaa:	681a      	ldr	r2, [r3, #0]
 8002eac:	2380      	movs	r3, #128	@ 0x80
 8002eae:	041b      	lsls	r3, r3, #16
 8002eb0:	4013      	ands	r3, r2
 8002eb2:	d1f0      	bne.n	8002e96 <HAL_RCC_OscConfig+0x412>
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	0018      	movs	r0, r3
 8002eb8:	46bd      	mov	sp, r7
 8002eba:	b006      	add	sp, #24
 8002ebc:	bd80      	pop	{r7, pc}
 8002ebe:	46c0      	nop			@ (mov r8, r8)
 8002ec0:	40021000 	.word	0x40021000
 8002ec4:	00001388 	.word	0x00001388
 8002ec8:	efffffff 	.word	0xefffffff
 8002ecc:	ffbfffff 	.word	0xffbfffff

08002ed0 <HAL_RCC_ClockConfig>:
 8002ed0:	b580      	push	{r7, lr}
 8002ed2:	b084      	sub	sp, #16
 8002ed4:	af00      	add	r7, sp, #0
 8002ed6:	6078      	str	r0, [r7, #4]
 8002ed8:	6039      	str	r1, [r7, #0]
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	2b00      	cmp	r3, #0
 8002ede:	d101      	bne.n	8002ee4 <HAL_RCC_ClockConfig+0x14>
 8002ee0:	2301      	movs	r3, #1
 8002ee2:	e0f6      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8002ee4:	4b7d      	ldr	r3, [pc, #500]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	2207      	movs	r2, #7
 8002eea:	4013      	ands	r3, r2
 8002eec:	683a      	ldr	r2, [r7, #0]
 8002eee:	429a      	cmp	r2, r3
 8002ef0:	d91e      	bls.n	8002f30 <HAL_RCC_ClockConfig+0x60>
 8002ef2:	4b7a      	ldr	r3, [pc, #488]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	2207      	movs	r2, #7
 8002ef8:	4393      	bics	r3, r2
 8002efa:	0019      	movs	r1, r3
 8002efc:	4b77      	ldr	r3, [pc, #476]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 8002efe:	683a      	ldr	r2, [r7, #0]
 8002f00:	430a      	orrs	r2, r1
 8002f02:	601a      	str	r2, [r3, #0]
 8002f04:	f7fe fe4a 	bl	8001b9c <HAL_GetTick>
 8002f08:	0003      	movs	r3, r0
 8002f0a:	60fb      	str	r3, [r7, #12]
 8002f0c:	e009      	b.n	8002f22 <HAL_RCC_ClockConfig+0x52>
 8002f0e:	f7fe fe45 	bl	8001b9c <HAL_GetTick>
 8002f12:	0002      	movs	r2, r0
 8002f14:	68fb      	ldr	r3, [r7, #12]
 8002f16:	1ad3      	subs	r3, r2, r3
 8002f18:	4a71      	ldr	r2, [pc, #452]	@ (80030e0 <HAL_RCC_ClockConfig+0x210>)
 8002f1a:	4293      	cmp	r3, r2
 8002f1c:	d901      	bls.n	8002f22 <HAL_RCC_ClockConfig+0x52>
 8002f1e:	2303      	movs	r3, #3
 8002f20:	e0d7      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8002f22:	4b6e      	ldr	r3, [pc, #440]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	2207      	movs	r2, #7
 8002f28:	4013      	ands	r3, r2
 8002f2a:	683a      	ldr	r2, [r7, #0]
 8002f2c:	429a      	cmp	r2, r3
 8002f2e:	d1ee      	bne.n	8002f0e <HAL_RCC_ClockConfig+0x3e>
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	2202      	movs	r2, #2
 8002f36:	4013      	ands	r3, r2
 8002f38:	d017      	beq.n	8002f6a <HAL_RCC_ClockConfig+0x9a>
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	2204      	movs	r2, #4
 8002f40:	4013      	ands	r3, r2
 8002f42:	d008      	beq.n	8002f56 <HAL_RCC_ClockConfig+0x86>
 8002f44:	4b67      	ldr	r3, [pc, #412]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002f46:	689b      	ldr	r3, [r3, #8]
 8002f48:	4a67      	ldr	r2, [pc, #412]	@ (80030e8 <HAL_RCC_ClockConfig+0x218>)
 8002f4a:	401a      	ands	r2, r3
 8002f4c:	4b65      	ldr	r3, [pc, #404]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002f4e:	21b0      	movs	r1, #176	@ 0xb0
 8002f50:	0109      	lsls	r1, r1, #4
 8002f52:	430a      	orrs	r2, r1
 8002f54:	609a      	str	r2, [r3, #8]
 8002f56:	4b63      	ldr	r3, [pc, #396]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002f58:	689b      	ldr	r3, [r3, #8]
 8002f5a:	4a64      	ldr	r2, [pc, #400]	@ (80030ec <HAL_RCC_ClockConfig+0x21c>)
 8002f5c:	4013      	ands	r3, r2
 8002f5e:	0019      	movs	r1, r3
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	68da      	ldr	r2, [r3, #12]
 8002f64:	4b5f      	ldr	r3, [pc, #380]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002f66:	430a      	orrs	r2, r1
 8002f68:	609a      	str	r2, [r3, #8]
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	2201      	movs	r2, #1
 8002f70:	4013      	ands	r3, r2
 8002f72:	d100      	bne.n	8002f76 <HAL_RCC_ClockConfig+0xa6>
 8002f74:	e061      	b.n	800303a <HAL_RCC_ClockConfig+0x16a>
 8002f76:	4b5b      	ldr	r3, [pc, #364]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	221c      	movs	r2, #28
 8002f7c:	4393      	bics	r3, r2
 8002f7e:	0019      	movs	r1, r3
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	689a      	ldr	r2, [r3, #8]
 8002f84:	4b57      	ldr	r3, [pc, #348]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002f86:	430a      	orrs	r2, r1
 8002f88:	601a      	str	r2, [r3, #0]
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	685b      	ldr	r3, [r3, #4]
 8002f8e:	2b01      	cmp	r3, #1
 8002f90:	d107      	bne.n	8002fa2 <HAL_RCC_ClockConfig+0xd2>
 8002f92:	4b54      	ldr	r3, [pc, #336]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002f94:	681a      	ldr	r2, [r3, #0]
 8002f96:	2380      	movs	r3, #128	@ 0x80
 8002f98:	029b      	lsls	r3, r3, #10
 8002f9a:	4013      	ands	r3, r2
 8002f9c:	d12b      	bne.n	8002ff6 <HAL_RCC_ClockConfig+0x126>
 8002f9e:	2301      	movs	r3, #1
 8002fa0:	e097      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	685b      	ldr	r3, [r3, #4]
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	d107      	bne.n	8002fba <HAL_RCC_ClockConfig+0xea>
 8002faa:	4b4e      	ldr	r3, [pc, #312]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002fac:	681a      	ldr	r2, [r3, #0]
 8002fae:	2380      	movs	r3, #128	@ 0x80
 8002fb0:	00db      	lsls	r3, r3, #3
 8002fb2:	4013      	ands	r3, r2
 8002fb4:	d11f      	bne.n	8002ff6 <HAL_RCC_ClockConfig+0x126>
 8002fb6:	2301      	movs	r3, #1
 8002fb8:	e08b      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	685b      	ldr	r3, [r3, #4]
 8002fbe:	2b02      	cmp	r3, #2
 8002fc0:	d107      	bne.n	8002fd2 <HAL_RCC_ClockConfig+0x102>
 8002fc2:	4b48      	ldr	r3, [pc, #288]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002fc4:	681a      	ldr	r2, [r3, #0]
 8002fc6:	2380      	movs	r3, #128	@ 0x80
 8002fc8:	041b      	lsls	r3, r3, #16
 8002fca:	4013      	ands	r3, r2
 8002fcc:	d113      	bne.n	8002ff6 <HAL_RCC_ClockConfig+0x126>
 8002fce:	2301      	movs	r3, #1
 8002fd0:	e07f      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	685b      	ldr	r3, [r3, #4]
 8002fd6:	2b03      	cmp	r3, #3
 8002fd8:	d106      	bne.n	8002fe8 <HAL_RCC_ClockConfig+0x118>
 8002fda:	4b42      	ldr	r3, [pc, #264]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002fdc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002fde:	2202      	movs	r2, #2
 8002fe0:	4013      	ands	r3, r2
 8002fe2:	d108      	bne.n	8002ff6 <HAL_RCC_ClockConfig+0x126>
 8002fe4:	2301      	movs	r3, #1
 8002fe6:	e074      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8002fe8:	4b3e      	ldr	r3, [pc, #248]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002fea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002fec:	2202      	movs	r2, #2
 8002fee:	4013      	ands	r3, r2
 8002ff0:	d101      	bne.n	8002ff6 <HAL_RCC_ClockConfig+0x126>
 8002ff2:	2301      	movs	r3, #1
 8002ff4:	e06d      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8002ff6:	4b3b      	ldr	r3, [pc, #236]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8002ff8:	689b      	ldr	r3, [r3, #8]
 8002ffa:	2207      	movs	r2, #7
 8002ffc:	4393      	bics	r3, r2
 8002ffe:	0019      	movs	r1, r3
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	685a      	ldr	r2, [r3, #4]
 8003004:	4b37      	ldr	r3, [pc, #220]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8003006:	430a      	orrs	r2, r1
 8003008:	609a      	str	r2, [r3, #8]
 800300a:	f7fe fdc7 	bl	8001b9c <HAL_GetTick>
 800300e:	0003      	movs	r3, r0
 8003010:	60fb      	str	r3, [r7, #12]
 8003012:	e009      	b.n	8003028 <HAL_RCC_ClockConfig+0x158>
 8003014:	f7fe fdc2 	bl	8001b9c <HAL_GetTick>
 8003018:	0002      	movs	r2, r0
 800301a:	68fb      	ldr	r3, [r7, #12]
 800301c:	1ad3      	subs	r3, r2, r3
 800301e:	4a30      	ldr	r2, [pc, #192]	@ (80030e0 <HAL_RCC_ClockConfig+0x210>)
 8003020:	4293      	cmp	r3, r2
 8003022:	d901      	bls.n	8003028 <HAL_RCC_ClockConfig+0x158>
 8003024:	2303      	movs	r3, #3
 8003026:	e054      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8003028:	4b2e      	ldr	r3, [pc, #184]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 800302a:	689b      	ldr	r3, [r3, #8]
 800302c:	2238      	movs	r2, #56	@ 0x38
 800302e:	401a      	ands	r2, r3
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	685b      	ldr	r3, [r3, #4]
 8003034:	00db      	lsls	r3, r3, #3
 8003036:	429a      	cmp	r2, r3
 8003038:	d1ec      	bne.n	8003014 <HAL_RCC_ClockConfig+0x144>
 800303a:	4b28      	ldr	r3, [pc, #160]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	2207      	movs	r2, #7
 8003040:	4013      	ands	r3, r2
 8003042:	683a      	ldr	r2, [r7, #0]
 8003044:	429a      	cmp	r2, r3
 8003046:	d21e      	bcs.n	8003086 <HAL_RCC_ClockConfig+0x1b6>
 8003048:	4b24      	ldr	r3, [pc, #144]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	2207      	movs	r2, #7
 800304e:	4393      	bics	r3, r2
 8003050:	0019      	movs	r1, r3
 8003052:	4b22      	ldr	r3, [pc, #136]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 8003054:	683a      	ldr	r2, [r7, #0]
 8003056:	430a      	orrs	r2, r1
 8003058:	601a      	str	r2, [r3, #0]
 800305a:	f7fe fd9f 	bl	8001b9c <HAL_GetTick>
 800305e:	0003      	movs	r3, r0
 8003060:	60fb      	str	r3, [r7, #12]
 8003062:	e009      	b.n	8003078 <HAL_RCC_ClockConfig+0x1a8>
 8003064:	f7fe fd9a 	bl	8001b9c <HAL_GetTick>
 8003068:	0002      	movs	r2, r0
 800306a:	68fb      	ldr	r3, [r7, #12]
 800306c:	1ad3      	subs	r3, r2, r3
 800306e:	4a1c      	ldr	r2, [pc, #112]	@ (80030e0 <HAL_RCC_ClockConfig+0x210>)
 8003070:	4293      	cmp	r3, r2
 8003072:	d901      	bls.n	8003078 <HAL_RCC_ClockConfig+0x1a8>
 8003074:	2303      	movs	r3, #3
 8003076:	e02c      	b.n	80030d2 <HAL_RCC_ClockConfig+0x202>
 8003078:	4b18      	ldr	r3, [pc, #96]	@ (80030dc <HAL_RCC_ClockConfig+0x20c>)
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	2207      	movs	r2, #7
 800307e:	4013      	ands	r3, r2
 8003080:	683a      	ldr	r2, [r7, #0]
 8003082:	429a      	cmp	r2, r3
 8003084:	d1ee      	bne.n	8003064 <HAL_RCC_ClockConfig+0x194>
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	2204      	movs	r2, #4
 800308c:	4013      	ands	r3, r2
 800308e:	d009      	beq.n	80030a4 <HAL_RCC_ClockConfig+0x1d4>
 8003090:	4b14      	ldr	r3, [pc, #80]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 8003092:	689b      	ldr	r3, [r3, #8]
 8003094:	4a16      	ldr	r2, [pc, #88]	@ (80030f0 <HAL_RCC_ClockConfig+0x220>)
 8003096:	4013      	ands	r3, r2
 8003098:	0019      	movs	r1, r3
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	691a      	ldr	r2, [r3, #16]
 800309e:	4b11      	ldr	r3, [pc, #68]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 80030a0:	430a      	orrs	r2, r1
 80030a2:	609a      	str	r2, [r3, #8]
 80030a4:	f000 f82c 	bl	8003100 <HAL_RCC_GetSysClockFreq>
 80030a8:	0001      	movs	r1, r0
 80030aa:	4b0e      	ldr	r3, [pc, #56]	@ (80030e4 <HAL_RCC_ClockConfig+0x214>)
 80030ac:	689b      	ldr	r3, [r3, #8]
 80030ae:	0a1b      	lsrs	r3, r3, #8
 80030b0:	220f      	movs	r2, #15
 80030b2:	401a      	ands	r2, r3
 80030b4:	4b0f      	ldr	r3, [pc, #60]	@ (80030f4 <HAL_RCC_ClockConfig+0x224>)
 80030b6:	0092      	lsls	r2, r2, #2
 80030b8:	58d3      	ldr	r3, [r2, r3]
 80030ba:	221f      	movs	r2, #31
 80030bc:	4013      	ands	r3, r2
 80030be:	000a      	movs	r2, r1
 80030c0:	40da      	lsrs	r2, r3
 80030c2:	4b0d      	ldr	r3, [pc, #52]	@ (80030f8 <HAL_RCC_ClockConfig+0x228>)
 80030c4:	601a      	str	r2, [r3, #0]
 80030c6:	4b0d      	ldr	r3, [pc, #52]	@ (80030fc <HAL_RCC_ClockConfig+0x22c>)
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	0018      	movs	r0, r3
 80030cc:	f7fe fd0a 	bl	8001ae4 <HAL_InitTick>
 80030d0:	0003      	movs	r3, r0
 80030d2:	0018      	movs	r0, r3
 80030d4:	46bd      	mov	sp, r7
 80030d6:	b004      	add	sp, #16
 80030d8:	bd80      	pop	{r7, pc}
 80030da:	46c0      	nop			@ (mov r8, r8)
 80030dc:	40022000 	.word	0x40022000
 80030e0:	00001388 	.word	0x00001388
 80030e4:	40021000 	.word	0x40021000
 80030e8:	ffff84ff 	.word	0xffff84ff
 80030ec:	fffff0ff 	.word	0xfffff0ff
 80030f0:	ffff8fff 	.word	0xffff8fff
 80030f4:	08005334 	.word	0x08005334
 80030f8:	20000014 	.word	0x20000014
 80030fc:	20000018 	.word	0x20000018

08003100 <HAL_RCC_GetSysClockFreq>:
 8003100:	b580      	push	{r7, lr}
 8003102:	b084      	sub	sp, #16
 8003104:	af00      	add	r7, sp, #0
 8003106:	4b27      	ldr	r3, [pc, #156]	@ (80031a4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	089b      	lsrs	r3, r3, #2
 800310c:	2207      	movs	r2, #7
 800310e:	4013      	ands	r3, r2
 8003110:	3301      	adds	r3, #1
 8003112:	60bb      	str	r3, [r7, #8]
 8003114:	4b23      	ldr	r3, [pc, #140]	@ (80031a4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003116:	689b      	ldr	r3, [r3, #8]
 8003118:	2238      	movs	r2, #56	@ 0x38
 800311a:	4013      	ands	r3, r2
 800311c:	d10f      	bne.n	800313e <HAL_RCC_GetSysClockFreq+0x3e>
 800311e:	4b21      	ldr	r3, [pc, #132]	@ (80031a4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	0adb      	lsrs	r3, r3, #11
 8003124:	2207      	movs	r2, #7
 8003126:	4013      	ands	r3, r2
 8003128:	2201      	movs	r2, #1
 800312a:	409a      	lsls	r2, r3
 800312c:	0013      	movs	r3, r2
 800312e:	607b      	str	r3, [r7, #4]
 8003130:	6879      	ldr	r1, [r7, #4]
 8003132:	481d      	ldr	r0, [pc, #116]	@ (80031a8 <HAL_RCC_GetSysClockFreq+0xa8>)
 8003134:	f7fc ffe8 	bl	8000108 <__udivsi3>
 8003138:	0003      	movs	r3, r0
 800313a:	60fb      	str	r3, [r7, #12]
 800313c:	e027      	b.n	800318e <HAL_RCC_GetSysClockFreq+0x8e>
 800313e:	4b19      	ldr	r3, [pc, #100]	@ (80031a4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003140:	689b      	ldr	r3, [r3, #8]
 8003142:	2238      	movs	r2, #56	@ 0x38
 8003144:	4013      	ands	r3, r2
 8003146:	2b08      	cmp	r3, #8
 8003148:	d102      	bne.n	8003150 <HAL_RCC_GetSysClockFreq+0x50>
 800314a:	4b18      	ldr	r3, [pc, #96]	@ (80031ac <HAL_RCC_GetSysClockFreq+0xac>)
 800314c:	60fb      	str	r3, [r7, #12]
 800314e:	e01e      	b.n	800318e <HAL_RCC_GetSysClockFreq+0x8e>
 8003150:	4b14      	ldr	r3, [pc, #80]	@ (80031a4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003152:	689b      	ldr	r3, [r3, #8]
 8003154:	2238      	movs	r2, #56	@ 0x38
 8003156:	4013      	ands	r3, r2
 8003158:	2b20      	cmp	r3, #32
 800315a:	d103      	bne.n	8003164 <HAL_RCC_GetSysClockFreq+0x64>
 800315c:	2380      	movs	r3, #128	@ 0x80
 800315e:	021b      	lsls	r3, r3, #8
 8003160:	60fb      	str	r3, [r7, #12]
 8003162:	e014      	b.n	800318e <HAL_RCC_GetSysClockFreq+0x8e>
 8003164:	4b0f      	ldr	r3, [pc, #60]	@ (80031a4 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003166:	689b      	ldr	r3, [r3, #8]
 8003168:	2238      	movs	r2, #56	@ 0x38
 800316a:	4013      	ands	r3, r2
 800316c:	2b18      	cmp	r3, #24
 800316e:	d103      	bne.n	8003178 <HAL_RCC_GetSysClockFreq+0x78>
 8003170:	23fa      	movs	r3, #250	@ 0xfa
 8003172:	01db      	lsls	r3, r3, #7
 8003174:	60fb      	str	r3, [r7, #12]
 8003176:	e00a      	b.n	800318e <HAL_RCC_GetSysClockFreq+0x8e>
 8003178:	4b0a      	ldr	r3, [pc, #40]	@ (80031a4 <HAL_RCC_GetSysClockFreq+0xa4>)
 800317a:	689b      	ldr	r3, [r3, #8]
 800317c:	2238      	movs	r2, #56	@ 0x38
 800317e:	4013      	ands	r3, r2
 8003180:	2b10      	cmp	r3, #16
 8003182:	d102      	bne.n	800318a <HAL_RCC_GetSysClockFreq+0x8a>
 8003184:	4b08      	ldr	r3, [pc, #32]	@ (80031a8 <HAL_RCC_GetSysClockFreq+0xa8>)
 8003186:	60fb      	str	r3, [r7, #12]
 8003188:	e001      	b.n	800318e <HAL_RCC_GetSysClockFreq+0x8e>
 800318a:	2300      	movs	r3, #0
 800318c:	60fb      	str	r3, [r7, #12]
 800318e:	68b9      	ldr	r1, [r7, #8]
 8003190:	68f8      	ldr	r0, [r7, #12]
 8003192:	f7fc ffb9 	bl	8000108 <__udivsi3>
 8003196:	0003      	movs	r3, r0
 8003198:	60fb      	str	r3, [r7, #12]
 800319a:	68fb      	ldr	r3, [r7, #12]
 800319c:	0018      	movs	r0, r3
 800319e:	46bd      	mov	sp, r7
 80031a0:	b004      	add	sp, #16
 80031a2:	bd80      	pop	{r7, pc}
 80031a4:	40021000 	.word	0x40021000
 80031a8:	02dc6c00 	.word	0x02dc6c00
 80031ac:	007a1200 	.word	0x007a1200

080031b0 <HAL_RCC_GetHCLKFreq>:
 80031b0:	b580      	push	{r7, lr}
 80031b2:	af00      	add	r7, sp, #0
 80031b4:	f7ff ffa4 	bl	8003100 <HAL_RCC_GetSysClockFreq>
 80031b8:	0001      	movs	r1, r0
 80031ba:	4b09      	ldr	r3, [pc, #36]	@ (80031e0 <HAL_RCC_GetHCLKFreq+0x30>)
 80031bc:	689b      	ldr	r3, [r3, #8]
 80031be:	0a1b      	lsrs	r3, r3, #8
 80031c0:	220f      	movs	r2, #15
 80031c2:	401a      	ands	r2, r3
 80031c4:	4b07      	ldr	r3, [pc, #28]	@ (80031e4 <HAL_RCC_GetHCLKFreq+0x34>)
 80031c6:	0092      	lsls	r2, r2, #2
 80031c8:	58d3      	ldr	r3, [r2, r3]
 80031ca:	221f      	movs	r2, #31
 80031cc:	4013      	ands	r3, r2
 80031ce:	000a      	movs	r2, r1
 80031d0:	40da      	lsrs	r2, r3
 80031d2:	4b05      	ldr	r3, [pc, #20]	@ (80031e8 <HAL_RCC_GetHCLKFreq+0x38>)
 80031d4:	601a      	str	r2, [r3, #0]
 80031d6:	4b04      	ldr	r3, [pc, #16]	@ (80031e8 <HAL_RCC_GetHCLKFreq+0x38>)
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	0018      	movs	r0, r3
 80031dc:	46bd      	mov	sp, r7
 80031de:	bd80      	pop	{r7, pc}
 80031e0:	40021000 	.word	0x40021000
 80031e4:	08005334 	.word	0x08005334
 80031e8:	20000014 	.word	0x20000014

080031ec <HAL_RCC_GetPCLK1Freq>:
 80031ec:	b580      	push	{r7, lr}
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	f7ff ffde 	bl	80031b0 <HAL_RCC_GetHCLKFreq>
 80031f4:	0001      	movs	r1, r0
 80031f6:	4b07      	ldr	r3, [pc, #28]	@ (8003214 <HAL_RCC_GetPCLK1Freq+0x28>)
 80031f8:	689b      	ldr	r3, [r3, #8]
 80031fa:	0b1b      	lsrs	r3, r3, #12
 80031fc:	2207      	movs	r2, #7
 80031fe:	401a      	ands	r2, r3
 8003200:	4b05      	ldr	r3, [pc, #20]	@ (8003218 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8003202:	0092      	lsls	r2, r2, #2
 8003204:	58d3      	ldr	r3, [r2, r3]
 8003206:	221f      	movs	r2, #31
 8003208:	4013      	ands	r3, r2
 800320a:	40d9      	lsrs	r1, r3
 800320c:	000b      	movs	r3, r1
 800320e:	0018      	movs	r0, r3
 8003210:	46bd      	mov	sp, r7
 8003212:	bd80      	pop	{r7, pc}
 8003214:	40021000 	.word	0x40021000
 8003218:	08005374 	.word	0x08005374

0800321c <HAL_RCCEx_PeriphCLKConfig>:
 800321c:	b580      	push	{r7, lr}
 800321e:	b086      	sub	sp, #24
 8003220:	af00      	add	r7, sp, #0
 8003222:	6078      	str	r0, [r7, #4]
 8003224:	2313      	movs	r3, #19
 8003226:	18fb      	adds	r3, r7, r3
 8003228:	2200      	movs	r2, #0
 800322a:	701a      	strb	r2, [r3, #0]
 800322c:	2312      	movs	r3, #18
 800322e:	18fb      	adds	r3, r7, r3
 8003230:	2200      	movs	r2, #0
 8003232:	701a      	strb	r2, [r3, #0]
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	2240      	movs	r2, #64	@ 0x40
 800323a:	4013      	ands	r3, r2
 800323c:	d100      	bne.n	8003240 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800323e:	e079      	b.n	8003334 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003240:	2011      	movs	r0, #17
 8003242:	183b      	adds	r3, r7, r0
 8003244:	2200      	movs	r2, #0
 8003246:	701a      	strb	r2, [r3, #0]
 8003248:	4b6a      	ldr	r3, [pc, #424]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800324a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800324c:	2380      	movs	r3, #128	@ 0x80
 800324e:	055b      	lsls	r3, r3, #21
 8003250:	4013      	ands	r3, r2
 8003252:	d110      	bne.n	8003276 <HAL_RCCEx_PeriphCLKConfig+0x5a>
 8003254:	4b67      	ldr	r3, [pc, #412]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003256:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8003258:	4b66      	ldr	r3, [pc, #408]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800325a:	2180      	movs	r1, #128	@ 0x80
 800325c:	0549      	lsls	r1, r1, #21
 800325e:	430a      	orrs	r2, r1
 8003260:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003262:	4b64      	ldr	r3, [pc, #400]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003264:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8003266:	2380      	movs	r3, #128	@ 0x80
 8003268:	055b      	lsls	r3, r3, #21
 800326a:	4013      	ands	r3, r2
 800326c:	60bb      	str	r3, [r7, #8]
 800326e:	68bb      	ldr	r3, [r7, #8]
 8003270:	183b      	adds	r3, r7, r0
 8003272:	2201      	movs	r2, #1
 8003274:	701a      	strb	r2, [r3, #0]
 8003276:	4b5f      	ldr	r3, [pc, #380]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003278:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800327a:	23c0      	movs	r3, #192	@ 0xc0
 800327c:	009b      	lsls	r3, r3, #2
 800327e:	4013      	ands	r3, r2
 8003280:	617b      	str	r3, [r7, #20]
 8003282:	697b      	ldr	r3, [r7, #20]
 8003284:	2b00      	cmp	r3, #0
 8003286:	d019      	beq.n	80032bc <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	69db      	ldr	r3, [r3, #28]
 800328c:	697a      	ldr	r2, [r7, #20]
 800328e:	429a      	cmp	r2, r3
 8003290:	d014      	beq.n	80032bc <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8003292:	4b58      	ldr	r3, [pc, #352]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003294:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003296:	4a58      	ldr	r2, [pc, #352]	@ (80033f8 <HAL_RCCEx_PeriphCLKConfig+0x1dc>)
 8003298:	4013      	ands	r3, r2
 800329a:	617b      	str	r3, [r7, #20]
 800329c:	4b55      	ldr	r3, [pc, #340]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800329e:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80032a0:	4b54      	ldr	r3, [pc, #336]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032a2:	2180      	movs	r1, #128	@ 0x80
 80032a4:	0249      	lsls	r1, r1, #9
 80032a6:	430a      	orrs	r2, r1
 80032a8:	65da      	str	r2, [r3, #92]	@ 0x5c
 80032aa:	4b52      	ldr	r3, [pc, #328]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032ac:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80032ae:	4b51      	ldr	r3, [pc, #324]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032b0:	4952      	ldr	r1, [pc, #328]	@ (80033fc <HAL_RCCEx_PeriphCLKConfig+0x1e0>)
 80032b2:	400a      	ands	r2, r1
 80032b4:	65da      	str	r2, [r3, #92]	@ 0x5c
 80032b6:	4b4f      	ldr	r3, [pc, #316]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032b8:	697a      	ldr	r2, [r7, #20]
 80032ba:	65da      	str	r2, [r3, #92]	@ 0x5c
 80032bc:	697b      	ldr	r3, [r7, #20]
 80032be:	2201      	movs	r2, #1
 80032c0:	4013      	ands	r3, r2
 80032c2:	d016      	beq.n	80032f2 <HAL_RCCEx_PeriphCLKConfig+0xd6>
 80032c4:	f7fe fc6a 	bl	8001b9c <HAL_GetTick>
 80032c8:	0003      	movs	r3, r0
 80032ca:	60fb      	str	r3, [r7, #12]
 80032cc:	e00c      	b.n	80032e8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 80032ce:	f7fe fc65 	bl	8001b9c <HAL_GetTick>
 80032d2:	0002      	movs	r2, r0
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	1ad3      	subs	r3, r2, r3
 80032d8:	4a49      	ldr	r2, [pc, #292]	@ (8003400 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80032da:	4293      	cmp	r3, r2
 80032dc:	d904      	bls.n	80032e8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 80032de:	2313      	movs	r3, #19
 80032e0:	18fb      	adds	r3, r7, r3
 80032e2:	2203      	movs	r2, #3
 80032e4:	701a      	strb	r2, [r3, #0]
 80032e6:	e004      	b.n	80032f2 <HAL_RCCEx_PeriphCLKConfig+0xd6>
 80032e8:	4b42      	ldr	r3, [pc, #264]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032ea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80032ec:	2202      	movs	r2, #2
 80032ee:	4013      	ands	r3, r2
 80032f0:	d0ed      	beq.n	80032ce <HAL_RCCEx_PeriphCLKConfig+0xb2>
 80032f2:	2313      	movs	r3, #19
 80032f4:	18fb      	adds	r3, r7, r3
 80032f6:	781b      	ldrb	r3, [r3, #0]
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	d10a      	bne.n	8003312 <HAL_RCCEx_PeriphCLKConfig+0xf6>
 80032fc:	4b3d      	ldr	r3, [pc, #244]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80032fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003300:	4a3d      	ldr	r2, [pc, #244]	@ (80033f8 <HAL_RCCEx_PeriphCLKConfig+0x1dc>)
 8003302:	4013      	ands	r3, r2
 8003304:	0019      	movs	r1, r3
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	69da      	ldr	r2, [r3, #28]
 800330a:	4b3a      	ldr	r3, [pc, #232]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800330c:	430a      	orrs	r2, r1
 800330e:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003310:	e005      	b.n	800331e <HAL_RCCEx_PeriphCLKConfig+0x102>
 8003312:	2312      	movs	r3, #18
 8003314:	18fb      	adds	r3, r7, r3
 8003316:	2213      	movs	r2, #19
 8003318:	18ba      	adds	r2, r7, r2
 800331a:	7812      	ldrb	r2, [r2, #0]
 800331c:	701a      	strb	r2, [r3, #0]
 800331e:	2311      	movs	r3, #17
 8003320:	18fb      	adds	r3, r7, r3
 8003322:	781b      	ldrb	r3, [r3, #0]
 8003324:	2b01      	cmp	r3, #1
 8003326:	d105      	bne.n	8003334 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003328:	4b32      	ldr	r3, [pc, #200]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800332a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800332c:	4b31      	ldr	r3, [pc, #196]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800332e:	4935      	ldr	r1, [pc, #212]	@ (8003404 <HAL_RCCEx_PeriphCLKConfig+0x1e8>)
 8003330:	400a      	ands	r2, r1
 8003332:	63da      	str	r2, [r3, #60]	@ 0x3c
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	2201      	movs	r2, #1
 800333a:	4013      	ands	r3, r2
 800333c:	d009      	beq.n	8003352 <HAL_RCCEx_PeriphCLKConfig+0x136>
 800333e:	4b2d      	ldr	r3, [pc, #180]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003340:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003342:	2203      	movs	r2, #3
 8003344:	4393      	bics	r3, r2
 8003346:	0019      	movs	r1, r3
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	689a      	ldr	r2, [r3, #8]
 800334c:	4b29      	ldr	r3, [pc, #164]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800334e:	430a      	orrs	r2, r1
 8003350:	655a      	str	r2, [r3, #84]	@ 0x54
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	681b      	ldr	r3, [r3, #0]
 8003356:	2202      	movs	r2, #2
 8003358:	4013      	ands	r3, r2
 800335a:	d009      	beq.n	8003370 <HAL_RCCEx_PeriphCLKConfig+0x154>
 800335c:	4b25      	ldr	r3, [pc, #148]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800335e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003360:	4a29      	ldr	r2, [pc, #164]	@ (8003408 <HAL_RCCEx_PeriphCLKConfig+0x1ec>)
 8003362:	4013      	ands	r3, r2
 8003364:	0019      	movs	r1, r3
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	68da      	ldr	r2, [r3, #12]
 800336a:	4b22      	ldr	r3, [pc, #136]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800336c:	430a      	orrs	r2, r1
 800336e:	655a      	str	r2, [r3, #84]	@ 0x54
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	2220      	movs	r2, #32
 8003376:	4013      	ands	r3, r2
 8003378:	d008      	beq.n	800338c <HAL_RCCEx_PeriphCLKConfig+0x170>
 800337a:	4b1e      	ldr	r3, [pc, #120]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800337c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800337e:	009b      	lsls	r3, r3, #2
 8003380:	0899      	lsrs	r1, r3, #2
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	699a      	ldr	r2, [r3, #24]
 8003386:	4b1b      	ldr	r3, [pc, #108]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003388:	430a      	orrs	r2, r1
 800338a:	655a      	str	r2, [r3, #84]	@ 0x54
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	2208      	movs	r2, #8
 8003392:	4013      	ands	r3, r2
 8003394:	d009      	beq.n	80033aa <HAL_RCCEx_PeriphCLKConfig+0x18e>
 8003396:	4b17      	ldr	r3, [pc, #92]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8003398:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800339a:	4a1c      	ldr	r2, [pc, #112]	@ (800340c <HAL_RCCEx_PeriphCLKConfig+0x1f0>)
 800339c:	4013      	ands	r3, r2
 800339e:	0019      	movs	r1, r3
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	695a      	ldr	r2, [r3, #20]
 80033a4:	4b13      	ldr	r3, [pc, #76]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80033a6:	430a      	orrs	r2, r1
 80033a8:	659a      	str	r2, [r3, #88]	@ 0x58
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	2204      	movs	r2, #4
 80033b0:	4013      	ands	r3, r2
 80033b2:	d009      	beq.n	80033c8 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
 80033b4:	4b0f      	ldr	r3, [pc, #60]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80033b6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80033b8:	4a15      	ldr	r2, [pc, #84]	@ (8003410 <HAL_RCCEx_PeriphCLKConfig+0x1f4>)
 80033ba:	4013      	ands	r3, r2
 80033bc:	0019      	movs	r1, r3
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	691a      	ldr	r2, [r3, #16]
 80033c2:	4b0c      	ldr	r3, [pc, #48]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80033c4:	430a      	orrs	r2, r1
 80033c6:	655a      	str	r2, [r3, #84]	@ 0x54
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	2280      	movs	r2, #128	@ 0x80
 80033ce:	4013      	ands	r3, r2
 80033d0:	d009      	beq.n	80033e6 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
 80033d2:	4b08      	ldr	r3, [pc, #32]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80033d4:	681b      	ldr	r3, [r3, #0]
 80033d6:	22e0      	movs	r2, #224	@ 0xe0
 80033d8:	4393      	bics	r3, r2
 80033da:	0019      	movs	r1, r3
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	685a      	ldr	r2, [r3, #4]
 80033e0:	4b04      	ldr	r3, [pc, #16]	@ (80033f4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80033e2:	430a      	orrs	r2, r1
 80033e4:	601a      	str	r2, [r3, #0]
 80033e6:	2312      	movs	r3, #18
 80033e8:	18fb      	adds	r3, r7, r3
 80033ea:	781b      	ldrb	r3, [r3, #0]
 80033ec:	0018      	movs	r0, r3
 80033ee:	46bd      	mov	sp, r7
 80033f0:	b006      	add	sp, #24
 80033f2:	bd80      	pop	{r7, pc}
 80033f4:	40021000 	.word	0x40021000
 80033f8:	fffffcff 	.word	0xfffffcff
 80033fc:	fffeffff 	.word	0xfffeffff
 8003400:	00001388 	.word	0x00001388
 8003404:	efffffff 	.word	0xefffffff
 8003408:	ffffcfff 	.word	0xffffcfff
 800340c:	ffffefff 	.word	0xffffefff
 8003410:	ffff3fff 	.word	0xffff3fff

08003414 <HAL_UART_DeInit>:
 8003414:	b580      	push	{r7, lr}
 8003416:	b082      	sub	sp, #8
 8003418:	af00      	add	r7, sp, #0
 800341a:	6078      	str	r0, [r7, #4]
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	2b00      	cmp	r3, #0
 8003420:	d101      	bne.n	8003426 <HAL_UART_DeInit+0x12>
 8003422:	2301      	movs	r3, #1
 8003424:	e032      	b.n	800348c <HAL_UART_DeInit+0x78>
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	2288      	movs	r2, #136	@ 0x88
 800342a:	2124      	movs	r1, #36	@ 0x24
 800342c:	5099      	str	r1, [r3, r2]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	681a      	ldr	r2, [r3, #0]
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	2101      	movs	r1, #1
 800343a:	438a      	bics	r2, r1
 800343c:	601a      	str	r2, [r3, #0]
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	2200      	movs	r2, #0
 8003444:	601a      	str	r2, [r3, #0]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	2200      	movs	r2, #0
 800344c:	605a      	str	r2, [r3, #4]
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	2200      	movs	r2, #0
 8003454:	609a      	str	r2, [r3, #8]
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	0018      	movs	r0, r3
 800345a:	f7fe fa79 	bl	8001950 <HAL_UART_MspDeInit>
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	2290      	movs	r2, #144	@ 0x90
 8003462:	2100      	movs	r1, #0
 8003464:	5099      	str	r1, [r3, r2]
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	2288      	movs	r2, #136	@ 0x88
 800346a:	2100      	movs	r1, #0
 800346c:	5099      	str	r1, [r3, r2]
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	228c      	movs	r2, #140	@ 0x8c
 8003472:	2100      	movs	r1, #0
 8003474:	5099      	str	r1, [r3, r2]
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	2200      	movs	r2, #0
 800347a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	2200      	movs	r2, #0
 8003480:	671a      	str	r2, [r3, #112]	@ 0x70
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	2284      	movs	r2, #132	@ 0x84
 8003486:	2100      	movs	r1, #0
 8003488:	5499      	strb	r1, [r3, r2]
 800348a:	2300      	movs	r3, #0
 800348c:	0018      	movs	r0, r3
 800348e:	46bd      	mov	sp, r7
 8003490:	b002      	add	sp, #8
 8003492:	bd80      	pop	{r7, pc}

08003494 <HAL_UART_Transmit_DMA>:
 8003494:	b580      	push	{r7, lr}
 8003496:	b088      	sub	sp, #32
 8003498:	af00      	add	r7, sp, #0
 800349a:	60f8      	str	r0, [r7, #12]
 800349c:	60b9      	str	r1, [r7, #8]
 800349e:	1dbb      	adds	r3, r7, #6
 80034a0:	801a      	strh	r2, [r3, #0]
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	2288      	movs	r2, #136	@ 0x88
 80034a6:	589b      	ldr	r3, [r3, r2]
 80034a8:	2b20      	cmp	r3, #32
 80034aa:	d000      	beq.n	80034ae <HAL_UART_Transmit_DMA+0x1a>
 80034ac:	e079      	b.n	80035a2 <HAL_UART_Transmit_DMA+0x10e>
 80034ae:	68bb      	ldr	r3, [r7, #8]
 80034b0:	2b00      	cmp	r3, #0
 80034b2:	d003      	beq.n	80034bc <HAL_UART_Transmit_DMA+0x28>
 80034b4:	1dbb      	adds	r3, r7, #6
 80034b6:	881b      	ldrh	r3, [r3, #0]
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d101      	bne.n	80034c0 <HAL_UART_Transmit_DMA+0x2c>
 80034bc:	2301      	movs	r3, #1
 80034be:	e071      	b.n	80035a4 <HAL_UART_Transmit_DMA+0x110>
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	689a      	ldr	r2, [r3, #8]
 80034c4:	2380      	movs	r3, #128	@ 0x80
 80034c6:	015b      	lsls	r3, r3, #5
 80034c8:	429a      	cmp	r2, r3
 80034ca:	d109      	bne.n	80034e0 <HAL_UART_Transmit_DMA+0x4c>
 80034cc:	68fb      	ldr	r3, [r7, #12]
 80034ce:	691b      	ldr	r3, [r3, #16]
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	d105      	bne.n	80034e0 <HAL_UART_Transmit_DMA+0x4c>
 80034d4:	68bb      	ldr	r3, [r7, #8]
 80034d6:	2201      	movs	r2, #1
 80034d8:	4013      	ands	r3, r2
 80034da:	d001      	beq.n	80034e0 <HAL_UART_Transmit_DMA+0x4c>
 80034dc:	2301      	movs	r3, #1
 80034de:	e061      	b.n	80035a4 <HAL_UART_Transmit_DMA+0x110>
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	68ba      	ldr	r2, [r7, #8]
 80034e4:	651a      	str	r2, [r3, #80]	@ 0x50
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	1dba      	adds	r2, r7, #6
 80034ea:	2154      	movs	r1, #84	@ 0x54
 80034ec:	8812      	ldrh	r2, [r2, #0]
 80034ee:	525a      	strh	r2, [r3, r1]
 80034f0:	68fb      	ldr	r3, [r7, #12]
 80034f2:	1dba      	adds	r2, r7, #6
 80034f4:	2156      	movs	r1, #86	@ 0x56
 80034f6:	8812      	ldrh	r2, [r2, #0]
 80034f8:	525a      	strh	r2, [r3, r1]
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	2290      	movs	r2, #144	@ 0x90
 80034fe:	2100      	movs	r1, #0
 8003500:	5099      	str	r1, [r3, r2]
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	2288      	movs	r2, #136	@ 0x88
 8003506:	2121      	movs	r1, #33	@ 0x21
 8003508:	5099      	str	r1, [r3, r2]
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800350e:	2b00      	cmp	r3, #0
 8003510:	d028      	beq.n	8003564 <HAL_UART_Transmit_DMA+0xd0>
 8003512:	68fb      	ldr	r3, [r7, #12]
 8003514:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003516:	4a25      	ldr	r2, [pc, #148]	@ (80035ac <HAL_UART_Transmit_DMA+0x118>)
 8003518:	62da      	str	r2, [r3, #44]	@ 0x2c
 800351a:	68fb      	ldr	r3, [r7, #12]
 800351c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800351e:	4a24      	ldr	r2, [pc, #144]	@ (80035b0 <HAL_UART_Transmit_DMA+0x11c>)
 8003520:	631a      	str	r2, [r3, #48]	@ 0x30
 8003522:	68fb      	ldr	r3, [r7, #12]
 8003524:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003526:	4a23      	ldr	r2, [pc, #140]	@ (80035b4 <HAL_UART_Transmit_DMA+0x120>)
 8003528:	635a      	str	r2, [r3, #52]	@ 0x34
 800352a:	68fb      	ldr	r3, [r7, #12]
 800352c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800352e:	2200      	movs	r2, #0
 8003530:	639a      	str	r2, [r3, #56]	@ 0x38
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	6fd8      	ldr	r0, [r3, #124]	@ 0x7c
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800353a:	0019      	movs	r1, r3
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	681b      	ldr	r3, [r3, #0]
 8003540:	3328      	adds	r3, #40	@ 0x28
 8003542:	001a      	movs	r2, r3
 8003544:	1dbb      	adds	r3, r7, #6
 8003546:	881b      	ldrh	r3, [r3, #0]
 8003548:	f7fe fd68 	bl	800201c <HAL_DMA_Start_IT>
 800354c:	1e03      	subs	r3, r0, #0
 800354e:	d009      	beq.n	8003564 <HAL_UART_Transmit_DMA+0xd0>
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	2290      	movs	r2, #144	@ 0x90
 8003554:	2110      	movs	r1, #16
 8003556:	5099      	str	r1, [r3, r2]
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	2288      	movs	r2, #136	@ 0x88
 800355c:	2120      	movs	r1, #32
 800355e:	5099      	str	r1, [r3, r2]
 8003560:	2301      	movs	r3, #1
 8003562:	e01f      	b.n	80035a4 <HAL_UART_Transmit_DMA+0x110>
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	2240      	movs	r2, #64	@ 0x40
 800356a:	621a      	str	r2, [r3, #32]
 800356c:	f3ef 8310 	mrs	r3, PRIMASK
 8003570:	613b      	str	r3, [r7, #16]
 8003572:	693b      	ldr	r3, [r7, #16]
 8003574:	61fb      	str	r3, [r7, #28]
 8003576:	2301      	movs	r3, #1
 8003578:	617b      	str	r3, [r7, #20]
 800357a:	697b      	ldr	r3, [r7, #20]
 800357c:	f383 8810 	msr	PRIMASK, r3
 8003580:	46c0      	nop			@ (mov r8, r8)
 8003582:	68fb      	ldr	r3, [r7, #12]
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	689a      	ldr	r2, [r3, #8]
 8003588:	68fb      	ldr	r3, [r7, #12]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	2180      	movs	r1, #128	@ 0x80
 800358e:	430a      	orrs	r2, r1
 8003590:	609a      	str	r2, [r3, #8]
 8003592:	69fb      	ldr	r3, [r7, #28]
 8003594:	61bb      	str	r3, [r7, #24]
 8003596:	69bb      	ldr	r3, [r7, #24]
 8003598:	f383 8810 	msr	PRIMASK, r3
 800359c:	46c0      	nop			@ (mov r8, r8)
 800359e:	2300      	movs	r3, #0
 80035a0:	e000      	b.n	80035a4 <HAL_UART_Transmit_DMA+0x110>
 80035a2:	2302      	movs	r3, #2
 80035a4:	0018      	movs	r0, r3
 80035a6:	46bd      	mov	sp, r7
 80035a8:	b008      	add	sp, #32
 80035aa:	bd80      	pop	{r7, pc}
 80035ac:	08004925 	.word	0x08004925
 80035b0:	080049bd 	.word	0x080049bd
 80035b4:	08004b4f 	.word	0x08004b4f

080035b8 <HAL_UART_Abort>:
 80035b8:	b580      	push	{r7, lr}
 80035ba:	b096      	sub	sp, #88	@ 0x58
 80035bc:	af00      	add	r7, sp, #0
 80035be:	6078      	str	r0, [r7, #4]
 80035c0:	f3ef 8310 	mrs	r3, PRIMASK
 80035c4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80035c6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80035c8:	657b      	str	r3, [r7, #84]	@ 0x54
 80035ca:	2301      	movs	r3, #1
 80035cc:	633b      	str	r3, [r7, #48]	@ 0x30
 80035ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80035d0:	f383 8810 	msr	PRIMASK, r3
 80035d4:	46c0      	nop			@ (mov r8, r8)
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	681a      	ldr	r2, [r3, #0]
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	4979      	ldr	r1, [pc, #484]	@ (80037c8 <HAL_UART_Abort+0x210>)
 80035e2:	400a      	ands	r2, r1
 80035e4:	601a      	str	r2, [r3, #0]
 80035e6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80035e8:	637b      	str	r3, [r7, #52]	@ 0x34
 80035ea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80035ec:	f383 8810 	msr	PRIMASK, r3
 80035f0:	46c0      	nop			@ (mov r8, r8)
 80035f2:	f3ef 8310 	mrs	r3, PRIMASK
 80035f6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80035f8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80035fa:	653b      	str	r3, [r7, #80]	@ 0x50
 80035fc:	2301      	movs	r3, #1
 80035fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003600:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003602:	f383 8810 	msr	PRIMASK, r3
 8003606:	46c0      	nop			@ (mov r8, r8)
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	689a      	ldr	r2, [r3, #8]
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	681b      	ldr	r3, [r3, #0]
 8003612:	496e      	ldr	r1, [pc, #440]	@ (80037cc <HAL_UART_Abort+0x214>)
 8003614:	400a      	ands	r2, r1
 8003616:	609a      	str	r2, [r3, #8]
 8003618:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800361a:	643b      	str	r3, [r7, #64]	@ 0x40
 800361c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800361e:	f383 8810 	msr	PRIMASK, r3
 8003622:	46c0      	nop			@ (mov r8, r8)
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003628:	2b01      	cmp	r3, #1
 800362a:	d118      	bne.n	800365e <HAL_UART_Abort+0xa6>
 800362c:	f3ef 8310 	mrs	r3, PRIMASK
 8003630:	623b      	str	r3, [r7, #32]
 8003632:	6a3b      	ldr	r3, [r7, #32]
 8003634:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003636:	2301      	movs	r3, #1
 8003638:	627b      	str	r3, [r7, #36]	@ 0x24
 800363a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800363c:	f383 8810 	msr	PRIMASK, r3
 8003640:	46c0      	nop			@ (mov r8, r8)
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	681a      	ldr	r2, [r3, #0]
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	2110      	movs	r1, #16
 800364e:	438a      	bics	r2, r1
 8003650:	601a      	str	r2, [r3, #0]
 8003652:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003654:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003656:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003658:	f383 8810 	msr	PRIMASK, r3
 800365c:	46c0      	nop			@ (mov r8, r8)
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	689b      	ldr	r3, [r3, #8]
 8003664:	2280      	movs	r2, #128	@ 0x80
 8003666:	4013      	ands	r3, r2
 8003668:	2b80      	cmp	r3, #128	@ 0x80
 800366a:	d135      	bne.n	80036d8 <HAL_UART_Abort+0x120>
 800366c:	f3ef 8310 	mrs	r3, PRIMASK
 8003670:	617b      	str	r3, [r7, #20]
 8003672:	697b      	ldr	r3, [r7, #20]
 8003674:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003676:	2301      	movs	r3, #1
 8003678:	61bb      	str	r3, [r7, #24]
 800367a:	69bb      	ldr	r3, [r7, #24]
 800367c:	f383 8810 	msr	PRIMASK, r3
 8003680:	46c0      	nop			@ (mov r8, r8)
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	681b      	ldr	r3, [r3, #0]
 8003686:	689a      	ldr	r2, [r3, #8]
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	2180      	movs	r1, #128	@ 0x80
 800368e:	438a      	bics	r2, r1
 8003690:	609a      	str	r2, [r3, #8]
 8003692:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003694:	61fb      	str	r3, [r7, #28]
 8003696:	69fb      	ldr	r3, [r7, #28]
 8003698:	f383 8810 	msr	PRIMASK, r3
 800369c:	46c0      	nop			@ (mov r8, r8)
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	d018      	beq.n	80036d8 <HAL_UART_Abort+0x120>
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80036aa:	2200      	movs	r2, #0
 80036ac:	639a      	str	r2, [r3, #56]	@ 0x38
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80036b2:	0018      	movs	r0, r3
 80036b4:	f7fe fd3a 	bl	800212c <HAL_DMA_Abort>
 80036b8:	1e03      	subs	r3, r0, #0
 80036ba:	d00d      	beq.n	80036d8 <HAL_UART_Abort+0x120>
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80036c0:	0018      	movs	r0, r3
 80036c2:	f7fe fec1 	bl	8002448 <HAL_DMA_GetError>
 80036c6:	0003      	movs	r3, r0
 80036c8:	2b20      	cmp	r3, #32
 80036ca:	d105      	bne.n	80036d8 <HAL_UART_Abort+0x120>
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	2290      	movs	r2, #144	@ 0x90
 80036d0:	2110      	movs	r1, #16
 80036d2:	5099      	str	r1, [r3, r2]
 80036d4:	2303      	movs	r3, #3
 80036d6:	e072      	b.n	80037be <HAL_UART_Abort+0x206>
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	681b      	ldr	r3, [r3, #0]
 80036dc:	689b      	ldr	r3, [r3, #8]
 80036de:	2240      	movs	r2, #64	@ 0x40
 80036e0:	4013      	ands	r3, r2
 80036e2:	2b40      	cmp	r3, #64	@ 0x40
 80036e4:	d139      	bne.n	800375a <HAL_UART_Abort+0x1a2>
 80036e6:	f3ef 8310 	mrs	r3, PRIMASK
 80036ea:	60bb      	str	r3, [r7, #8]
 80036ec:	68bb      	ldr	r3, [r7, #8]
 80036ee:	647b      	str	r3, [r7, #68]	@ 0x44
 80036f0:	2301      	movs	r3, #1
 80036f2:	60fb      	str	r3, [r7, #12]
 80036f4:	68fb      	ldr	r3, [r7, #12]
 80036f6:	f383 8810 	msr	PRIMASK, r3
 80036fa:	46c0      	nop			@ (mov r8, r8)
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	689a      	ldr	r2, [r3, #8]
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	2140      	movs	r1, #64	@ 0x40
 8003708:	438a      	bics	r2, r1
 800370a:	609a      	str	r2, [r3, #8]
 800370c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800370e:	613b      	str	r3, [r7, #16]
 8003710:	693b      	ldr	r3, [r7, #16]
 8003712:	f383 8810 	msr	PRIMASK, r3
 8003716:	46c0      	nop			@ (mov r8, r8)
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	2280      	movs	r2, #128	@ 0x80
 800371c:	589b      	ldr	r3, [r3, r2]
 800371e:	2b00      	cmp	r3, #0
 8003720:	d01b      	beq.n	800375a <HAL_UART_Abort+0x1a2>
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	2280      	movs	r2, #128	@ 0x80
 8003726:	589b      	ldr	r3, [r3, r2]
 8003728:	2200      	movs	r2, #0
 800372a:	639a      	str	r2, [r3, #56]	@ 0x38
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	2280      	movs	r2, #128	@ 0x80
 8003730:	589b      	ldr	r3, [r3, r2]
 8003732:	0018      	movs	r0, r3
 8003734:	f7fe fcfa 	bl	800212c <HAL_DMA_Abort>
 8003738:	1e03      	subs	r3, r0, #0
 800373a:	d00e      	beq.n	800375a <HAL_UART_Abort+0x1a2>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	2280      	movs	r2, #128	@ 0x80
 8003740:	589b      	ldr	r3, [r3, r2]
 8003742:	0018      	movs	r0, r3
 8003744:	f7fe fe80 	bl	8002448 <HAL_DMA_GetError>
 8003748:	0003      	movs	r3, r0
 800374a:	2b20      	cmp	r3, #32
 800374c:	d105      	bne.n	800375a <HAL_UART_Abort+0x1a2>
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	2290      	movs	r2, #144	@ 0x90
 8003752:	2110      	movs	r1, #16
 8003754:	5099      	str	r1, [r3, r2]
 8003756:	2303      	movs	r3, #3
 8003758:	e031      	b.n	80037be <HAL_UART_Abort+0x206>
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	2256      	movs	r2, #86	@ 0x56
 800375e:	2100      	movs	r1, #0
 8003760:	5299      	strh	r1, [r3, r2]
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	225e      	movs	r2, #94	@ 0x5e
 8003766:	2100      	movs	r1, #0
 8003768:	5299      	strh	r1, [r3, r2]
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	220f      	movs	r2, #15
 8003770:	621a      	str	r2, [r3, #32]
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8003776:	2380      	movs	r3, #128	@ 0x80
 8003778:	059b      	lsls	r3, r3, #22
 800377a:	429a      	cmp	r2, r3
 800377c:	d107      	bne.n	800378e <HAL_UART_Abort+0x1d6>
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	699a      	ldr	r2, [r3, #24]
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	2110      	movs	r1, #16
 800378a:	430a      	orrs	r2, r1
 800378c:	619a      	str	r2, [r3, #24]
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	681b      	ldr	r3, [r3, #0]
 8003792:	699a      	ldr	r2, [r3, #24]
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	681b      	ldr	r3, [r3, #0]
 8003798:	2108      	movs	r1, #8
 800379a:	430a      	orrs	r2, r1
 800379c:	619a      	str	r2, [r3, #24]
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	2288      	movs	r2, #136	@ 0x88
 80037a2:	2120      	movs	r1, #32
 80037a4:	5099      	str	r1, [r3, r2]
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	228c      	movs	r2, #140	@ 0x8c
 80037aa:	2120      	movs	r1, #32
 80037ac:	5099      	str	r1, [r3, r2]
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	2200      	movs	r2, #0
 80037b2:	66da      	str	r2, [r3, #108]	@ 0x6c
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	2290      	movs	r2, #144	@ 0x90
 80037b8:	2100      	movs	r1, #0
 80037ba:	5099      	str	r1, [r3, r2]
 80037bc:	2300      	movs	r3, #0
 80037be:	0018      	movs	r0, r3
 80037c0:	46bd      	mov	sp, r7
 80037c2:	b016      	add	sp, #88	@ 0x58
 80037c4:	bd80      	pop	{r7, pc}
 80037c6:	46c0      	nop			@ (mov r8, r8)
 80037c8:	fffffe1f 	.word	0xfffffe1f
 80037cc:	ef7ffffe 	.word	0xef7ffffe

080037d0 <HAL_UART_AbortReceive>:
 80037d0:	b580      	push	{r7, lr}
 80037d2:	b092      	sub	sp, #72	@ 0x48
 80037d4:	af00      	add	r7, sp, #0
 80037d6:	6078      	str	r0, [r7, #4]
 80037d8:	f3ef 8310 	mrs	r3, PRIMASK
 80037dc:	623b      	str	r3, [r7, #32]
 80037de:	6a3b      	ldr	r3, [r7, #32]
 80037e0:	647b      	str	r3, [r7, #68]	@ 0x44
 80037e2:	2301      	movs	r3, #1
 80037e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80037e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80037e8:	f383 8810 	msr	PRIMASK, r3
 80037ec:	46c0      	nop			@ (mov r8, r8)
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	681b      	ldr	r3, [r3, #0]
 80037f2:	681a      	ldr	r2, [r3, #0]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	494d      	ldr	r1, [pc, #308]	@ (8003930 <HAL_UART_AbortReceive+0x160>)
 80037fa:	400a      	ands	r2, r1
 80037fc:	601a      	str	r2, [r3, #0]
 80037fe:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003800:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003802:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003804:	f383 8810 	msr	PRIMASK, r3
 8003808:	46c0      	nop			@ (mov r8, r8)
 800380a:	f3ef 8310 	mrs	r3, PRIMASK
 800380e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003810:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003812:	643b      	str	r3, [r7, #64]	@ 0x40
 8003814:	2301      	movs	r3, #1
 8003816:	633b      	str	r3, [r7, #48]	@ 0x30
 8003818:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800381a:	f383 8810 	msr	PRIMASK, r3
 800381e:	46c0      	nop			@ (mov r8, r8)
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	689a      	ldr	r2, [r3, #8]
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	4942      	ldr	r1, [pc, #264]	@ (8003934 <HAL_UART_AbortReceive+0x164>)
 800382c:	400a      	ands	r2, r1
 800382e:	609a      	str	r2, [r3, #8]
 8003830:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003832:	637b      	str	r3, [r7, #52]	@ 0x34
 8003834:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003836:	f383 8810 	msr	PRIMASK, r3
 800383a:	46c0      	nop			@ (mov r8, r8)
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003840:	2b01      	cmp	r3, #1
 8003842:	d118      	bne.n	8003876 <HAL_UART_AbortReceive+0xa6>
 8003844:	f3ef 8310 	mrs	r3, PRIMASK
 8003848:	617b      	str	r3, [r7, #20]
 800384a:	697b      	ldr	r3, [r7, #20]
 800384c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800384e:	2301      	movs	r3, #1
 8003850:	61bb      	str	r3, [r7, #24]
 8003852:	69bb      	ldr	r3, [r7, #24]
 8003854:	f383 8810 	msr	PRIMASK, r3
 8003858:	46c0      	nop			@ (mov r8, r8)
 800385a:	687b      	ldr	r3, [r7, #4]
 800385c:	681b      	ldr	r3, [r3, #0]
 800385e:	681a      	ldr	r2, [r3, #0]
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	2110      	movs	r1, #16
 8003866:	438a      	bics	r2, r1
 8003868:	601a      	str	r2, [r3, #0]
 800386a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800386c:	61fb      	str	r3, [r7, #28]
 800386e:	69fb      	ldr	r3, [r7, #28]
 8003870:	f383 8810 	msr	PRIMASK, r3
 8003874:	46c0      	nop			@ (mov r8, r8)
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	681b      	ldr	r3, [r3, #0]
 800387a:	689b      	ldr	r3, [r3, #8]
 800387c:	2240      	movs	r2, #64	@ 0x40
 800387e:	4013      	ands	r3, r2
 8003880:	2b40      	cmp	r3, #64	@ 0x40
 8003882:	d139      	bne.n	80038f8 <HAL_UART_AbortReceive+0x128>
 8003884:	f3ef 8310 	mrs	r3, PRIMASK
 8003888:	60bb      	str	r3, [r7, #8]
 800388a:	68bb      	ldr	r3, [r7, #8]
 800388c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800388e:	2301      	movs	r3, #1
 8003890:	60fb      	str	r3, [r7, #12]
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	f383 8810 	msr	PRIMASK, r3
 8003898:	46c0      	nop			@ (mov r8, r8)
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	689a      	ldr	r2, [r3, #8]
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	2140      	movs	r1, #64	@ 0x40
 80038a6:	438a      	bics	r2, r1
 80038a8:	609a      	str	r2, [r3, #8]
 80038aa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80038ac:	613b      	str	r3, [r7, #16]
 80038ae:	693b      	ldr	r3, [r7, #16]
 80038b0:	f383 8810 	msr	PRIMASK, r3
 80038b4:	46c0      	nop			@ (mov r8, r8)
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	2280      	movs	r2, #128	@ 0x80
 80038ba:	589b      	ldr	r3, [r3, r2]
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d01b      	beq.n	80038f8 <HAL_UART_AbortReceive+0x128>
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	2280      	movs	r2, #128	@ 0x80
 80038c4:	589b      	ldr	r3, [r3, r2]
 80038c6:	2200      	movs	r2, #0
 80038c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	2280      	movs	r2, #128	@ 0x80
 80038ce:	589b      	ldr	r3, [r3, r2]
 80038d0:	0018      	movs	r0, r3
 80038d2:	f7fe fc2b 	bl	800212c <HAL_DMA_Abort>
 80038d6:	1e03      	subs	r3, r0, #0
 80038d8:	d00e      	beq.n	80038f8 <HAL_UART_AbortReceive+0x128>
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	2280      	movs	r2, #128	@ 0x80
 80038de:	589b      	ldr	r3, [r3, r2]
 80038e0:	0018      	movs	r0, r3
 80038e2:	f7fe fdb1 	bl	8002448 <HAL_DMA_GetError>
 80038e6:	0003      	movs	r3, r0
 80038e8:	2b20      	cmp	r3, #32
 80038ea:	d105      	bne.n	80038f8 <HAL_UART_AbortReceive+0x128>
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	2290      	movs	r2, #144	@ 0x90
 80038f0:	2110      	movs	r1, #16
 80038f2:	5099      	str	r1, [r3, r2]
 80038f4:	2303      	movs	r3, #3
 80038f6:	e017      	b.n	8003928 <HAL_UART_AbortReceive+0x158>
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	225e      	movs	r2, #94	@ 0x5e
 80038fc:	2100      	movs	r1, #0
 80038fe:	5299      	strh	r1, [r3, r2]
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	220f      	movs	r2, #15
 8003906:	621a      	str	r2, [r3, #32]
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	699a      	ldr	r2, [r3, #24]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	2108      	movs	r1, #8
 8003914:	430a      	orrs	r2, r1
 8003916:	619a      	str	r2, [r3, #24]
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	228c      	movs	r2, #140	@ 0x8c
 800391c:	2120      	movs	r1, #32
 800391e:	5099      	str	r1, [r3, r2]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	2200      	movs	r2, #0
 8003924:	66da      	str	r2, [r3, #108]	@ 0x6c
 8003926:	2300      	movs	r3, #0
 8003928:	0018      	movs	r0, r3
 800392a:	46bd      	mov	sp, r7
 800392c:	b012      	add	sp, #72	@ 0x48
 800392e:	bd80      	pop	{r7, pc}
 8003930:	fffffedf 	.word	0xfffffedf
 8003934:	effffffe 	.word	0xeffffffe

08003938 <HAL_UART_IRQHandler>:
 8003938:	b5b0      	push	{r4, r5, r7, lr}
 800393a:	b0aa      	sub	sp, #168	@ 0xa8
 800393c:	af00      	add	r7, sp, #0
 800393e:	6078      	str	r0, [r7, #4]
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	69db      	ldr	r3, [r3, #28]
 8003946:	22a4      	movs	r2, #164	@ 0xa4
 8003948:	18b9      	adds	r1, r7, r2
 800394a:	600b      	str	r3, [r1, #0]
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	20a0      	movs	r0, #160	@ 0xa0
 8003954:	1839      	adds	r1, r7, r0
 8003956:	600b      	str	r3, [r1, #0]
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	689b      	ldr	r3, [r3, #8]
 800395e:	249c      	movs	r4, #156	@ 0x9c
 8003960:	1939      	adds	r1, r7, r4
 8003962:	600b      	str	r3, [r1, #0]
 8003964:	0011      	movs	r1, r2
 8003966:	18bb      	adds	r3, r7, r2
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	4aa2      	ldr	r2, [pc, #648]	@ (8003bf4 <HAL_UART_IRQHandler+0x2bc>)
 800396c:	4013      	ands	r3, r2
 800396e:	2298      	movs	r2, #152	@ 0x98
 8003970:	18bd      	adds	r5, r7, r2
 8003972:	602b      	str	r3, [r5, #0]
 8003974:	18bb      	adds	r3, r7, r2
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	2b00      	cmp	r3, #0
 800397a:	d11a      	bne.n	80039b2 <HAL_UART_IRQHandler+0x7a>
 800397c:	187b      	adds	r3, r7, r1
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	2220      	movs	r2, #32
 8003982:	4013      	ands	r3, r2
 8003984:	d015      	beq.n	80039b2 <HAL_UART_IRQHandler+0x7a>
 8003986:	183b      	adds	r3, r7, r0
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	2220      	movs	r2, #32
 800398c:	4013      	ands	r3, r2
 800398e:	d105      	bne.n	800399c <HAL_UART_IRQHandler+0x64>
 8003990:	193b      	adds	r3, r7, r4
 8003992:	681a      	ldr	r2, [r3, #0]
 8003994:	2380      	movs	r3, #128	@ 0x80
 8003996:	055b      	lsls	r3, r3, #21
 8003998:	4013      	ands	r3, r2
 800399a:	d00a      	beq.n	80039b2 <HAL_UART_IRQHandler+0x7a>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	d100      	bne.n	80039a6 <HAL_UART_IRQHandler+0x6e>
 80039a4:	e2fb      	b.n	8003f9e <HAL_UART_IRQHandler+0x666>
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80039aa:	687a      	ldr	r2, [r7, #4]
 80039ac:	0010      	movs	r0, r2
 80039ae:	4798      	blx	r3
 80039b0:	e2f5      	b.n	8003f9e <HAL_UART_IRQHandler+0x666>
 80039b2:	2398      	movs	r3, #152	@ 0x98
 80039b4:	18fb      	adds	r3, r7, r3
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	2b00      	cmp	r3, #0
 80039ba:	d100      	bne.n	80039be <HAL_UART_IRQHandler+0x86>
 80039bc:	e122      	b.n	8003c04 <HAL_UART_IRQHandler+0x2cc>
 80039be:	239c      	movs	r3, #156	@ 0x9c
 80039c0:	18fb      	adds	r3, r7, r3
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	4a8c      	ldr	r2, [pc, #560]	@ (8003bf8 <HAL_UART_IRQHandler+0x2c0>)
 80039c6:	4013      	ands	r3, r2
 80039c8:	d106      	bne.n	80039d8 <HAL_UART_IRQHandler+0xa0>
 80039ca:	23a0      	movs	r3, #160	@ 0xa0
 80039cc:	18fb      	adds	r3, r7, r3
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	4a8a      	ldr	r2, [pc, #552]	@ (8003bfc <HAL_UART_IRQHandler+0x2c4>)
 80039d2:	4013      	ands	r3, r2
 80039d4:	d100      	bne.n	80039d8 <HAL_UART_IRQHandler+0xa0>
 80039d6:	e115      	b.n	8003c04 <HAL_UART_IRQHandler+0x2cc>
 80039d8:	23a4      	movs	r3, #164	@ 0xa4
 80039da:	18fb      	adds	r3, r7, r3
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	2201      	movs	r2, #1
 80039e0:	4013      	ands	r3, r2
 80039e2:	d012      	beq.n	8003a0a <HAL_UART_IRQHandler+0xd2>
 80039e4:	23a0      	movs	r3, #160	@ 0xa0
 80039e6:	18fb      	adds	r3, r7, r3
 80039e8:	681a      	ldr	r2, [r3, #0]
 80039ea:	2380      	movs	r3, #128	@ 0x80
 80039ec:	005b      	lsls	r3, r3, #1
 80039ee:	4013      	ands	r3, r2
 80039f0:	d00b      	beq.n	8003a0a <HAL_UART_IRQHandler+0xd2>
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	681b      	ldr	r3, [r3, #0]
 80039f6:	2201      	movs	r2, #1
 80039f8:	621a      	str	r2, [r3, #32]
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	2290      	movs	r2, #144	@ 0x90
 80039fe:	589b      	ldr	r3, [r3, r2]
 8003a00:	2201      	movs	r2, #1
 8003a02:	431a      	orrs	r2, r3
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	2190      	movs	r1, #144	@ 0x90
 8003a08:	505a      	str	r2, [r3, r1]
 8003a0a:	23a4      	movs	r3, #164	@ 0xa4
 8003a0c:	18fb      	adds	r3, r7, r3
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	2202      	movs	r2, #2
 8003a12:	4013      	ands	r3, r2
 8003a14:	d011      	beq.n	8003a3a <HAL_UART_IRQHandler+0x102>
 8003a16:	239c      	movs	r3, #156	@ 0x9c
 8003a18:	18fb      	adds	r3, r7, r3
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	2201      	movs	r2, #1
 8003a1e:	4013      	ands	r3, r2
 8003a20:	d00b      	beq.n	8003a3a <HAL_UART_IRQHandler+0x102>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	2202      	movs	r2, #2
 8003a28:	621a      	str	r2, [r3, #32]
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	2290      	movs	r2, #144	@ 0x90
 8003a2e:	589b      	ldr	r3, [r3, r2]
 8003a30:	2204      	movs	r2, #4
 8003a32:	431a      	orrs	r2, r3
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	2190      	movs	r1, #144	@ 0x90
 8003a38:	505a      	str	r2, [r3, r1]
 8003a3a:	23a4      	movs	r3, #164	@ 0xa4
 8003a3c:	18fb      	adds	r3, r7, r3
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	2204      	movs	r2, #4
 8003a42:	4013      	ands	r3, r2
 8003a44:	d011      	beq.n	8003a6a <HAL_UART_IRQHandler+0x132>
 8003a46:	239c      	movs	r3, #156	@ 0x9c
 8003a48:	18fb      	adds	r3, r7, r3
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	2201      	movs	r2, #1
 8003a4e:	4013      	ands	r3, r2
 8003a50:	d00b      	beq.n	8003a6a <HAL_UART_IRQHandler+0x132>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	2204      	movs	r2, #4
 8003a58:	621a      	str	r2, [r3, #32]
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	2290      	movs	r2, #144	@ 0x90
 8003a5e:	589b      	ldr	r3, [r3, r2]
 8003a60:	2202      	movs	r2, #2
 8003a62:	431a      	orrs	r2, r3
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	2190      	movs	r1, #144	@ 0x90
 8003a68:	505a      	str	r2, [r3, r1]
 8003a6a:	23a4      	movs	r3, #164	@ 0xa4
 8003a6c:	18fb      	adds	r3, r7, r3
 8003a6e:	681b      	ldr	r3, [r3, #0]
 8003a70:	2208      	movs	r2, #8
 8003a72:	4013      	ands	r3, r2
 8003a74:	d017      	beq.n	8003aa6 <HAL_UART_IRQHandler+0x16e>
 8003a76:	23a0      	movs	r3, #160	@ 0xa0
 8003a78:	18fb      	adds	r3, r7, r3
 8003a7a:	681b      	ldr	r3, [r3, #0]
 8003a7c:	2220      	movs	r2, #32
 8003a7e:	4013      	ands	r3, r2
 8003a80:	d105      	bne.n	8003a8e <HAL_UART_IRQHandler+0x156>
 8003a82:	239c      	movs	r3, #156	@ 0x9c
 8003a84:	18fb      	adds	r3, r7, r3
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	4a5b      	ldr	r2, [pc, #364]	@ (8003bf8 <HAL_UART_IRQHandler+0x2c0>)
 8003a8a:	4013      	ands	r3, r2
 8003a8c:	d00b      	beq.n	8003aa6 <HAL_UART_IRQHandler+0x16e>
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	2208      	movs	r2, #8
 8003a94:	621a      	str	r2, [r3, #32]
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	2290      	movs	r2, #144	@ 0x90
 8003a9a:	589b      	ldr	r3, [r3, r2]
 8003a9c:	2208      	movs	r2, #8
 8003a9e:	431a      	orrs	r2, r3
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	2190      	movs	r1, #144	@ 0x90
 8003aa4:	505a      	str	r2, [r3, r1]
 8003aa6:	23a4      	movs	r3, #164	@ 0xa4
 8003aa8:	18fb      	adds	r3, r7, r3
 8003aaa:	681a      	ldr	r2, [r3, #0]
 8003aac:	2380      	movs	r3, #128	@ 0x80
 8003aae:	011b      	lsls	r3, r3, #4
 8003ab0:	4013      	ands	r3, r2
 8003ab2:	d013      	beq.n	8003adc <HAL_UART_IRQHandler+0x1a4>
 8003ab4:	23a0      	movs	r3, #160	@ 0xa0
 8003ab6:	18fb      	adds	r3, r7, r3
 8003ab8:	681a      	ldr	r2, [r3, #0]
 8003aba:	2380      	movs	r3, #128	@ 0x80
 8003abc:	04db      	lsls	r3, r3, #19
 8003abe:	4013      	ands	r3, r2
 8003ac0:	d00c      	beq.n	8003adc <HAL_UART_IRQHandler+0x1a4>
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	2280      	movs	r2, #128	@ 0x80
 8003ac8:	0112      	lsls	r2, r2, #4
 8003aca:	621a      	str	r2, [r3, #32]
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	2290      	movs	r2, #144	@ 0x90
 8003ad0:	589b      	ldr	r3, [r3, r2]
 8003ad2:	2220      	movs	r2, #32
 8003ad4:	431a      	orrs	r2, r3
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	2190      	movs	r1, #144	@ 0x90
 8003ada:	505a      	str	r2, [r3, r1]
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	2290      	movs	r2, #144	@ 0x90
 8003ae0:	589b      	ldr	r3, [r3, r2]
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d100      	bne.n	8003ae8 <HAL_UART_IRQHandler+0x1b0>
 8003ae6:	e25c      	b.n	8003fa2 <HAL_UART_IRQHandler+0x66a>
 8003ae8:	23a4      	movs	r3, #164	@ 0xa4
 8003aea:	18fb      	adds	r3, r7, r3
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	2220      	movs	r2, #32
 8003af0:	4013      	ands	r3, r2
 8003af2:	d015      	beq.n	8003b20 <HAL_UART_IRQHandler+0x1e8>
 8003af4:	23a0      	movs	r3, #160	@ 0xa0
 8003af6:	18fb      	adds	r3, r7, r3
 8003af8:	681b      	ldr	r3, [r3, #0]
 8003afa:	2220      	movs	r2, #32
 8003afc:	4013      	ands	r3, r2
 8003afe:	d106      	bne.n	8003b0e <HAL_UART_IRQHandler+0x1d6>
 8003b00:	239c      	movs	r3, #156	@ 0x9c
 8003b02:	18fb      	adds	r3, r7, r3
 8003b04:	681a      	ldr	r2, [r3, #0]
 8003b06:	2380      	movs	r3, #128	@ 0x80
 8003b08:	055b      	lsls	r3, r3, #21
 8003b0a:	4013      	ands	r3, r2
 8003b0c:	d008      	beq.n	8003b20 <HAL_UART_IRQHandler+0x1e8>
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d004      	beq.n	8003b20 <HAL_UART_IRQHandler+0x1e8>
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003b1a:	687a      	ldr	r2, [r7, #4]
 8003b1c:	0010      	movs	r0, r2
 8003b1e:	4798      	blx	r3
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	2290      	movs	r2, #144	@ 0x90
 8003b24:	589b      	ldr	r3, [r3, r2]
 8003b26:	2194      	movs	r1, #148	@ 0x94
 8003b28:	187a      	adds	r2, r7, r1
 8003b2a:	6013      	str	r3, [r2, #0]
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	689b      	ldr	r3, [r3, #8]
 8003b32:	2240      	movs	r2, #64	@ 0x40
 8003b34:	4013      	ands	r3, r2
 8003b36:	2b40      	cmp	r3, #64	@ 0x40
 8003b38:	d004      	beq.n	8003b44 <HAL_UART_IRQHandler+0x20c>
 8003b3a:	187b      	adds	r3, r7, r1
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	2228      	movs	r2, #40	@ 0x28
 8003b40:	4013      	ands	r3, r2
 8003b42:	d04c      	beq.n	8003bde <HAL_UART_IRQHandler+0x2a6>
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	0018      	movs	r0, r3
 8003b48:	f000 fe86 	bl	8004858 <UART_EndRxTransfer>
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	689b      	ldr	r3, [r3, #8]
 8003b52:	2240      	movs	r2, #64	@ 0x40
 8003b54:	4013      	ands	r3, r2
 8003b56:	2b40      	cmp	r3, #64	@ 0x40
 8003b58:	d13c      	bne.n	8003bd4 <HAL_UART_IRQHandler+0x29c>
 8003b5a:	f3ef 8310 	mrs	r3, PRIMASK
 8003b5e:	663b      	str	r3, [r7, #96]	@ 0x60
 8003b60:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8003b62:	2090      	movs	r0, #144	@ 0x90
 8003b64:	183a      	adds	r2, r7, r0
 8003b66:	6013      	str	r3, [r2, #0]
 8003b68:	2301      	movs	r3, #1
 8003b6a:	667b      	str	r3, [r7, #100]	@ 0x64
 8003b6c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003b6e:	f383 8810 	msr	PRIMASK, r3
 8003b72:	46c0      	nop			@ (mov r8, r8)
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	689a      	ldr	r2, [r3, #8]
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	2140      	movs	r1, #64	@ 0x40
 8003b80:	438a      	bics	r2, r1
 8003b82:	609a      	str	r2, [r3, #8]
 8003b84:	183b      	adds	r3, r7, r0
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003b8a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003b8c:	f383 8810 	msr	PRIMASK, r3
 8003b90:	46c0      	nop			@ (mov r8, r8)
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	2280      	movs	r2, #128	@ 0x80
 8003b96:	589b      	ldr	r3, [r3, r2]
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	d016      	beq.n	8003bca <HAL_UART_IRQHandler+0x292>
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	2280      	movs	r2, #128	@ 0x80
 8003ba0:	589b      	ldr	r3, [r3, r2]
 8003ba2:	4a17      	ldr	r2, [pc, #92]	@ (8003c00 <HAL_UART_IRQHandler+0x2c8>)
 8003ba4:	639a      	str	r2, [r3, #56]	@ 0x38
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	2280      	movs	r2, #128	@ 0x80
 8003baa:	589b      	ldr	r3, [r3, r2]
 8003bac:	0018      	movs	r0, r3
 8003bae:	f7fe fb1f 	bl	80021f0 <HAL_DMA_Abort_IT>
 8003bb2:	1e03      	subs	r3, r0, #0
 8003bb4:	d01c      	beq.n	8003bf0 <HAL_UART_IRQHandler+0x2b8>
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	2280      	movs	r2, #128	@ 0x80
 8003bba:	589b      	ldr	r3, [r3, r2]
 8003bbc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003bbe:	687a      	ldr	r2, [r7, #4]
 8003bc0:	2180      	movs	r1, #128	@ 0x80
 8003bc2:	5852      	ldr	r2, [r2, r1]
 8003bc4:	0010      	movs	r0, r2
 8003bc6:	4798      	blx	r3
 8003bc8:	e012      	b.n	8003bf0 <HAL_UART_IRQHandler+0x2b8>
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	0018      	movs	r0, r3
 8003bce:	f7fc fff3 	bl	8000bb8 <HAL_UART_ErrorCallback>
 8003bd2:	e00d      	b.n	8003bf0 <HAL_UART_IRQHandler+0x2b8>
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	0018      	movs	r0, r3
 8003bd8:	f7fc ffee 	bl	8000bb8 <HAL_UART_ErrorCallback>
 8003bdc:	e008      	b.n	8003bf0 <HAL_UART_IRQHandler+0x2b8>
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	0018      	movs	r0, r3
 8003be2:	f7fc ffe9 	bl	8000bb8 <HAL_UART_ErrorCallback>
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	2290      	movs	r2, #144	@ 0x90
 8003bea:	2100      	movs	r1, #0
 8003bec:	5099      	str	r1, [r3, r2]
 8003bee:	e1d8      	b.n	8003fa2 <HAL_UART_IRQHandler+0x66a>
 8003bf0:	46c0      	nop			@ (mov r8, r8)
 8003bf2:	e1d6      	b.n	8003fa2 <HAL_UART_IRQHandler+0x66a>
 8003bf4:	0000080f 	.word	0x0000080f
 8003bf8:	10000001 	.word	0x10000001
 8003bfc:	04000120 	.word	0x04000120
 8003c00:	08004bd5 	.word	0x08004bd5
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003c08:	2b01      	cmp	r3, #1
 8003c0a:	d000      	beq.n	8003c0e <HAL_UART_IRQHandler+0x2d6>
 8003c0c:	e15d      	b.n	8003eca <HAL_UART_IRQHandler+0x592>
 8003c0e:	23a4      	movs	r3, #164	@ 0xa4
 8003c10:	18fb      	adds	r3, r7, r3
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	2210      	movs	r2, #16
 8003c16:	4013      	ands	r3, r2
 8003c18:	d100      	bne.n	8003c1c <HAL_UART_IRQHandler+0x2e4>
 8003c1a:	e156      	b.n	8003eca <HAL_UART_IRQHandler+0x592>
 8003c1c:	23a0      	movs	r3, #160	@ 0xa0
 8003c1e:	18fb      	adds	r3, r7, r3
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	2210      	movs	r2, #16
 8003c24:	4013      	ands	r3, r2
 8003c26:	d100      	bne.n	8003c2a <HAL_UART_IRQHandler+0x2f2>
 8003c28:	e14f      	b.n	8003eca <HAL_UART_IRQHandler+0x592>
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	2210      	movs	r2, #16
 8003c30:	621a      	str	r2, [r3, #32]
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	689b      	ldr	r3, [r3, #8]
 8003c38:	2240      	movs	r2, #64	@ 0x40
 8003c3a:	4013      	ands	r3, r2
 8003c3c:	2b40      	cmp	r3, #64	@ 0x40
 8003c3e:	d000      	beq.n	8003c42 <HAL_UART_IRQHandler+0x30a>
 8003c40:	e0c3      	b.n	8003dca <HAL_UART_IRQHandler+0x492>
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	2280      	movs	r2, #128	@ 0x80
 8003c46:	589b      	ldr	r3, [r3, r2]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	685a      	ldr	r2, [r3, #4]
 8003c4c:	217e      	movs	r1, #126	@ 0x7e
 8003c4e:	187b      	adds	r3, r7, r1
 8003c50:	801a      	strh	r2, [r3, #0]
 8003c52:	187b      	adds	r3, r7, r1
 8003c54:	881b      	ldrh	r3, [r3, #0]
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	d100      	bne.n	8003c5c <HAL_UART_IRQHandler+0x324>
 8003c5a:	e097      	b.n	8003d8c <HAL_UART_IRQHandler+0x454>
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	225c      	movs	r2, #92	@ 0x5c
 8003c60:	5a9b      	ldrh	r3, [r3, r2]
 8003c62:	187a      	adds	r2, r7, r1
 8003c64:	8812      	ldrh	r2, [r2, #0]
 8003c66:	429a      	cmp	r2, r3
 8003c68:	d300      	bcc.n	8003c6c <HAL_UART_IRQHandler+0x334>
 8003c6a:	e08f      	b.n	8003d8c <HAL_UART_IRQHandler+0x454>
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	187a      	adds	r2, r7, r1
 8003c70:	215e      	movs	r1, #94	@ 0x5e
 8003c72:	8812      	ldrh	r2, [r2, #0]
 8003c74:	525a      	strh	r2, [r3, r1]
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	2280      	movs	r2, #128	@ 0x80
 8003c7a:	589b      	ldr	r3, [r3, r2]
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	2220      	movs	r2, #32
 8003c82:	4013      	ands	r3, r2
 8003c84:	d170      	bne.n	8003d68 <HAL_UART_IRQHandler+0x430>
 8003c86:	f3ef 8310 	mrs	r3, PRIMASK
 8003c8a:	633b      	str	r3, [r7, #48]	@ 0x30
 8003c8c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003c8e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8003c90:	2301      	movs	r3, #1
 8003c92:	637b      	str	r3, [r7, #52]	@ 0x34
 8003c94:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003c96:	f383 8810 	msr	PRIMASK, r3
 8003c9a:	46c0      	nop			@ (mov r8, r8)
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	681a      	ldr	r2, [r3, #0]
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	49c4      	ldr	r1, [pc, #784]	@ (8003fb8 <HAL_UART_IRQHandler+0x680>)
 8003ca8:	400a      	ands	r2, r1
 8003caa:	601a      	str	r2, [r3, #0]
 8003cac:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8003cae:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003cb0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003cb2:	f383 8810 	msr	PRIMASK, r3
 8003cb6:	46c0      	nop			@ (mov r8, r8)
 8003cb8:	f3ef 8310 	mrs	r3, PRIMASK
 8003cbc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003cbe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003cc0:	677b      	str	r3, [r7, #116]	@ 0x74
 8003cc2:	2301      	movs	r3, #1
 8003cc4:	643b      	str	r3, [r7, #64]	@ 0x40
 8003cc6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003cc8:	f383 8810 	msr	PRIMASK, r3
 8003ccc:	46c0      	nop			@ (mov r8, r8)
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	689a      	ldr	r2, [r3, #8]
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	2101      	movs	r1, #1
 8003cda:	438a      	bics	r2, r1
 8003cdc:	609a      	str	r2, [r3, #8]
 8003cde:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003ce0:	647b      	str	r3, [r7, #68]	@ 0x44
 8003ce2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8003ce4:	f383 8810 	msr	PRIMASK, r3
 8003ce8:	46c0      	nop			@ (mov r8, r8)
 8003cea:	f3ef 8310 	mrs	r3, PRIMASK
 8003cee:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003cf0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003cf2:	673b      	str	r3, [r7, #112]	@ 0x70
 8003cf4:	2301      	movs	r3, #1
 8003cf6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003cf8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003cfa:	f383 8810 	msr	PRIMASK, r3
 8003cfe:	46c0      	nop			@ (mov r8, r8)
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	689a      	ldr	r2, [r3, #8]
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	2140      	movs	r1, #64	@ 0x40
 8003d0c:	438a      	bics	r2, r1
 8003d0e:	609a      	str	r2, [r3, #8]
 8003d10:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003d12:	653b      	str	r3, [r7, #80]	@ 0x50
 8003d14:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003d16:	f383 8810 	msr	PRIMASK, r3
 8003d1a:	46c0      	nop			@ (mov r8, r8)
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	228c      	movs	r2, #140	@ 0x8c
 8003d20:	2120      	movs	r1, #32
 8003d22:	5099      	str	r1, [r3, r2]
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	2200      	movs	r2, #0
 8003d28:	66da      	str	r2, [r3, #108]	@ 0x6c
 8003d2a:	f3ef 8310 	mrs	r3, PRIMASK
 8003d2e:	657b      	str	r3, [r7, #84]	@ 0x54
 8003d30:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003d32:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003d34:	2301      	movs	r3, #1
 8003d36:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003d38:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8003d3a:	f383 8810 	msr	PRIMASK, r3
 8003d3e:	46c0      	nop			@ (mov r8, r8)
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	681a      	ldr	r2, [r3, #0]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	2110      	movs	r1, #16
 8003d4c:	438a      	bics	r2, r1
 8003d4e:	601a      	str	r2, [r3, #0]
 8003d50:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003d52:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003d54:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8003d56:	f383 8810 	msr	PRIMASK, r3
 8003d5a:	46c0      	nop			@ (mov r8, r8)
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	2280      	movs	r2, #128	@ 0x80
 8003d60:	589b      	ldr	r3, [r3, r2]
 8003d62:	0018      	movs	r0, r3
 8003d64:	f7fe f9e2 	bl	800212c <HAL_DMA_Abort>
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	2202      	movs	r2, #2
 8003d6c:	671a      	str	r2, [r3, #112]	@ 0x70
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	225c      	movs	r2, #92	@ 0x5c
 8003d72:	5a9a      	ldrh	r2, [r3, r2]
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	215e      	movs	r1, #94	@ 0x5e
 8003d78:	5a5b      	ldrh	r3, [r3, r1]
 8003d7a:	b29b      	uxth	r3, r3
 8003d7c:	1ad3      	subs	r3, r2, r3
 8003d7e:	b29a      	uxth	r2, r3
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	0011      	movs	r1, r2
 8003d84:	0018      	movs	r0, r3
 8003d86:	f7fc fe5f 	bl	8000a48 <HAL_UARTEx_RxEventCallback>
 8003d8a:	e10c      	b.n	8003fa6 <HAL_UART_IRQHandler+0x66e>
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	225c      	movs	r2, #92	@ 0x5c
 8003d90:	5a9b      	ldrh	r3, [r3, r2]
 8003d92:	227e      	movs	r2, #126	@ 0x7e
 8003d94:	18ba      	adds	r2, r7, r2
 8003d96:	8812      	ldrh	r2, [r2, #0]
 8003d98:	429a      	cmp	r2, r3
 8003d9a:	d000      	beq.n	8003d9e <HAL_UART_IRQHandler+0x466>
 8003d9c:	e103      	b.n	8003fa6 <HAL_UART_IRQHandler+0x66e>
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	2280      	movs	r2, #128	@ 0x80
 8003da2:	589b      	ldr	r3, [r3, r2]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	2220      	movs	r2, #32
 8003daa:	4013      	ands	r3, r2
 8003dac:	2b20      	cmp	r3, #32
 8003dae:	d000      	beq.n	8003db2 <HAL_UART_IRQHandler+0x47a>
 8003db0:	e0f9      	b.n	8003fa6 <HAL_UART_IRQHandler+0x66e>
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	2202      	movs	r2, #2
 8003db6:	671a      	str	r2, [r3, #112]	@ 0x70
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	225c      	movs	r2, #92	@ 0x5c
 8003dbc:	5a9a      	ldrh	r2, [r3, r2]
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	0011      	movs	r1, r2
 8003dc2:	0018      	movs	r0, r3
 8003dc4:	f7fc fe40 	bl	8000a48 <HAL_UARTEx_RxEventCallback>
 8003dc8:	e0ed      	b.n	8003fa6 <HAL_UART_IRQHandler+0x66e>
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	225c      	movs	r2, #92	@ 0x5c
 8003dce:	5a99      	ldrh	r1, [r3, r2]
 8003dd0:	687b      	ldr	r3, [r7, #4]
 8003dd2:	225e      	movs	r2, #94	@ 0x5e
 8003dd4:	5a9b      	ldrh	r3, [r3, r2]
 8003dd6:	b29a      	uxth	r2, r3
 8003dd8:	208e      	movs	r0, #142	@ 0x8e
 8003dda:	183b      	adds	r3, r7, r0
 8003ddc:	1a8a      	subs	r2, r1, r2
 8003dde:	801a      	strh	r2, [r3, #0]
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	225e      	movs	r2, #94	@ 0x5e
 8003de4:	5a9b      	ldrh	r3, [r3, r2]
 8003de6:	b29b      	uxth	r3, r3
 8003de8:	2b00      	cmp	r3, #0
 8003dea:	d100      	bne.n	8003dee <HAL_UART_IRQHandler+0x4b6>
 8003dec:	e0dd      	b.n	8003faa <HAL_UART_IRQHandler+0x672>
 8003dee:	183b      	adds	r3, r7, r0
 8003df0:	881b      	ldrh	r3, [r3, #0]
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d100      	bne.n	8003df8 <HAL_UART_IRQHandler+0x4c0>
 8003df6:	e0d8      	b.n	8003faa <HAL_UART_IRQHandler+0x672>
 8003df8:	f3ef 8310 	mrs	r3, PRIMASK
 8003dfc:	60fb      	str	r3, [r7, #12]
 8003dfe:	68fb      	ldr	r3, [r7, #12]
 8003e00:	2488      	movs	r4, #136	@ 0x88
 8003e02:	193a      	adds	r2, r7, r4
 8003e04:	6013      	str	r3, [r2, #0]
 8003e06:	2301      	movs	r3, #1
 8003e08:	613b      	str	r3, [r7, #16]
 8003e0a:	693b      	ldr	r3, [r7, #16]
 8003e0c:	f383 8810 	msr	PRIMASK, r3
 8003e10:	46c0      	nop			@ (mov r8, r8)
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	681a      	ldr	r2, [r3, #0]
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	4967      	ldr	r1, [pc, #412]	@ (8003fbc <HAL_UART_IRQHandler+0x684>)
 8003e1e:	400a      	ands	r2, r1
 8003e20:	601a      	str	r2, [r3, #0]
 8003e22:	193b      	adds	r3, r7, r4
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	617b      	str	r3, [r7, #20]
 8003e28:	697b      	ldr	r3, [r7, #20]
 8003e2a:	f383 8810 	msr	PRIMASK, r3
 8003e2e:	46c0      	nop			@ (mov r8, r8)
 8003e30:	f3ef 8310 	mrs	r3, PRIMASK
 8003e34:	61bb      	str	r3, [r7, #24]
 8003e36:	69bb      	ldr	r3, [r7, #24]
 8003e38:	2484      	movs	r4, #132	@ 0x84
 8003e3a:	193a      	adds	r2, r7, r4
 8003e3c:	6013      	str	r3, [r2, #0]
 8003e3e:	2301      	movs	r3, #1
 8003e40:	61fb      	str	r3, [r7, #28]
 8003e42:	69fb      	ldr	r3, [r7, #28]
 8003e44:	f383 8810 	msr	PRIMASK, r3
 8003e48:	46c0      	nop			@ (mov r8, r8)
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	689a      	ldr	r2, [r3, #8]
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	495a      	ldr	r1, [pc, #360]	@ (8003fc0 <HAL_UART_IRQHandler+0x688>)
 8003e56:	400a      	ands	r2, r1
 8003e58:	609a      	str	r2, [r3, #8]
 8003e5a:	193b      	adds	r3, r7, r4
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	623b      	str	r3, [r7, #32]
 8003e60:	6a3b      	ldr	r3, [r7, #32]
 8003e62:	f383 8810 	msr	PRIMASK, r3
 8003e66:	46c0      	nop			@ (mov r8, r8)
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	228c      	movs	r2, #140	@ 0x8c
 8003e6c:	2120      	movs	r1, #32
 8003e6e:	5099      	str	r1, [r3, r2]
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	2200      	movs	r2, #0
 8003e74:	66da      	str	r2, [r3, #108]	@ 0x6c
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	2200      	movs	r2, #0
 8003e7a:	675a      	str	r2, [r3, #116]	@ 0x74
 8003e7c:	f3ef 8310 	mrs	r3, PRIMASK
 8003e80:	627b      	str	r3, [r7, #36]	@ 0x24
 8003e82:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e84:	2480      	movs	r4, #128	@ 0x80
 8003e86:	193a      	adds	r2, r7, r4
 8003e88:	6013      	str	r3, [r2, #0]
 8003e8a:	2301      	movs	r3, #1
 8003e8c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003e8e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003e90:	f383 8810 	msr	PRIMASK, r3
 8003e94:	46c0      	nop			@ (mov r8, r8)
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	681a      	ldr	r2, [r3, #0]
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	2110      	movs	r1, #16
 8003ea2:	438a      	bics	r2, r1
 8003ea4:	601a      	str	r2, [r3, #0]
 8003ea6:	193b      	adds	r3, r7, r4
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003eac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003eae:	f383 8810 	msr	PRIMASK, r3
 8003eb2:	46c0      	nop			@ (mov r8, r8)
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	2202      	movs	r2, #2
 8003eb8:	671a      	str	r2, [r3, #112]	@ 0x70
 8003eba:	183b      	adds	r3, r7, r0
 8003ebc:	881a      	ldrh	r2, [r3, #0]
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	0011      	movs	r1, r2
 8003ec2:	0018      	movs	r0, r3
 8003ec4:	f7fc fdc0 	bl	8000a48 <HAL_UARTEx_RxEventCallback>
 8003ec8:	e06f      	b.n	8003faa <HAL_UART_IRQHandler+0x672>
 8003eca:	23a4      	movs	r3, #164	@ 0xa4
 8003ecc:	18fb      	adds	r3, r7, r3
 8003ece:	681a      	ldr	r2, [r3, #0]
 8003ed0:	2380      	movs	r3, #128	@ 0x80
 8003ed2:	035b      	lsls	r3, r3, #13
 8003ed4:	4013      	ands	r3, r2
 8003ed6:	d010      	beq.n	8003efa <HAL_UART_IRQHandler+0x5c2>
 8003ed8:	239c      	movs	r3, #156	@ 0x9c
 8003eda:	18fb      	adds	r3, r7, r3
 8003edc:	681a      	ldr	r2, [r3, #0]
 8003ede:	2380      	movs	r3, #128	@ 0x80
 8003ee0:	03db      	lsls	r3, r3, #15
 8003ee2:	4013      	ands	r3, r2
 8003ee4:	d009      	beq.n	8003efa <HAL_UART_IRQHandler+0x5c2>
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	2280      	movs	r2, #128	@ 0x80
 8003eec:	0352      	lsls	r2, r2, #13
 8003eee:	621a      	str	r2, [r3, #32]
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	0018      	movs	r0, r3
 8003ef4:	f000 ff24 	bl	8004d40 <HAL_UARTEx_WakeupCallback>
 8003ef8:	e05a      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003efa:	23a4      	movs	r3, #164	@ 0xa4
 8003efc:	18fb      	adds	r3, r7, r3
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	2280      	movs	r2, #128	@ 0x80
 8003f02:	4013      	ands	r3, r2
 8003f04:	d016      	beq.n	8003f34 <HAL_UART_IRQHandler+0x5fc>
 8003f06:	23a0      	movs	r3, #160	@ 0xa0
 8003f08:	18fb      	adds	r3, r7, r3
 8003f0a:	681b      	ldr	r3, [r3, #0]
 8003f0c:	2280      	movs	r2, #128	@ 0x80
 8003f0e:	4013      	ands	r3, r2
 8003f10:	d106      	bne.n	8003f20 <HAL_UART_IRQHandler+0x5e8>
 8003f12:	239c      	movs	r3, #156	@ 0x9c
 8003f14:	18fb      	adds	r3, r7, r3
 8003f16:	681a      	ldr	r2, [r3, #0]
 8003f18:	2380      	movs	r3, #128	@ 0x80
 8003f1a:	041b      	lsls	r3, r3, #16
 8003f1c:	4013      	ands	r3, r2
 8003f1e:	d009      	beq.n	8003f34 <HAL_UART_IRQHandler+0x5fc>
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d042      	beq.n	8003fae <HAL_UART_IRQHandler+0x676>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003f2c:	687a      	ldr	r2, [r7, #4]
 8003f2e:	0010      	movs	r0, r2
 8003f30:	4798      	blx	r3
 8003f32:	e03c      	b.n	8003fae <HAL_UART_IRQHandler+0x676>
 8003f34:	23a4      	movs	r3, #164	@ 0xa4
 8003f36:	18fb      	adds	r3, r7, r3
 8003f38:	681b      	ldr	r3, [r3, #0]
 8003f3a:	2240      	movs	r2, #64	@ 0x40
 8003f3c:	4013      	ands	r3, r2
 8003f3e:	d00a      	beq.n	8003f56 <HAL_UART_IRQHandler+0x61e>
 8003f40:	23a0      	movs	r3, #160	@ 0xa0
 8003f42:	18fb      	adds	r3, r7, r3
 8003f44:	681b      	ldr	r3, [r3, #0]
 8003f46:	2240      	movs	r2, #64	@ 0x40
 8003f48:	4013      	ands	r3, r2
 8003f4a:	d004      	beq.n	8003f56 <HAL_UART_IRQHandler+0x61e>
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	0018      	movs	r0, r3
 8003f50:	f000 fe57 	bl	8004c02 <UART_EndTransmit_IT>
 8003f54:	e02c      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003f56:	23a4      	movs	r3, #164	@ 0xa4
 8003f58:	18fb      	adds	r3, r7, r3
 8003f5a:	681a      	ldr	r2, [r3, #0]
 8003f5c:	2380      	movs	r3, #128	@ 0x80
 8003f5e:	041b      	lsls	r3, r3, #16
 8003f60:	4013      	ands	r3, r2
 8003f62:	d00b      	beq.n	8003f7c <HAL_UART_IRQHandler+0x644>
 8003f64:	23a0      	movs	r3, #160	@ 0xa0
 8003f66:	18fb      	adds	r3, r7, r3
 8003f68:	681a      	ldr	r2, [r3, #0]
 8003f6a:	2380      	movs	r3, #128	@ 0x80
 8003f6c:	05db      	lsls	r3, r3, #23
 8003f6e:	4013      	ands	r3, r2
 8003f70:	d004      	beq.n	8003f7c <HAL_UART_IRQHandler+0x644>
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	0018      	movs	r0, r3
 8003f76:	f000 fef3 	bl	8004d60 <HAL_UARTEx_TxFifoEmptyCallback>
 8003f7a:	e019      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003f7c:	23a4      	movs	r3, #164	@ 0xa4
 8003f7e:	18fb      	adds	r3, r7, r3
 8003f80:	681a      	ldr	r2, [r3, #0]
 8003f82:	2380      	movs	r3, #128	@ 0x80
 8003f84:	045b      	lsls	r3, r3, #17
 8003f86:	4013      	ands	r3, r2
 8003f88:	d012      	beq.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003f8a:	23a0      	movs	r3, #160	@ 0xa0
 8003f8c:	18fb      	adds	r3, r7, r3
 8003f8e:	681b      	ldr	r3, [r3, #0]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	da0d      	bge.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	0018      	movs	r0, r3
 8003f98:	f000 feda 	bl	8004d50 <HAL_UARTEx_RxFifoFullCallback>
 8003f9c:	e008      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003f9e:	46c0      	nop			@ (mov r8, r8)
 8003fa0:	e006      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003fa2:	46c0      	nop			@ (mov r8, r8)
 8003fa4:	e004      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003fa6:	46c0      	nop			@ (mov r8, r8)
 8003fa8:	e002      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003faa:	46c0      	nop			@ (mov r8, r8)
 8003fac:	e000      	b.n	8003fb0 <HAL_UART_IRQHandler+0x678>
 8003fae:	46c0      	nop			@ (mov r8, r8)
 8003fb0:	46bd      	mov	sp, r7
 8003fb2:	b02a      	add	sp, #168	@ 0xa8
 8003fb4:	bdb0      	pop	{r4, r5, r7, pc}
 8003fb6:	46c0      	nop			@ (mov r8, r8)
 8003fb8:	fffffeff 	.word	0xfffffeff
 8003fbc:	fffffedf 	.word	0xfffffedf
 8003fc0:	effffffe 	.word	0xeffffffe

08003fc4 <HAL_UART_TxHalfCpltCallback>:
 8003fc4:	b580      	push	{r7, lr}
 8003fc6:	b082      	sub	sp, #8
 8003fc8:	af00      	add	r7, sp, #0
 8003fca:	6078      	str	r0, [r7, #4]
 8003fcc:	46c0      	nop			@ (mov r8, r8)
 8003fce:	46bd      	mov	sp, r7
 8003fd0:	b002      	add	sp, #8
 8003fd2:	bd80      	pop	{r7, pc}

08003fd4 <HAL_UART_RxCpltCallback>:
 8003fd4:	b580      	push	{r7, lr}
 8003fd6:	b082      	sub	sp, #8
 8003fd8:	af00      	add	r7, sp, #0
 8003fda:	6078      	str	r0, [r7, #4]
 8003fdc:	46c0      	nop			@ (mov r8, r8)
 8003fde:	46bd      	mov	sp, r7
 8003fe0:	b002      	add	sp, #8
 8003fe2:	bd80      	pop	{r7, pc}

08003fe4 <HAL_UART_RxHalfCpltCallback>:
 8003fe4:	b580      	push	{r7, lr}
 8003fe6:	b082      	sub	sp, #8
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
 8003fec:	46c0      	nop			@ (mov r8, r8)
 8003fee:	46bd      	mov	sp, r7
 8003ff0:	b002      	add	sp, #8
 8003ff2:	bd80      	pop	{r7, pc}

08003ff4 <UART_SetConfig>:
 8003ff4:	b580      	push	{r7, lr}
 8003ff6:	b088      	sub	sp, #32
 8003ff8:	af00      	add	r7, sp, #0
 8003ffa:	6078      	str	r0, [r7, #4]
 8003ffc:	231e      	movs	r3, #30
 8003ffe:	18fb      	adds	r3, r7, r3
 8004000:	2200      	movs	r2, #0
 8004002:	701a      	strb	r2, [r3, #0]
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	689a      	ldr	r2, [r3, #8]
 8004008:	687b      	ldr	r3, [r7, #4]
 800400a:	691b      	ldr	r3, [r3, #16]
 800400c:	431a      	orrs	r2, r3
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	695b      	ldr	r3, [r3, #20]
 8004012:	431a      	orrs	r2, r3
 8004014:	687b      	ldr	r3, [r7, #4]
 8004016:	69db      	ldr	r3, [r3, #28]
 8004018:	4313      	orrs	r3, r2
 800401a:	617b      	str	r3, [r7, #20]
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	681b      	ldr	r3, [r3, #0]
 8004022:	4aab      	ldr	r2, [pc, #684]	@ (80042d0 <UART_SetConfig+0x2dc>)
 8004024:	4013      	ands	r3, r2
 8004026:	0019      	movs	r1, r3
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	697a      	ldr	r2, [r7, #20]
 800402e:	430a      	orrs	r2, r1
 8004030:	601a      	str	r2, [r3, #0]
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	685b      	ldr	r3, [r3, #4]
 8004038:	4aa6      	ldr	r2, [pc, #664]	@ (80042d4 <UART_SetConfig+0x2e0>)
 800403a:	4013      	ands	r3, r2
 800403c:	0019      	movs	r1, r3
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	68da      	ldr	r2, [r3, #12]
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	430a      	orrs	r2, r1
 8004048:	605a      	str	r2, [r3, #4]
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	699b      	ldr	r3, [r3, #24]
 800404e:	617b      	str	r3, [r7, #20]
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	6a1b      	ldr	r3, [r3, #32]
 8004054:	697a      	ldr	r2, [r7, #20]
 8004056:	4313      	orrs	r3, r2
 8004058:	617b      	str	r3, [r7, #20]
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	689b      	ldr	r3, [r3, #8]
 8004060:	4a9d      	ldr	r2, [pc, #628]	@ (80042d8 <UART_SetConfig+0x2e4>)
 8004062:	4013      	ands	r3, r2
 8004064:	0019      	movs	r1, r3
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	697a      	ldr	r2, [r7, #20]
 800406c:	430a      	orrs	r2, r1
 800406e:	609a      	str	r2, [r3, #8]
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004076:	220f      	movs	r2, #15
 8004078:	4393      	bics	r3, r2
 800407a:	0019      	movs	r1, r3
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	430a      	orrs	r2, r1
 8004086:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004088:	687b      	ldr	r3, [r7, #4]
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	4a93      	ldr	r2, [pc, #588]	@ (80042dc <UART_SetConfig+0x2e8>)
 800408e:	4293      	cmp	r3, r2
 8004090:	d127      	bne.n	80040e2 <UART_SetConfig+0xee>
 8004092:	4b93      	ldr	r3, [pc, #588]	@ (80042e0 <UART_SetConfig+0x2ec>)
 8004094:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004096:	2203      	movs	r2, #3
 8004098:	4013      	ands	r3, r2
 800409a:	2b03      	cmp	r3, #3
 800409c:	d017      	beq.n	80040ce <UART_SetConfig+0xda>
 800409e:	d81b      	bhi.n	80040d8 <UART_SetConfig+0xe4>
 80040a0:	2b02      	cmp	r3, #2
 80040a2:	d00a      	beq.n	80040ba <UART_SetConfig+0xc6>
 80040a4:	d818      	bhi.n	80040d8 <UART_SetConfig+0xe4>
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	d002      	beq.n	80040b0 <UART_SetConfig+0xbc>
 80040aa:	2b01      	cmp	r3, #1
 80040ac:	d00a      	beq.n	80040c4 <UART_SetConfig+0xd0>
 80040ae:	e013      	b.n	80040d8 <UART_SetConfig+0xe4>
 80040b0:	231f      	movs	r3, #31
 80040b2:	18fb      	adds	r3, r7, r3
 80040b4:	2200      	movs	r2, #0
 80040b6:	701a      	strb	r2, [r3, #0]
 80040b8:	e021      	b.n	80040fe <UART_SetConfig+0x10a>
 80040ba:	231f      	movs	r3, #31
 80040bc:	18fb      	adds	r3, r7, r3
 80040be:	2202      	movs	r2, #2
 80040c0:	701a      	strb	r2, [r3, #0]
 80040c2:	e01c      	b.n	80040fe <UART_SetConfig+0x10a>
 80040c4:	231f      	movs	r3, #31
 80040c6:	18fb      	adds	r3, r7, r3
 80040c8:	2204      	movs	r2, #4
 80040ca:	701a      	strb	r2, [r3, #0]
 80040cc:	e017      	b.n	80040fe <UART_SetConfig+0x10a>
 80040ce:	231f      	movs	r3, #31
 80040d0:	18fb      	adds	r3, r7, r3
 80040d2:	2208      	movs	r2, #8
 80040d4:	701a      	strb	r2, [r3, #0]
 80040d6:	e012      	b.n	80040fe <UART_SetConfig+0x10a>
 80040d8:	231f      	movs	r3, #31
 80040da:	18fb      	adds	r3, r7, r3
 80040dc:	2210      	movs	r2, #16
 80040de:	701a      	strb	r2, [r3, #0]
 80040e0:	e00d      	b.n	80040fe <UART_SetConfig+0x10a>
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	681b      	ldr	r3, [r3, #0]
 80040e6:	4a7f      	ldr	r2, [pc, #508]	@ (80042e4 <UART_SetConfig+0x2f0>)
 80040e8:	4293      	cmp	r3, r2
 80040ea:	d104      	bne.n	80040f6 <UART_SetConfig+0x102>
 80040ec:	231f      	movs	r3, #31
 80040ee:	18fb      	adds	r3, r7, r3
 80040f0:	2200      	movs	r2, #0
 80040f2:	701a      	strb	r2, [r3, #0]
 80040f4:	e003      	b.n	80040fe <UART_SetConfig+0x10a>
 80040f6:	231f      	movs	r3, #31
 80040f8:	18fb      	adds	r3, r7, r3
 80040fa:	2210      	movs	r2, #16
 80040fc:	701a      	strb	r2, [r3, #0]
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	69da      	ldr	r2, [r3, #28]
 8004102:	2380      	movs	r3, #128	@ 0x80
 8004104:	021b      	lsls	r3, r3, #8
 8004106:	429a      	cmp	r2, r3
 8004108:	d000      	beq.n	800410c <UART_SetConfig+0x118>
 800410a:	e06f      	b.n	80041ec <UART_SetConfig+0x1f8>
 800410c:	231f      	movs	r3, #31
 800410e:	18fb      	adds	r3, r7, r3
 8004110:	781b      	ldrb	r3, [r3, #0]
 8004112:	2b08      	cmp	r3, #8
 8004114:	d01f      	beq.n	8004156 <UART_SetConfig+0x162>
 8004116:	dc22      	bgt.n	800415e <UART_SetConfig+0x16a>
 8004118:	2b04      	cmp	r3, #4
 800411a:	d017      	beq.n	800414c <UART_SetConfig+0x158>
 800411c:	dc1f      	bgt.n	800415e <UART_SetConfig+0x16a>
 800411e:	2b00      	cmp	r3, #0
 8004120:	d002      	beq.n	8004128 <UART_SetConfig+0x134>
 8004122:	2b02      	cmp	r3, #2
 8004124:	d005      	beq.n	8004132 <UART_SetConfig+0x13e>
 8004126:	e01a      	b.n	800415e <UART_SetConfig+0x16a>
 8004128:	f7ff f860 	bl	80031ec <HAL_RCC_GetPCLK1Freq>
 800412c:	0003      	movs	r3, r0
 800412e:	61bb      	str	r3, [r7, #24]
 8004130:	e01c      	b.n	800416c <UART_SetConfig+0x178>
 8004132:	4b6b      	ldr	r3, [pc, #428]	@ (80042e0 <UART_SetConfig+0x2ec>)
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	095b      	lsrs	r3, r3, #5
 8004138:	2207      	movs	r2, #7
 800413a:	4013      	ands	r3, r2
 800413c:	3301      	adds	r3, #1
 800413e:	0019      	movs	r1, r3
 8004140:	4869      	ldr	r0, [pc, #420]	@ (80042e8 <UART_SetConfig+0x2f4>)
 8004142:	f7fb ffe1 	bl	8000108 <__udivsi3>
 8004146:	0003      	movs	r3, r0
 8004148:	61bb      	str	r3, [r7, #24]
 800414a:	e00f      	b.n	800416c <UART_SetConfig+0x178>
 800414c:	f7fe ffd8 	bl	8003100 <HAL_RCC_GetSysClockFreq>
 8004150:	0003      	movs	r3, r0
 8004152:	61bb      	str	r3, [r7, #24]
 8004154:	e00a      	b.n	800416c <UART_SetConfig+0x178>
 8004156:	2380      	movs	r3, #128	@ 0x80
 8004158:	021b      	lsls	r3, r3, #8
 800415a:	61bb      	str	r3, [r7, #24]
 800415c:	e006      	b.n	800416c <UART_SetConfig+0x178>
 800415e:	2300      	movs	r3, #0
 8004160:	61bb      	str	r3, [r7, #24]
 8004162:	231e      	movs	r3, #30
 8004164:	18fb      	adds	r3, r7, r3
 8004166:	2201      	movs	r2, #1
 8004168:	701a      	strb	r2, [r3, #0]
 800416a:	46c0      	nop			@ (mov r8, r8)
 800416c:	69bb      	ldr	r3, [r7, #24]
 800416e:	2b00      	cmp	r3, #0
 8004170:	d100      	bne.n	8004174 <UART_SetConfig+0x180>
 8004172:	e097      	b.n	80042a4 <UART_SetConfig+0x2b0>
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004178:	4b5c      	ldr	r3, [pc, #368]	@ (80042ec <UART_SetConfig+0x2f8>)
 800417a:	0052      	lsls	r2, r2, #1
 800417c:	5ad3      	ldrh	r3, [r2, r3]
 800417e:	0019      	movs	r1, r3
 8004180:	69b8      	ldr	r0, [r7, #24]
 8004182:	f7fb ffc1 	bl	8000108 <__udivsi3>
 8004186:	0003      	movs	r3, r0
 8004188:	005a      	lsls	r2, r3, #1
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	685b      	ldr	r3, [r3, #4]
 800418e:	085b      	lsrs	r3, r3, #1
 8004190:	18d2      	adds	r2, r2, r3
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	685b      	ldr	r3, [r3, #4]
 8004196:	0019      	movs	r1, r3
 8004198:	0010      	movs	r0, r2
 800419a:	f7fb ffb5 	bl	8000108 <__udivsi3>
 800419e:	0003      	movs	r3, r0
 80041a0:	613b      	str	r3, [r7, #16]
 80041a2:	693b      	ldr	r3, [r7, #16]
 80041a4:	2b0f      	cmp	r3, #15
 80041a6:	d91c      	bls.n	80041e2 <UART_SetConfig+0x1ee>
 80041a8:	693a      	ldr	r2, [r7, #16]
 80041aa:	2380      	movs	r3, #128	@ 0x80
 80041ac:	025b      	lsls	r3, r3, #9
 80041ae:	429a      	cmp	r2, r3
 80041b0:	d217      	bcs.n	80041e2 <UART_SetConfig+0x1ee>
 80041b2:	693b      	ldr	r3, [r7, #16]
 80041b4:	b29a      	uxth	r2, r3
 80041b6:	200e      	movs	r0, #14
 80041b8:	183b      	adds	r3, r7, r0
 80041ba:	210f      	movs	r1, #15
 80041bc:	438a      	bics	r2, r1
 80041be:	801a      	strh	r2, [r3, #0]
 80041c0:	693b      	ldr	r3, [r7, #16]
 80041c2:	085b      	lsrs	r3, r3, #1
 80041c4:	b29b      	uxth	r3, r3
 80041c6:	2207      	movs	r2, #7
 80041c8:	4013      	ands	r3, r2
 80041ca:	b299      	uxth	r1, r3
 80041cc:	183b      	adds	r3, r7, r0
 80041ce:	183a      	adds	r2, r7, r0
 80041d0:	8812      	ldrh	r2, [r2, #0]
 80041d2:	430a      	orrs	r2, r1
 80041d4:	801a      	strh	r2, [r3, #0]
 80041d6:	687b      	ldr	r3, [r7, #4]
 80041d8:	681b      	ldr	r3, [r3, #0]
 80041da:	183a      	adds	r2, r7, r0
 80041dc:	8812      	ldrh	r2, [r2, #0]
 80041de:	60da      	str	r2, [r3, #12]
 80041e0:	e060      	b.n	80042a4 <UART_SetConfig+0x2b0>
 80041e2:	231e      	movs	r3, #30
 80041e4:	18fb      	adds	r3, r7, r3
 80041e6:	2201      	movs	r2, #1
 80041e8:	701a      	strb	r2, [r3, #0]
 80041ea:	e05b      	b.n	80042a4 <UART_SetConfig+0x2b0>
 80041ec:	231f      	movs	r3, #31
 80041ee:	18fb      	adds	r3, r7, r3
 80041f0:	781b      	ldrb	r3, [r3, #0]
 80041f2:	2b08      	cmp	r3, #8
 80041f4:	d01f      	beq.n	8004236 <UART_SetConfig+0x242>
 80041f6:	dc22      	bgt.n	800423e <UART_SetConfig+0x24a>
 80041f8:	2b04      	cmp	r3, #4
 80041fa:	d017      	beq.n	800422c <UART_SetConfig+0x238>
 80041fc:	dc1f      	bgt.n	800423e <UART_SetConfig+0x24a>
 80041fe:	2b00      	cmp	r3, #0
 8004200:	d002      	beq.n	8004208 <UART_SetConfig+0x214>
 8004202:	2b02      	cmp	r3, #2
 8004204:	d005      	beq.n	8004212 <UART_SetConfig+0x21e>
 8004206:	e01a      	b.n	800423e <UART_SetConfig+0x24a>
 8004208:	f7fe fff0 	bl	80031ec <HAL_RCC_GetPCLK1Freq>
 800420c:	0003      	movs	r3, r0
 800420e:	61bb      	str	r3, [r7, #24]
 8004210:	e01c      	b.n	800424c <UART_SetConfig+0x258>
 8004212:	4b33      	ldr	r3, [pc, #204]	@ (80042e0 <UART_SetConfig+0x2ec>)
 8004214:	681b      	ldr	r3, [r3, #0]
 8004216:	095b      	lsrs	r3, r3, #5
 8004218:	2207      	movs	r2, #7
 800421a:	4013      	ands	r3, r2
 800421c:	3301      	adds	r3, #1
 800421e:	0019      	movs	r1, r3
 8004220:	4831      	ldr	r0, [pc, #196]	@ (80042e8 <UART_SetConfig+0x2f4>)
 8004222:	f7fb ff71 	bl	8000108 <__udivsi3>
 8004226:	0003      	movs	r3, r0
 8004228:	61bb      	str	r3, [r7, #24]
 800422a:	e00f      	b.n	800424c <UART_SetConfig+0x258>
 800422c:	f7fe ff68 	bl	8003100 <HAL_RCC_GetSysClockFreq>
 8004230:	0003      	movs	r3, r0
 8004232:	61bb      	str	r3, [r7, #24]
 8004234:	e00a      	b.n	800424c <UART_SetConfig+0x258>
 8004236:	2380      	movs	r3, #128	@ 0x80
 8004238:	021b      	lsls	r3, r3, #8
 800423a:	61bb      	str	r3, [r7, #24]
 800423c:	e006      	b.n	800424c <UART_SetConfig+0x258>
 800423e:	2300      	movs	r3, #0
 8004240:	61bb      	str	r3, [r7, #24]
 8004242:	231e      	movs	r3, #30
 8004244:	18fb      	adds	r3, r7, r3
 8004246:	2201      	movs	r2, #1
 8004248:	701a      	strb	r2, [r3, #0]
 800424a:	46c0      	nop			@ (mov r8, r8)
 800424c:	69bb      	ldr	r3, [r7, #24]
 800424e:	2b00      	cmp	r3, #0
 8004250:	d028      	beq.n	80042a4 <UART_SetConfig+0x2b0>
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004256:	4b25      	ldr	r3, [pc, #148]	@ (80042ec <UART_SetConfig+0x2f8>)
 8004258:	0052      	lsls	r2, r2, #1
 800425a:	5ad3      	ldrh	r3, [r2, r3]
 800425c:	0019      	movs	r1, r3
 800425e:	69b8      	ldr	r0, [r7, #24]
 8004260:	f7fb ff52 	bl	8000108 <__udivsi3>
 8004264:	0003      	movs	r3, r0
 8004266:	001a      	movs	r2, r3
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	685b      	ldr	r3, [r3, #4]
 800426c:	085b      	lsrs	r3, r3, #1
 800426e:	18d2      	adds	r2, r2, r3
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	685b      	ldr	r3, [r3, #4]
 8004274:	0019      	movs	r1, r3
 8004276:	0010      	movs	r0, r2
 8004278:	f7fb ff46 	bl	8000108 <__udivsi3>
 800427c:	0003      	movs	r3, r0
 800427e:	613b      	str	r3, [r7, #16]
 8004280:	693b      	ldr	r3, [r7, #16]
 8004282:	2b0f      	cmp	r3, #15
 8004284:	d90a      	bls.n	800429c <UART_SetConfig+0x2a8>
 8004286:	693a      	ldr	r2, [r7, #16]
 8004288:	2380      	movs	r3, #128	@ 0x80
 800428a:	025b      	lsls	r3, r3, #9
 800428c:	429a      	cmp	r2, r3
 800428e:	d205      	bcs.n	800429c <UART_SetConfig+0x2a8>
 8004290:	693b      	ldr	r3, [r7, #16]
 8004292:	b29a      	uxth	r2, r3
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	60da      	str	r2, [r3, #12]
 800429a:	e003      	b.n	80042a4 <UART_SetConfig+0x2b0>
 800429c:	231e      	movs	r3, #30
 800429e:	18fb      	adds	r3, r7, r3
 80042a0:	2201      	movs	r2, #1
 80042a2:	701a      	strb	r2, [r3, #0]
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	226a      	movs	r2, #106	@ 0x6a
 80042a8:	2101      	movs	r1, #1
 80042aa:	5299      	strh	r1, [r3, r2]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	2268      	movs	r2, #104	@ 0x68
 80042b0:	2101      	movs	r1, #1
 80042b2:	5299      	strh	r1, [r3, r2]
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	2200      	movs	r2, #0
 80042b8:	675a      	str	r2, [r3, #116]	@ 0x74
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	2200      	movs	r2, #0
 80042be:	679a      	str	r2, [r3, #120]	@ 0x78
 80042c0:	231e      	movs	r3, #30
 80042c2:	18fb      	adds	r3, r7, r3
 80042c4:	781b      	ldrb	r3, [r3, #0]
 80042c6:	0018      	movs	r0, r3
 80042c8:	46bd      	mov	sp, r7
 80042ca:	b008      	add	sp, #32
 80042cc:	bd80      	pop	{r7, pc}
 80042ce:	46c0      	nop			@ (mov r8, r8)
 80042d0:	cfff69f3 	.word	0xcfff69f3
 80042d4:	ffffcfff 	.word	0xffffcfff
 80042d8:	11fff4ff 	.word	0x11fff4ff
 80042dc:	40013800 	.word	0x40013800
 80042e0:	40021000 	.word	0x40021000
 80042e4:	40004400 	.word	0x40004400
 80042e8:	02dc6c00 	.word	0x02dc6c00
 80042ec:	08005394 	.word	0x08005394

080042f0 <UART_AdvFeatureConfig>:
 80042f0:	b580      	push	{r7, lr}
 80042f2:	b082      	sub	sp, #8
 80042f4:	af00      	add	r7, sp, #0
 80042f6:	6078      	str	r0, [r7, #4]
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80042fc:	2208      	movs	r2, #8
 80042fe:	4013      	ands	r3, r2
 8004300:	d00b      	beq.n	800431a <UART_AdvFeatureConfig+0x2a>
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	685b      	ldr	r3, [r3, #4]
 8004308:	4a4a      	ldr	r2, [pc, #296]	@ (8004434 <UART_AdvFeatureConfig+0x144>)
 800430a:	4013      	ands	r3, r2
 800430c:	0019      	movs	r1, r3
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	430a      	orrs	r2, r1
 8004318:	605a      	str	r2, [r3, #4]
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800431e:	2201      	movs	r2, #1
 8004320:	4013      	ands	r3, r2
 8004322:	d00b      	beq.n	800433c <UART_AdvFeatureConfig+0x4c>
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	685b      	ldr	r3, [r3, #4]
 800432a:	4a43      	ldr	r2, [pc, #268]	@ (8004438 <UART_AdvFeatureConfig+0x148>)
 800432c:	4013      	ands	r3, r2
 800432e:	0019      	movs	r1, r3
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	430a      	orrs	r2, r1
 800433a:	605a      	str	r2, [r3, #4]
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004340:	2202      	movs	r2, #2
 8004342:	4013      	ands	r3, r2
 8004344:	d00b      	beq.n	800435e <UART_AdvFeatureConfig+0x6e>
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	685b      	ldr	r3, [r3, #4]
 800434c:	4a3b      	ldr	r2, [pc, #236]	@ (800443c <UART_AdvFeatureConfig+0x14c>)
 800434e:	4013      	ands	r3, r2
 8004350:	0019      	movs	r1, r3
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	430a      	orrs	r2, r1
 800435c:	605a      	str	r2, [r3, #4]
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004362:	2204      	movs	r2, #4
 8004364:	4013      	ands	r3, r2
 8004366:	d00b      	beq.n	8004380 <UART_AdvFeatureConfig+0x90>
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	685b      	ldr	r3, [r3, #4]
 800436e:	4a34      	ldr	r2, [pc, #208]	@ (8004440 <UART_AdvFeatureConfig+0x150>)
 8004370:	4013      	ands	r3, r2
 8004372:	0019      	movs	r1, r3
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	430a      	orrs	r2, r1
 800437e:	605a      	str	r2, [r3, #4]
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004384:	2210      	movs	r2, #16
 8004386:	4013      	ands	r3, r2
 8004388:	d00b      	beq.n	80043a2 <UART_AdvFeatureConfig+0xb2>
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	689b      	ldr	r3, [r3, #8]
 8004390:	4a2c      	ldr	r2, [pc, #176]	@ (8004444 <UART_AdvFeatureConfig+0x154>)
 8004392:	4013      	ands	r3, r2
 8004394:	0019      	movs	r1, r3
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	430a      	orrs	r2, r1
 80043a0:	609a      	str	r2, [r3, #8]
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043a6:	2220      	movs	r2, #32
 80043a8:	4013      	ands	r3, r2
 80043aa:	d00b      	beq.n	80043c4 <UART_AdvFeatureConfig+0xd4>
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	689b      	ldr	r3, [r3, #8]
 80043b2:	4a25      	ldr	r2, [pc, #148]	@ (8004448 <UART_AdvFeatureConfig+0x158>)
 80043b4:	4013      	ands	r3, r2
 80043b6:	0019      	movs	r1, r3
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	430a      	orrs	r2, r1
 80043c2:	609a      	str	r2, [r3, #8]
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043c8:	2240      	movs	r2, #64	@ 0x40
 80043ca:	4013      	ands	r3, r2
 80043cc:	d01d      	beq.n	800440a <UART_AdvFeatureConfig+0x11a>
 80043ce:	687b      	ldr	r3, [r7, #4]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	685b      	ldr	r3, [r3, #4]
 80043d4:	4a1d      	ldr	r2, [pc, #116]	@ (800444c <UART_AdvFeatureConfig+0x15c>)
 80043d6:	4013      	ands	r3, r2
 80043d8:	0019      	movs	r1, r3
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	430a      	orrs	r2, r1
 80043e4:	605a      	str	r2, [r3, #4]
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80043ea:	2380      	movs	r3, #128	@ 0x80
 80043ec:	035b      	lsls	r3, r3, #13
 80043ee:	429a      	cmp	r2, r3
 80043f0:	d10b      	bne.n	800440a <UART_AdvFeatureConfig+0x11a>
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	685b      	ldr	r3, [r3, #4]
 80043f8:	4a15      	ldr	r2, [pc, #84]	@ (8004450 <UART_AdvFeatureConfig+0x160>)
 80043fa:	4013      	ands	r3, r2
 80043fc:	0019      	movs	r1, r3
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	430a      	orrs	r2, r1
 8004408:	605a      	str	r2, [r3, #4]
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800440e:	2280      	movs	r2, #128	@ 0x80
 8004410:	4013      	ands	r3, r2
 8004412:	d00b      	beq.n	800442c <UART_AdvFeatureConfig+0x13c>
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	685b      	ldr	r3, [r3, #4]
 800441a:	4a0e      	ldr	r2, [pc, #56]	@ (8004454 <UART_AdvFeatureConfig+0x164>)
 800441c:	4013      	ands	r3, r2
 800441e:	0019      	movs	r1, r3
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	430a      	orrs	r2, r1
 800442a:	605a      	str	r2, [r3, #4]
 800442c:	46c0      	nop			@ (mov r8, r8)
 800442e:	46bd      	mov	sp, r7
 8004430:	b002      	add	sp, #8
 8004432:	bd80      	pop	{r7, pc}
 8004434:	ffff7fff 	.word	0xffff7fff
 8004438:	fffdffff 	.word	0xfffdffff
 800443c:	fffeffff 	.word	0xfffeffff
 8004440:	fffbffff 	.word	0xfffbffff
 8004444:	ffffefff 	.word	0xffffefff
 8004448:	ffffdfff 	.word	0xffffdfff
 800444c:	ffefffff 	.word	0xffefffff
 8004450:	ff9fffff 	.word	0xff9fffff
 8004454:	fff7ffff 	.word	0xfff7ffff

08004458 <UART_CheckIdleState>:
 8004458:	b580      	push	{r7, lr}
 800445a:	b092      	sub	sp, #72	@ 0x48
 800445c:	af02      	add	r7, sp, #8
 800445e:	6078      	str	r0, [r7, #4]
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	2290      	movs	r2, #144	@ 0x90
 8004464:	2100      	movs	r1, #0
 8004466:	5099      	str	r1, [r3, r2]
 8004468:	f7fd fb98 	bl	8001b9c <HAL_GetTick>
 800446c:	0003      	movs	r3, r0
 800446e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004470:	687b      	ldr	r3, [r7, #4]
 8004472:	681b      	ldr	r3, [r3, #0]
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	2208      	movs	r2, #8
 8004478:	4013      	ands	r3, r2
 800447a:	2b08      	cmp	r3, #8
 800447c:	d12d      	bne.n	80044da <UART_CheckIdleState+0x82>
 800447e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004480:	2280      	movs	r2, #128	@ 0x80
 8004482:	0391      	lsls	r1, r2, #14
 8004484:	6878      	ldr	r0, [r7, #4]
 8004486:	4a47      	ldr	r2, [pc, #284]	@ (80045a4 <UART_CheckIdleState+0x14c>)
 8004488:	9200      	str	r2, [sp, #0]
 800448a:	2200      	movs	r2, #0
 800448c:	f000 f88e 	bl	80045ac <UART_WaitOnFlagUntilTimeout>
 8004490:	1e03      	subs	r3, r0, #0
 8004492:	d022      	beq.n	80044da <UART_CheckIdleState+0x82>
 8004494:	f3ef 8310 	mrs	r3, PRIMASK
 8004498:	627b      	str	r3, [r7, #36]	@ 0x24
 800449a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800449c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800449e:	2301      	movs	r3, #1
 80044a0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80044a2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80044a4:	f383 8810 	msr	PRIMASK, r3
 80044a8:	46c0      	nop			@ (mov r8, r8)
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	681a      	ldr	r2, [r3, #0]
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	2180      	movs	r1, #128	@ 0x80
 80044b6:	438a      	bics	r2, r1
 80044b8:	601a      	str	r2, [r3, #0]
 80044ba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80044bc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80044be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80044c0:	f383 8810 	msr	PRIMASK, r3
 80044c4:	46c0      	nop			@ (mov r8, r8)
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	2288      	movs	r2, #136	@ 0x88
 80044ca:	2120      	movs	r1, #32
 80044cc:	5099      	str	r1, [r3, r2]
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	2284      	movs	r2, #132	@ 0x84
 80044d2:	2100      	movs	r1, #0
 80044d4:	5499      	strb	r1, [r3, r2]
 80044d6:	2303      	movs	r3, #3
 80044d8:	e060      	b.n	800459c <UART_CheckIdleState+0x144>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	2204      	movs	r2, #4
 80044e2:	4013      	ands	r3, r2
 80044e4:	2b04      	cmp	r3, #4
 80044e6:	d146      	bne.n	8004576 <UART_CheckIdleState+0x11e>
 80044e8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80044ea:	2280      	movs	r2, #128	@ 0x80
 80044ec:	03d1      	lsls	r1, r2, #15
 80044ee:	6878      	ldr	r0, [r7, #4]
 80044f0:	4a2c      	ldr	r2, [pc, #176]	@ (80045a4 <UART_CheckIdleState+0x14c>)
 80044f2:	9200      	str	r2, [sp, #0]
 80044f4:	2200      	movs	r2, #0
 80044f6:	f000 f859 	bl	80045ac <UART_WaitOnFlagUntilTimeout>
 80044fa:	1e03      	subs	r3, r0, #0
 80044fc:	d03b      	beq.n	8004576 <UART_CheckIdleState+0x11e>
 80044fe:	f3ef 8310 	mrs	r3, PRIMASK
 8004502:	60fb      	str	r3, [r7, #12]
 8004504:	68fb      	ldr	r3, [r7, #12]
 8004506:	637b      	str	r3, [r7, #52]	@ 0x34
 8004508:	2301      	movs	r3, #1
 800450a:	613b      	str	r3, [r7, #16]
 800450c:	693b      	ldr	r3, [r7, #16]
 800450e:	f383 8810 	msr	PRIMASK, r3
 8004512:	46c0      	nop			@ (mov r8, r8)
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	681a      	ldr	r2, [r3, #0]
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	4922      	ldr	r1, [pc, #136]	@ (80045a8 <UART_CheckIdleState+0x150>)
 8004520:	400a      	ands	r2, r1
 8004522:	601a      	str	r2, [r3, #0]
 8004524:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004526:	617b      	str	r3, [r7, #20]
 8004528:	697b      	ldr	r3, [r7, #20]
 800452a:	f383 8810 	msr	PRIMASK, r3
 800452e:	46c0      	nop			@ (mov r8, r8)
 8004530:	f3ef 8310 	mrs	r3, PRIMASK
 8004534:	61bb      	str	r3, [r7, #24]
 8004536:	69bb      	ldr	r3, [r7, #24]
 8004538:	633b      	str	r3, [r7, #48]	@ 0x30
 800453a:	2301      	movs	r3, #1
 800453c:	61fb      	str	r3, [r7, #28]
 800453e:	69fb      	ldr	r3, [r7, #28]
 8004540:	f383 8810 	msr	PRIMASK, r3
 8004544:	46c0      	nop			@ (mov r8, r8)
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	689a      	ldr	r2, [r3, #8]
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	2101      	movs	r1, #1
 8004552:	438a      	bics	r2, r1
 8004554:	609a      	str	r2, [r3, #8]
 8004556:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004558:	623b      	str	r3, [r7, #32]
 800455a:	6a3b      	ldr	r3, [r7, #32]
 800455c:	f383 8810 	msr	PRIMASK, r3
 8004560:	46c0      	nop			@ (mov r8, r8)
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	228c      	movs	r2, #140	@ 0x8c
 8004566:	2120      	movs	r1, #32
 8004568:	5099      	str	r1, [r3, r2]
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	2284      	movs	r2, #132	@ 0x84
 800456e:	2100      	movs	r1, #0
 8004570:	5499      	strb	r1, [r3, r2]
 8004572:	2303      	movs	r3, #3
 8004574:	e012      	b.n	800459c <UART_CheckIdleState+0x144>
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	2288      	movs	r2, #136	@ 0x88
 800457a:	2120      	movs	r1, #32
 800457c:	5099      	str	r1, [r3, r2]
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	228c      	movs	r2, #140	@ 0x8c
 8004582:	2120      	movs	r1, #32
 8004584:	5099      	str	r1, [r3, r2]
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	2200      	movs	r2, #0
 800458a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	2200      	movs	r2, #0
 8004590:	671a      	str	r2, [r3, #112]	@ 0x70
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	2284      	movs	r2, #132	@ 0x84
 8004596:	2100      	movs	r1, #0
 8004598:	5499      	strb	r1, [r3, r2]
 800459a:	2300      	movs	r3, #0
 800459c:	0018      	movs	r0, r3
 800459e:	46bd      	mov	sp, r7
 80045a0:	b010      	add	sp, #64	@ 0x40
 80045a2:	bd80      	pop	{r7, pc}
 80045a4:	01ffffff 	.word	0x01ffffff
 80045a8:	fffffedf 	.word	0xfffffedf

080045ac <UART_WaitOnFlagUntilTimeout>:
 80045ac:	b580      	push	{r7, lr}
 80045ae:	b084      	sub	sp, #16
 80045b0:	af00      	add	r7, sp, #0
 80045b2:	60f8      	str	r0, [r7, #12]
 80045b4:	60b9      	str	r1, [r7, #8]
 80045b6:	603b      	str	r3, [r7, #0]
 80045b8:	1dfb      	adds	r3, r7, #7
 80045ba:	701a      	strb	r2, [r3, #0]
 80045bc:	e051      	b.n	8004662 <UART_WaitOnFlagUntilTimeout+0xb6>
 80045be:	69bb      	ldr	r3, [r7, #24]
 80045c0:	3301      	adds	r3, #1
 80045c2:	d04e      	beq.n	8004662 <UART_WaitOnFlagUntilTimeout+0xb6>
 80045c4:	f7fd faea 	bl	8001b9c <HAL_GetTick>
 80045c8:	0002      	movs	r2, r0
 80045ca:	683b      	ldr	r3, [r7, #0]
 80045cc:	1ad3      	subs	r3, r2, r3
 80045ce:	69ba      	ldr	r2, [r7, #24]
 80045d0:	429a      	cmp	r2, r3
 80045d2:	d302      	bcc.n	80045da <UART_WaitOnFlagUntilTimeout+0x2e>
 80045d4:	69bb      	ldr	r3, [r7, #24]
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d101      	bne.n	80045de <UART_WaitOnFlagUntilTimeout+0x32>
 80045da:	2303      	movs	r3, #3
 80045dc:	e051      	b.n	8004682 <UART_WaitOnFlagUntilTimeout+0xd6>
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	2204      	movs	r2, #4
 80045e6:	4013      	ands	r3, r2
 80045e8:	d03b      	beq.n	8004662 <UART_WaitOnFlagUntilTimeout+0xb6>
 80045ea:	68bb      	ldr	r3, [r7, #8]
 80045ec:	2b80      	cmp	r3, #128	@ 0x80
 80045ee:	d038      	beq.n	8004662 <UART_WaitOnFlagUntilTimeout+0xb6>
 80045f0:	68bb      	ldr	r3, [r7, #8]
 80045f2:	2b40      	cmp	r3, #64	@ 0x40
 80045f4:	d035      	beq.n	8004662 <UART_WaitOnFlagUntilTimeout+0xb6>
 80045f6:	68fb      	ldr	r3, [r7, #12]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	69db      	ldr	r3, [r3, #28]
 80045fc:	2208      	movs	r2, #8
 80045fe:	4013      	ands	r3, r2
 8004600:	2b08      	cmp	r3, #8
 8004602:	d111      	bne.n	8004628 <UART_WaitOnFlagUntilTimeout+0x7c>
 8004604:	68fb      	ldr	r3, [r7, #12]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	2208      	movs	r2, #8
 800460a:	621a      	str	r2, [r3, #32]
 800460c:	68fb      	ldr	r3, [r7, #12]
 800460e:	0018      	movs	r0, r3
 8004610:	f000 f922 	bl	8004858 <UART_EndRxTransfer>
 8004614:	68fb      	ldr	r3, [r7, #12]
 8004616:	2290      	movs	r2, #144	@ 0x90
 8004618:	2108      	movs	r1, #8
 800461a:	5099      	str	r1, [r3, r2]
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	2284      	movs	r2, #132	@ 0x84
 8004620:	2100      	movs	r1, #0
 8004622:	5499      	strb	r1, [r3, r2]
 8004624:	2301      	movs	r3, #1
 8004626:	e02c      	b.n	8004682 <UART_WaitOnFlagUntilTimeout+0xd6>
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	69da      	ldr	r2, [r3, #28]
 800462e:	2380      	movs	r3, #128	@ 0x80
 8004630:	011b      	lsls	r3, r3, #4
 8004632:	401a      	ands	r2, r3
 8004634:	2380      	movs	r3, #128	@ 0x80
 8004636:	011b      	lsls	r3, r3, #4
 8004638:	429a      	cmp	r2, r3
 800463a:	d112      	bne.n	8004662 <UART_WaitOnFlagUntilTimeout+0xb6>
 800463c:	68fb      	ldr	r3, [r7, #12]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	2280      	movs	r2, #128	@ 0x80
 8004642:	0112      	lsls	r2, r2, #4
 8004644:	621a      	str	r2, [r3, #32]
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	0018      	movs	r0, r3
 800464a:	f000 f905 	bl	8004858 <UART_EndRxTransfer>
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	2290      	movs	r2, #144	@ 0x90
 8004652:	2120      	movs	r1, #32
 8004654:	5099      	str	r1, [r3, r2]
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	2284      	movs	r2, #132	@ 0x84
 800465a:	2100      	movs	r1, #0
 800465c:	5499      	strb	r1, [r3, r2]
 800465e:	2303      	movs	r3, #3
 8004660:	e00f      	b.n	8004682 <UART_WaitOnFlagUntilTimeout+0xd6>
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	69db      	ldr	r3, [r3, #28]
 8004668:	68ba      	ldr	r2, [r7, #8]
 800466a:	4013      	ands	r3, r2
 800466c:	68ba      	ldr	r2, [r7, #8]
 800466e:	1ad3      	subs	r3, r2, r3
 8004670:	425a      	negs	r2, r3
 8004672:	4153      	adcs	r3, r2
 8004674:	b2db      	uxtb	r3, r3
 8004676:	001a      	movs	r2, r3
 8004678:	1dfb      	adds	r3, r7, #7
 800467a:	781b      	ldrb	r3, [r3, #0]
 800467c:	429a      	cmp	r2, r3
 800467e:	d09e      	beq.n	80045be <UART_WaitOnFlagUntilTimeout+0x12>
 8004680:	2300      	movs	r3, #0
 8004682:	0018      	movs	r0, r3
 8004684:	46bd      	mov	sp, r7
 8004686:	b004      	add	sp, #16
 8004688:	bd80      	pop	{r7, pc}
	...

0800468c <UART_Start_Receive_DMA>:
 800468c:	b580      	push	{r7, lr}
 800468e:	b090      	sub	sp, #64	@ 0x40
 8004690:	af00      	add	r7, sp, #0
 8004692:	60f8      	str	r0, [r7, #12]
 8004694:	60b9      	str	r1, [r7, #8]
 8004696:	1dbb      	adds	r3, r7, #6
 8004698:	801a      	strh	r2, [r3, #0]
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	68ba      	ldr	r2, [r7, #8]
 800469e:	659a      	str	r2, [r3, #88]	@ 0x58
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	1dba      	adds	r2, r7, #6
 80046a4:	215c      	movs	r1, #92	@ 0x5c
 80046a6:	8812      	ldrh	r2, [r2, #0]
 80046a8:	525a      	strh	r2, [r3, r1]
 80046aa:	68fb      	ldr	r3, [r7, #12]
 80046ac:	2290      	movs	r2, #144	@ 0x90
 80046ae:	2100      	movs	r1, #0
 80046b0:	5099      	str	r1, [r3, r2]
 80046b2:	68fb      	ldr	r3, [r7, #12]
 80046b4:	228c      	movs	r2, #140	@ 0x8c
 80046b6:	2122      	movs	r1, #34	@ 0x22
 80046b8:	5099      	str	r1, [r3, r2]
 80046ba:	68fb      	ldr	r3, [r7, #12]
 80046bc:	2280      	movs	r2, #128	@ 0x80
 80046be:	589b      	ldr	r3, [r3, r2]
 80046c0:	2b00      	cmp	r3, #0
 80046c2:	d02d      	beq.n	8004720 <UART_Start_Receive_DMA+0x94>
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	2280      	movs	r2, #128	@ 0x80
 80046c8:	589b      	ldr	r3, [r3, r2]
 80046ca:	4a40      	ldr	r2, [pc, #256]	@ (80047cc <UART_Start_Receive_DMA+0x140>)
 80046cc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80046ce:	68fb      	ldr	r3, [r7, #12]
 80046d0:	2280      	movs	r2, #128	@ 0x80
 80046d2:	589b      	ldr	r3, [r3, r2]
 80046d4:	4a3e      	ldr	r2, [pc, #248]	@ (80047d0 <UART_Start_Receive_DMA+0x144>)
 80046d6:	631a      	str	r2, [r3, #48]	@ 0x30
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	2280      	movs	r2, #128	@ 0x80
 80046dc:	589b      	ldr	r3, [r3, r2]
 80046de:	4a3d      	ldr	r2, [pc, #244]	@ (80047d4 <UART_Start_Receive_DMA+0x148>)
 80046e0:	635a      	str	r2, [r3, #52]	@ 0x34
 80046e2:	68fb      	ldr	r3, [r7, #12]
 80046e4:	2280      	movs	r2, #128	@ 0x80
 80046e6:	589b      	ldr	r3, [r3, r2]
 80046e8:	2200      	movs	r2, #0
 80046ea:	639a      	str	r2, [r3, #56]	@ 0x38
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	2280      	movs	r2, #128	@ 0x80
 80046f0:	5898      	ldr	r0, [r3, r2]
 80046f2:	68fb      	ldr	r3, [r7, #12]
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	3324      	adds	r3, #36	@ 0x24
 80046f8:	0019      	movs	r1, r3
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80046fe:	001a      	movs	r2, r3
 8004700:	1dbb      	adds	r3, r7, #6
 8004702:	881b      	ldrh	r3, [r3, #0]
 8004704:	f7fd fc8a 	bl	800201c <HAL_DMA_Start_IT>
 8004708:	1e03      	subs	r3, r0, #0
 800470a:	d009      	beq.n	8004720 <UART_Start_Receive_DMA+0x94>
 800470c:	68fb      	ldr	r3, [r7, #12]
 800470e:	2290      	movs	r2, #144	@ 0x90
 8004710:	2110      	movs	r1, #16
 8004712:	5099      	str	r1, [r3, r2]
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	228c      	movs	r2, #140	@ 0x8c
 8004718:	2120      	movs	r1, #32
 800471a:	5099      	str	r1, [r3, r2]
 800471c:	2301      	movs	r3, #1
 800471e:	e050      	b.n	80047c2 <UART_Start_Receive_DMA+0x136>
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	691b      	ldr	r3, [r3, #16]
 8004724:	2b00      	cmp	r3, #0
 8004726:	d019      	beq.n	800475c <UART_Start_Receive_DMA+0xd0>
 8004728:	f3ef 8310 	mrs	r3, PRIMASK
 800472c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800472e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004730:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004732:	2301      	movs	r3, #1
 8004734:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004736:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004738:	f383 8810 	msr	PRIMASK, r3
 800473c:	46c0      	nop			@ (mov r8, r8)
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	681a      	ldr	r2, [r3, #0]
 8004744:	68fb      	ldr	r3, [r7, #12]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	2180      	movs	r1, #128	@ 0x80
 800474a:	0049      	lsls	r1, r1, #1
 800474c:	430a      	orrs	r2, r1
 800474e:	601a      	str	r2, [r3, #0]
 8004750:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004752:	633b      	str	r3, [r7, #48]	@ 0x30
 8004754:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004756:	f383 8810 	msr	PRIMASK, r3
 800475a:	46c0      	nop			@ (mov r8, r8)
 800475c:	f3ef 8310 	mrs	r3, PRIMASK
 8004760:	613b      	str	r3, [r7, #16]
 8004762:	693b      	ldr	r3, [r7, #16]
 8004764:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004766:	2301      	movs	r3, #1
 8004768:	617b      	str	r3, [r7, #20]
 800476a:	697b      	ldr	r3, [r7, #20]
 800476c:	f383 8810 	msr	PRIMASK, r3
 8004770:	46c0      	nop			@ (mov r8, r8)
 8004772:	68fb      	ldr	r3, [r7, #12]
 8004774:	681b      	ldr	r3, [r3, #0]
 8004776:	689a      	ldr	r2, [r3, #8]
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	681b      	ldr	r3, [r3, #0]
 800477c:	2101      	movs	r1, #1
 800477e:	430a      	orrs	r2, r1
 8004780:	609a      	str	r2, [r3, #8]
 8004782:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004784:	61bb      	str	r3, [r7, #24]
 8004786:	69bb      	ldr	r3, [r7, #24]
 8004788:	f383 8810 	msr	PRIMASK, r3
 800478c:	46c0      	nop			@ (mov r8, r8)
 800478e:	f3ef 8310 	mrs	r3, PRIMASK
 8004792:	61fb      	str	r3, [r7, #28]
 8004794:	69fb      	ldr	r3, [r7, #28]
 8004796:	637b      	str	r3, [r7, #52]	@ 0x34
 8004798:	2301      	movs	r3, #1
 800479a:	623b      	str	r3, [r7, #32]
 800479c:	6a3b      	ldr	r3, [r7, #32]
 800479e:	f383 8810 	msr	PRIMASK, r3
 80047a2:	46c0      	nop			@ (mov r8, r8)
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	689a      	ldr	r2, [r3, #8]
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	681b      	ldr	r3, [r3, #0]
 80047ae:	2140      	movs	r1, #64	@ 0x40
 80047b0:	430a      	orrs	r2, r1
 80047b2:	609a      	str	r2, [r3, #8]
 80047b4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80047b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80047b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047ba:	f383 8810 	msr	PRIMASK, r3
 80047be:	46c0      	nop			@ (mov r8, r8)
 80047c0:	2300      	movs	r3, #0
 80047c2:	0018      	movs	r0, r3
 80047c4:	46bd      	mov	sp, r7
 80047c6:	b010      	add	sp, #64	@ 0x40
 80047c8:	bd80      	pop	{r7, pc}
 80047ca:	46c0      	nop			@ (mov r8, r8)
 80047cc:	080049dd 	.word	0x080049dd
 80047d0:	08004b0d 	.word	0x08004b0d
 80047d4:	08004b4f 	.word	0x08004b4f

080047d8 <UART_EndTxTransfer>:
 80047d8:	b580      	push	{r7, lr}
 80047da:	b08a      	sub	sp, #40	@ 0x28
 80047dc:	af00      	add	r7, sp, #0
 80047de:	6078      	str	r0, [r7, #4]
 80047e0:	f3ef 8310 	mrs	r3, PRIMASK
 80047e4:	60bb      	str	r3, [r7, #8]
 80047e6:	68bb      	ldr	r3, [r7, #8]
 80047e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80047ea:	2301      	movs	r3, #1
 80047ec:	60fb      	str	r3, [r7, #12]
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	f383 8810 	msr	PRIMASK, r3
 80047f4:	46c0      	nop			@ (mov r8, r8)
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	681a      	ldr	r2, [r3, #0]
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	21c0      	movs	r1, #192	@ 0xc0
 8004802:	438a      	bics	r2, r1
 8004804:	601a      	str	r2, [r3, #0]
 8004806:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004808:	613b      	str	r3, [r7, #16]
 800480a:	693b      	ldr	r3, [r7, #16]
 800480c:	f383 8810 	msr	PRIMASK, r3
 8004810:	46c0      	nop			@ (mov r8, r8)
 8004812:	f3ef 8310 	mrs	r3, PRIMASK
 8004816:	617b      	str	r3, [r7, #20]
 8004818:	697b      	ldr	r3, [r7, #20]
 800481a:	623b      	str	r3, [r7, #32]
 800481c:	2301      	movs	r3, #1
 800481e:	61bb      	str	r3, [r7, #24]
 8004820:	69bb      	ldr	r3, [r7, #24]
 8004822:	f383 8810 	msr	PRIMASK, r3
 8004826:	46c0      	nop			@ (mov r8, r8)
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	689a      	ldr	r2, [r3, #8]
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	4908      	ldr	r1, [pc, #32]	@ (8004854 <UART_EndTxTransfer+0x7c>)
 8004834:	400a      	ands	r2, r1
 8004836:	609a      	str	r2, [r3, #8]
 8004838:	6a3b      	ldr	r3, [r7, #32]
 800483a:	61fb      	str	r3, [r7, #28]
 800483c:	69fb      	ldr	r3, [r7, #28]
 800483e:	f383 8810 	msr	PRIMASK, r3
 8004842:	46c0      	nop			@ (mov r8, r8)
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	2288      	movs	r2, #136	@ 0x88
 8004848:	2120      	movs	r1, #32
 800484a:	5099      	str	r1, [r3, r2]
 800484c:	46c0      	nop			@ (mov r8, r8)
 800484e:	46bd      	mov	sp, r7
 8004850:	b00a      	add	sp, #40	@ 0x28
 8004852:	bd80      	pop	{r7, pc}
 8004854:	ff7fffff 	.word	0xff7fffff

08004858 <UART_EndRxTransfer>:
 8004858:	b580      	push	{r7, lr}
 800485a:	b08e      	sub	sp, #56	@ 0x38
 800485c:	af00      	add	r7, sp, #0
 800485e:	6078      	str	r0, [r7, #4]
 8004860:	f3ef 8310 	mrs	r3, PRIMASK
 8004864:	617b      	str	r3, [r7, #20]
 8004866:	697b      	ldr	r3, [r7, #20]
 8004868:	637b      	str	r3, [r7, #52]	@ 0x34
 800486a:	2301      	movs	r3, #1
 800486c:	61bb      	str	r3, [r7, #24]
 800486e:	69bb      	ldr	r3, [r7, #24]
 8004870:	f383 8810 	msr	PRIMASK, r3
 8004874:	46c0      	nop			@ (mov r8, r8)
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	681a      	ldr	r2, [r3, #0]
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	4926      	ldr	r1, [pc, #152]	@ (800491c <UART_EndRxTransfer+0xc4>)
 8004882:	400a      	ands	r2, r1
 8004884:	601a      	str	r2, [r3, #0]
 8004886:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004888:	61fb      	str	r3, [r7, #28]
 800488a:	69fb      	ldr	r3, [r7, #28]
 800488c:	f383 8810 	msr	PRIMASK, r3
 8004890:	46c0      	nop			@ (mov r8, r8)
 8004892:	f3ef 8310 	mrs	r3, PRIMASK
 8004896:	623b      	str	r3, [r7, #32]
 8004898:	6a3b      	ldr	r3, [r7, #32]
 800489a:	633b      	str	r3, [r7, #48]	@ 0x30
 800489c:	2301      	movs	r3, #1
 800489e:	627b      	str	r3, [r7, #36]	@ 0x24
 80048a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048a2:	f383 8810 	msr	PRIMASK, r3
 80048a6:	46c0      	nop			@ (mov r8, r8)
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	689a      	ldr	r2, [r3, #8]
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	491b      	ldr	r1, [pc, #108]	@ (8004920 <UART_EndRxTransfer+0xc8>)
 80048b4:	400a      	ands	r2, r1
 80048b6:	609a      	str	r2, [r3, #8]
 80048b8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80048ba:	62bb      	str	r3, [r7, #40]	@ 0x28
 80048bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80048be:	f383 8810 	msr	PRIMASK, r3
 80048c2:	46c0      	nop			@ (mov r8, r8)
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80048c8:	2b01      	cmp	r3, #1
 80048ca:	d118      	bne.n	80048fe <UART_EndRxTransfer+0xa6>
 80048cc:	f3ef 8310 	mrs	r3, PRIMASK
 80048d0:	60bb      	str	r3, [r7, #8]
 80048d2:	68bb      	ldr	r3, [r7, #8]
 80048d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80048d6:	2301      	movs	r3, #1
 80048d8:	60fb      	str	r3, [r7, #12]
 80048da:	68fb      	ldr	r3, [r7, #12]
 80048dc:	f383 8810 	msr	PRIMASK, r3
 80048e0:	46c0      	nop			@ (mov r8, r8)
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	681a      	ldr	r2, [r3, #0]
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	2110      	movs	r1, #16
 80048ee:	438a      	bics	r2, r1
 80048f0:	601a      	str	r2, [r3, #0]
 80048f2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80048f4:	613b      	str	r3, [r7, #16]
 80048f6:	693b      	ldr	r3, [r7, #16]
 80048f8:	f383 8810 	msr	PRIMASK, r3
 80048fc:	46c0      	nop			@ (mov r8, r8)
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	228c      	movs	r2, #140	@ 0x8c
 8004902:	2120      	movs	r1, #32
 8004904:	5099      	str	r1, [r3, r2]
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	2200      	movs	r2, #0
 800490a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	2200      	movs	r2, #0
 8004910:	675a      	str	r2, [r3, #116]	@ 0x74
 8004912:	46c0      	nop			@ (mov r8, r8)
 8004914:	46bd      	mov	sp, r7
 8004916:	b00e      	add	sp, #56	@ 0x38
 8004918:	bd80      	pop	{r7, pc}
 800491a:	46c0      	nop			@ (mov r8, r8)
 800491c:	fffffedf 	.word	0xfffffedf
 8004920:	effffffe 	.word	0xeffffffe

08004924 <UART_DMATransmitCplt>:
 8004924:	b580      	push	{r7, lr}
 8004926:	b08c      	sub	sp, #48	@ 0x30
 8004928:	af00      	add	r7, sp, #0
 800492a:	6078      	str	r0, [r7, #4]
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004930:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	681b      	ldr	r3, [r3, #0]
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	2220      	movs	r2, #32
 800493a:	4013      	ands	r3, r2
 800493c:	d135      	bne.n	80049aa <UART_DMATransmitCplt+0x86>
 800493e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004940:	2256      	movs	r2, #86	@ 0x56
 8004942:	2100      	movs	r1, #0
 8004944:	5299      	strh	r1, [r3, r2]
 8004946:	f3ef 8310 	mrs	r3, PRIMASK
 800494a:	60fb      	str	r3, [r7, #12]
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004950:	2301      	movs	r3, #1
 8004952:	613b      	str	r3, [r7, #16]
 8004954:	693b      	ldr	r3, [r7, #16]
 8004956:	f383 8810 	msr	PRIMASK, r3
 800495a:	46c0      	nop			@ (mov r8, r8)
 800495c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	689a      	ldr	r2, [r3, #8]
 8004962:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	2180      	movs	r1, #128	@ 0x80
 8004968:	438a      	bics	r2, r1
 800496a:	609a      	str	r2, [r3, #8]
 800496c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800496e:	617b      	str	r3, [r7, #20]
 8004970:	697b      	ldr	r3, [r7, #20]
 8004972:	f383 8810 	msr	PRIMASK, r3
 8004976:	46c0      	nop			@ (mov r8, r8)
 8004978:	f3ef 8310 	mrs	r3, PRIMASK
 800497c:	61bb      	str	r3, [r7, #24]
 800497e:	69bb      	ldr	r3, [r7, #24]
 8004980:	627b      	str	r3, [r7, #36]	@ 0x24
 8004982:	2301      	movs	r3, #1
 8004984:	61fb      	str	r3, [r7, #28]
 8004986:	69fb      	ldr	r3, [r7, #28]
 8004988:	f383 8810 	msr	PRIMASK, r3
 800498c:	46c0      	nop			@ (mov r8, r8)
 800498e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	681a      	ldr	r2, [r3, #0]
 8004994:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	2140      	movs	r1, #64	@ 0x40
 800499a:	430a      	orrs	r2, r1
 800499c:	601a      	str	r2, [r3, #0]
 800499e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049a0:	623b      	str	r3, [r7, #32]
 80049a2:	6a3b      	ldr	r3, [r7, #32]
 80049a4:	f383 8810 	msr	PRIMASK, r3
 80049a8:	e004      	b.n	80049b4 <UART_DMATransmitCplt+0x90>
 80049aa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80049ac:	0018      	movs	r0, r3
 80049ae:	f7fc f8f5 	bl	8000b9c <HAL_UART_TxCpltCallback>
 80049b2:	46c0      	nop			@ (mov r8, r8)
 80049b4:	46c0      	nop			@ (mov r8, r8)
 80049b6:	46bd      	mov	sp, r7
 80049b8:	b00c      	add	sp, #48	@ 0x30
 80049ba:	bd80      	pop	{r7, pc}

080049bc <UART_DMATxHalfCplt>:
 80049bc:	b580      	push	{r7, lr}
 80049be:	b084      	sub	sp, #16
 80049c0:	af00      	add	r7, sp, #0
 80049c2:	6078      	str	r0, [r7, #4]
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80049c8:	60fb      	str	r3, [r7, #12]
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	0018      	movs	r0, r3
 80049ce:	f7ff faf9 	bl	8003fc4 <HAL_UART_TxHalfCpltCallback>
 80049d2:	46c0      	nop			@ (mov r8, r8)
 80049d4:	46bd      	mov	sp, r7
 80049d6:	b004      	add	sp, #16
 80049d8:	bd80      	pop	{r7, pc}
	...

080049dc <UART_DMAReceiveCplt>:
 80049dc:	b580      	push	{r7, lr}
 80049de:	b094      	sub	sp, #80	@ 0x50
 80049e0:	af00      	add	r7, sp, #0
 80049e2:	6078      	str	r0, [r7, #4]
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80049e8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	681b      	ldr	r3, [r3, #0]
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	2220      	movs	r2, #32
 80049f2:	4013      	ands	r3, r2
 80049f4:	d16f      	bne.n	8004ad6 <UART_DMAReceiveCplt+0xfa>
 80049f6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80049f8:	225e      	movs	r2, #94	@ 0x5e
 80049fa:	2100      	movs	r1, #0
 80049fc:	5299      	strh	r1, [r3, r2]
 80049fe:	f3ef 8310 	mrs	r3, PRIMASK
 8004a02:	61bb      	str	r3, [r7, #24]
 8004a04:	69bb      	ldr	r3, [r7, #24]
 8004a06:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004a08:	2301      	movs	r3, #1
 8004a0a:	61fb      	str	r3, [r7, #28]
 8004a0c:	69fb      	ldr	r3, [r7, #28]
 8004a0e:	f383 8810 	msr	PRIMASK, r3
 8004a12:	46c0      	nop			@ (mov r8, r8)
 8004a14:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	681a      	ldr	r2, [r3, #0]
 8004a1a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	493a      	ldr	r1, [pc, #232]	@ (8004b08 <UART_DMAReceiveCplt+0x12c>)
 8004a20:	400a      	ands	r2, r1
 8004a22:	601a      	str	r2, [r3, #0]
 8004a24:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8004a26:	623b      	str	r3, [r7, #32]
 8004a28:	6a3b      	ldr	r3, [r7, #32]
 8004a2a:	f383 8810 	msr	PRIMASK, r3
 8004a2e:	46c0      	nop			@ (mov r8, r8)
 8004a30:	f3ef 8310 	mrs	r3, PRIMASK
 8004a34:	627b      	str	r3, [r7, #36]	@ 0x24
 8004a36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004a38:	647b      	str	r3, [r7, #68]	@ 0x44
 8004a3a:	2301      	movs	r3, #1
 8004a3c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004a3e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004a40:	f383 8810 	msr	PRIMASK, r3
 8004a44:	46c0      	nop			@ (mov r8, r8)
 8004a46:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	689a      	ldr	r2, [r3, #8]
 8004a4c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	2101      	movs	r1, #1
 8004a52:	438a      	bics	r2, r1
 8004a54:	609a      	str	r2, [r3, #8]
 8004a56:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8004a58:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004a5a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a5c:	f383 8810 	msr	PRIMASK, r3
 8004a60:	46c0      	nop			@ (mov r8, r8)
 8004a62:	f3ef 8310 	mrs	r3, PRIMASK
 8004a66:	633b      	str	r3, [r7, #48]	@ 0x30
 8004a68:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004a6a:	643b      	str	r3, [r7, #64]	@ 0x40
 8004a6c:	2301      	movs	r3, #1
 8004a6e:	637b      	str	r3, [r7, #52]	@ 0x34
 8004a70:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004a72:	f383 8810 	msr	PRIMASK, r3
 8004a76:	46c0      	nop			@ (mov r8, r8)
 8004a78:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	689a      	ldr	r2, [r3, #8]
 8004a7e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	2140      	movs	r1, #64	@ 0x40
 8004a84:	438a      	bics	r2, r1
 8004a86:	609a      	str	r2, [r3, #8]
 8004a88:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8004a8a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004a8c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004a8e:	f383 8810 	msr	PRIMASK, r3
 8004a92:	46c0      	nop			@ (mov r8, r8)
 8004a94:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a96:	228c      	movs	r2, #140	@ 0x8c
 8004a98:	2120      	movs	r1, #32
 8004a9a:	5099      	str	r1, [r3, r2]
 8004a9c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004a9e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004aa0:	2b01      	cmp	r3, #1
 8004aa2:	d118      	bne.n	8004ad6 <UART_DMAReceiveCplt+0xfa>
 8004aa4:	f3ef 8310 	mrs	r3, PRIMASK
 8004aa8:	60fb      	str	r3, [r7, #12]
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004aae:	2301      	movs	r3, #1
 8004ab0:	613b      	str	r3, [r7, #16]
 8004ab2:	693b      	ldr	r3, [r7, #16]
 8004ab4:	f383 8810 	msr	PRIMASK, r3
 8004ab8:	46c0      	nop			@ (mov r8, r8)
 8004aba:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004abc:	681b      	ldr	r3, [r3, #0]
 8004abe:	681a      	ldr	r2, [r3, #0]
 8004ac0:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	2110      	movs	r1, #16
 8004ac6:	438a      	bics	r2, r1
 8004ac8:	601a      	str	r2, [r3, #0]
 8004aca:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8004acc:	617b      	str	r3, [r7, #20]
 8004ace:	697b      	ldr	r3, [r7, #20]
 8004ad0:	f383 8810 	msr	PRIMASK, r3
 8004ad4:	46c0      	nop			@ (mov r8, r8)
 8004ad6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004ad8:	2200      	movs	r2, #0
 8004ada:	671a      	str	r2, [r3, #112]	@ 0x70
 8004adc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004ade:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004ae0:	2b01      	cmp	r3, #1
 8004ae2:	d108      	bne.n	8004af6 <UART_DMAReceiveCplt+0x11a>
 8004ae4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004ae6:	225c      	movs	r2, #92	@ 0x5c
 8004ae8:	5a9a      	ldrh	r2, [r3, r2]
 8004aea:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004aec:	0011      	movs	r1, r2
 8004aee:	0018      	movs	r0, r3
 8004af0:	f7fb ffaa 	bl	8000a48 <HAL_UARTEx_RxEventCallback>
 8004af4:	e003      	b.n	8004afe <UART_DMAReceiveCplt+0x122>
 8004af6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004af8:	0018      	movs	r0, r3
 8004afa:	f7ff fa6b 	bl	8003fd4 <HAL_UART_RxCpltCallback>
 8004afe:	46c0      	nop			@ (mov r8, r8)
 8004b00:	46bd      	mov	sp, r7
 8004b02:	b014      	add	sp, #80	@ 0x50
 8004b04:	bd80      	pop	{r7, pc}
 8004b06:	46c0      	nop			@ (mov r8, r8)
 8004b08:	fffffeff 	.word	0xfffffeff

08004b0c <UART_DMARxHalfCplt>:
 8004b0c:	b580      	push	{r7, lr}
 8004b0e:	b084      	sub	sp, #16
 8004b10:	af00      	add	r7, sp, #0
 8004b12:	6078      	str	r0, [r7, #4]
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b18:	60fb      	str	r3, [r7, #12]
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	2201      	movs	r2, #1
 8004b1e:	671a      	str	r2, [r3, #112]	@ 0x70
 8004b20:	68fb      	ldr	r3, [r7, #12]
 8004b22:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004b24:	2b01      	cmp	r3, #1
 8004b26:	d10a      	bne.n	8004b3e <UART_DMARxHalfCplt+0x32>
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	225c      	movs	r2, #92	@ 0x5c
 8004b2c:	5a9b      	ldrh	r3, [r3, r2]
 8004b2e:	085b      	lsrs	r3, r3, #1
 8004b30:	b29a      	uxth	r2, r3
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	0011      	movs	r1, r2
 8004b36:	0018      	movs	r0, r3
 8004b38:	f7fb ff86 	bl	8000a48 <HAL_UARTEx_RxEventCallback>
 8004b3c:	e003      	b.n	8004b46 <UART_DMARxHalfCplt+0x3a>
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	0018      	movs	r0, r3
 8004b42:	f7ff fa4f 	bl	8003fe4 <HAL_UART_RxHalfCpltCallback>
 8004b46:	46c0      	nop			@ (mov r8, r8)
 8004b48:	46bd      	mov	sp, r7
 8004b4a:	b004      	add	sp, #16
 8004b4c:	bd80      	pop	{r7, pc}

08004b4e <UART_DMAError>:
 8004b4e:	b580      	push	{r7, lr}
 8004b50:	b086      	sub	sp, #24
 8004b52:	af00      	add	r7, sp, #0
 8004b54:	6078      	str	r0, [r7, #4]
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b5a:	617b      	str	r3, [r7, #20]
 8004b5c:	697b      	ldr	r3, [r7, #20]
 8004b5e:	2288      	movs	r2, #136	@ 0x88
 8004b60:	589b      	ldr	r3, [r3, r2]
 8004b62:	613b      	str	r3, [r7, #16]
 8004b64:	697b      	ldr	r3, [r7, #20]
 8004b66:	228c      	movs	r2, #140	@ 0x8c
 8004b68:	589b      	ldr	r3, [r3, r2]
 8004b6a:	60fb      	str	r3, [r7, #12]
 8004b6c:	697b      	ldr	r3, [r7, #20]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	689b      	ldr	r3, [r3, #8]
 8004b72:	2280      	movs	r2, #128	@ 0x80
 8004b74:	4013      	ands	r3, r2
 8004b76:	2b80      	cmp	r3, #128	@ 0x80
 8004b78:	d10a      	bne.n	8004b90 <UART_DMAError+0x42>
 8004b7a:	693b      	ldr	r3, [r7, #16]
 8004b7c:	2b21      	cmp	r3, #33	@ 0x21
 8004b7e:	d107      	bne.n	8004b90 <UART_DMAError+0x42>
 8004b80:	697b      	ldr	r3, [r7, #20]
 8004b82:	2256      	movs	r2, #86	@ 0x56
 8004b84:	2100      	movs	r1, #0
 8004b86:	5299      	strh	r1, [r3, r2]
 8004b88:	697b      	ldr	r3, [r7, #20]
 8004b8a:	0018      	movs	r0, r3
 8004b8c:	f7ff fe24 	bl	80047d8 <UART_EndTxTransfer>
 8004b90:	697b      	ldr	r3, [r7, #20]
 8004b92:	681b      	ldr	r3, [r3, #0]
 8004b94:	689b      	ldr	r3, [r3, #8]
 8004b96:	2240      	movs	r2, #64	@ 0x40
 8004b98:	4013      	ands	r3, r2
 8004b9a:	2b40      	cmp	r3, #64	@ 0x40
 8004b9c:	d10a      	bne.n	8004bb4 <UART_DMAError+0x66>
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	2b22      	cmp	r3, #34	@ 0x22
 8004ba2:	d107      	bne.n	8004bb4 <UART_DMAError+0x66>
 8004ba4:	697b      	ldr	r3, [r7, #20]
 8004ba6:	225e      	movs	r2, #94	@ 0x5e
 8004ba8:	2100      	movs	r1, #0
 8004baa:	5299      	strh	r1, [r3, r2]
 8004bac:	697b      	ldr	r3, [r7, #20]
 8004bae:	0018      	movs	r0, r3
 8004bb0:	f7ff fe52 	bl	8004858 <UART_EndRxTransfer>
 8004bb4:	697b      	ldr	r3, [r7, #20]
 8004bb6:	2290      	movs	r2, #144	@ 0x90
 8004bb8:	589b      	ldr	r3, [r3, r2]
 8004bba:	2210      	movs	r2, #16
 8004bbc:	431a      	orrs	r2, r3
 8004bbe:	697b      	ldr	r3, [r7, #20]
 8004bc0:	2190      	movs	r1, #144	@ 0x90
 8004bc2:	505a      	str	r2, [r3, r1]
 8004bc4:	697b      	ldr	r3, [r7, #20]
 8004bc6:	0018      	movs	r0, r3
 8004bc8:	f7fb fff6 	bl	8000bb8 <HAL_UART_ErrorCallback>
 8004bcc:	46c0      	nop			@ (mov r8, r8)
 8004bce:	46bd      	mov	sp, r7
 8004bd0:	b006      	add	sp, #24
 8004bd2:	bd80      	pop	{r7, pc}

08004bd4 <UART_DMAAbortOnError>:
 8004bd4:	b580      	push	{r7, lr}
 8004bd6:	b084      	sub	sp, #16
 8004bd8:	af00      	add	r7, sp, #0
 8004bda:	6078      	str	r0, [r7, #4]
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004be0:	60fb      	str	r3, [r7, #12]
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	225e      	movs	r2, #94	@ 0x5e
 8004be6:	2100      	movs	r1, #0
 8004be8:	5299      	strh	r1, [r3, r2]
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	2256      	movs	r2, #86	@ 0x56
 8004bee:	2100      	movs	r1, #0
 8004bf0:	5299      	strh	r1, [r3, r2]
 8004bf2:	68fb      	ldr	r3, [r7, #12]
 8004bf4:	0018      	movs	r0, r3
 8004bf6:	f7fb ffdf 	bl	8000bb8 <HAL_UART_ErrorCallback>
 8004bfa:	46c0      	nop			@ (mov r8, r8)
 8004bfc:	46bd      	mov	sp, r7
 8004bfe:	b004      	add	sp, #16
 8004c00:	bd80      	pop	{r7, pc}

08004c02 <UART_EndTransmit_IT>:
 8004c02:	b580      	push	{r7, lr}
 8004c04:	b086      	sub	sp, #24
 8004c06:	af00      	add	r7, sp, #0
 8004c08:	6078      	str	r0, [r7, #4]
 8004c0a:	f3ef 8310 	mrs	r3, PRIMASK
 8004c0e:	60bb      	str	r3, [r7, #8]
 8004c10:	68bb      	ldr	r3, [r7, #8]
 8004c12:	617b      	str	r3, [r7, #20]
 8004c14:	2301      	movs	r3, #1
 8004c16:	60fb      	str	r3, [r7, #12]
 8004c18:	68fb      	ldr	r3, [r7, #12]
 8004c1a:	f383 8810 	msr	PRIMASK, r3
 8004c1e:	46c0      	nop			@ (mov r8, r8)
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	681a      	ldr	r2, [r3, #0]
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	2140      	movs	r1, #64	@ 0x40
 8004c2c:	438a      	bics	r2, r1
 8004c2e:	601a      	str	r2, [r3, #0]
 8004c30:	697b      	ldr	r3, [r7, #20]
 8004c32:	613b      	str	r3, [r7, #16]
 8004c34:	693b      	ldr	r3, [r7, #16]
 8004c36:	f383 8810 	msr	PRIMASK, r3
 8004c3a:	46c0      	nop			@ (mov r8, r8)
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	2288      	movs	r2, #136	@ 0x88
 8004c40:	2120      	movs	r1, #32
 8004c42:	5099      	str	r1, [r3, r2]
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	2200      	movs	r2, #0
 8004c48:	679a      	str	r2, [r3, #120]	@ 0x78
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	0018      	movs	r0, r3
 8004c4e:	f7fb ffa5 	bl	8000b9c <HAL_UART_TxCpltCallback>
 8004c52:	46c0      	nop			@ (mov r8, r8)
 8004c54:	46bd      	mov	sp, r7
 8004c56:	b006      	add	sp, #24
 8004c58:	bd80      	pop	{r7, pc}
	...

08004c5c <HAL_RS485Ex_Init>:
 8004c5c:	b580      	push	{r7, lr}
 8004c5e:	b086      	sub	sp, #24
 8004c60:	af00      	add	r7, sp, #0
 8004c62:	60f8      	str	r0, [r7, #12]
 8004c64:	60b9      	str	r1, [r7, #8]
 8004c66:	607a      	str	r2, [r7, #4]
 8004c68:	603b      	str	r3, [r7, #0]
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	2b00      	cmp	r3, #0
 8004c6e:	d101      	bne.n	8004c74 <HAL_RS485Ex_Init+0x18>
 8004c70:	2301      	movs	r3, #1
 8004c72:	e05d      	b.n	8004d30 <HAL_RS485Ex_Init+0xd4>
 8004c74:	68fb      	ldr	r3, [r7, #12]
 8004c76:	2288      	movs	r2, #136	@ 0x88
 8004c78:	589b      	ldr	r3, [r3, r2]
 8004c7a:	2b00      	cmp	r3, #0
 8004c7c:	d107      	bne.n	8004c8e <HAL_RS485Ex_Init+0x32>
 8004c7e:	68fb      	ldr	r3, [r7, #12]
 8004c80:	2284      	movs	r2, #132	@ 0x84
 8004c82:	2100      	movs	r1, #0
 8004c84:	5499      	strb	r1, [r3, r2]
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	0018      	movs	r0, r3
 8004c8a:	f7fc fd51 	bl	8001730 <HAL_UART_MspInit>
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	2288      	movs	r2, #136	@ 0x88
 8004c92:	2124      	movs	r1, #36	@ 0x24
 8004c94:	5099      	str	r1, [r3, r2]
 8004c96:	68fb      	ldr	r3, [r7, #12]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	681a      	ldr	r2, [r3, #0]
 8004c9c:	68fb      	ldr	r3, [r7, #12]
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	2101      	movs	r1, #1
 8004ca2:	438a      	bics	r2, r1
 8004ca4:	601a      	str	r2, [r3, #0]
 8004ca6:	68fb      	ldr	r3, [r7, #12]
 8004ca8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	d003      	beq.n	8004cb6 <HAL_RS485Ex_Init+0x5a>
 8004cae:	68fb      	ldr	r3, [r7, #12]
 8004cb0:	0018      	movs	r0, r3
 8004cb2:	f7ff fb1d 	bl	80042f0 <UART_AdvFeatureConfig>
 8004cb6:	68fb      	ldr	r3, [r7, #12]
 8004cb8:	0018      	movs	r0, r3
 8004cba:	f7ff f99b 	bl	8003ff4 <UART_SetConfig>
 8004cbe:	0003      	movs	r3, r0
 8004cc0:	2b01      	cmp	r3, #1
 8004cc2:	d101      	bne.n	8004cc8 <HAL_RS485Ex_Init+0x6c>
 8004cc4:	2301      	movs	r3, #1
 8004cc6:	e033      	b.n	8004d30 <HAL_RS485Ex_Init+0xd4>
 8004cc8:	68fb      	ldr	r3, [r7, #12]
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	689a      	ldr	r2, [r3, #8]
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	2180      	movs	r1, #128	@ 0x80
 8004cd4:	01c9      	lsls	r1, r1, #7
 8004cd6:	430a      	orrs	r2, r1
 8004cd8:	609a      	str	r2, [r3, #8]
 8004cda:	68fb      	ldr	r3, [r7, #12]
 8004cdc:	681b      	ldr	r3, [r3, #0]
 8004cde:	689b      	ldr	r3, [r3, #8]
 8004ce0:	4a15      	ldr	r2, [pc, #84]	@ (8004d38 <HAL_RS485Ex_Init+0xdc>)
 8004ce2:	4013      	ands	r3, r2
 8004ce4:	0019      	movs	r1, r3
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	68ba      	ldr	r2, [r7, #8]
 8004cec:	430a      	orrs	r2, r1
 8004cee:	609a      	str	r2, [r3, #8]
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	055b      	lsls	r3, r3, #21
 8004cf4:	617b      	str	r3, [r7, #20]
 8004cf6:	683b      	ldr	r3, [r7, #0]
 8004cf8:	041b      	lsls	r3, r3, #16
 8004cfa:	697a      	ldr	r2, [r7, #20]
 8004cfc:	4313      	orrs	r3, r2
 8004cfe:	617b      	str	r3, [r7, #20]
 8004d00:	68fb      	ldr	r3, [r7, #12]
 8004d02:	681b      	ldr	r3, [r3, #0]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	4a0d      	ldr	r2, [pc, #52]	@ (8004d3c <HAL_RS485Ex_Init+0xe0>)
 8004d08:	4013      	ands	r3, r2
 8004d0a:	0019      	movs	r1, r3
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	697a      	ldr	r2, [r7, #20]
 8004d12:	430a      	orrs	r2, r1
 8004d14:	601a      	str	r2, [r3, #0]
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	681a      	ldr	r2, [r3, #0]
 8004d1c:	68fb      	ldr	r3, [r7, #12]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	2101      	movs	r1, #1
 8004d22:	430a      	orrs	r2, r1
 8004d24:	601a      	str	r2, [r3, #0]
 8004d26:	68fb      	ldr	r3, [r7, #12]
 8004d28:	0018      	movs	r0, r3
 8004d2a:	f7ff fb95 	bl	8004458 <UART_CheckIdleState>
 8004d2e:	0003      	movs	r3, r0
 8004d30:	0018      	movs	r0, r3
 8004d32:	46bd      	mov	sp, r7
 8004d34:	b006      	add	sp, #24
 8004d36:	bd80      	pop	{r7, pc}
 8004d38:	ffff7fff 	.word	0xffff7fff
 8004d3c:	fc00ffff 	.word	0xfc00ffff

08004d40 <HAL_UARTEx_WakeupCallback>:
 8004d40:	b580      	push	{r7, lr}
 8004d42:	b082      	sub	sp, #8
 8004d44:	af00      	add	r7, sp, #0
 8004d46:	6078      	str	r0, [r7, #4]
 8004d48:	46c0      	nop			@ (mov r8, r8)
 8004d4a:	46bd      	mov	sp, r7
 8004d4c:	b002      	add	sp, #8
 8004d4e:	bd80      	pop	{r7, pc}

08004d50 <HAL_UARTEx_RxFifoFullCallback>:
 8004d50:	b580      	push	{r7, lr}
 8004d52:	b082      	sub	sp, #8
 8004d54:	af00      	add	r7, sp, #0
 8004d56:	6078      	str	r0, [r7, #4]
 8004d58:	46c0      	nop			@ (mov r8, r8)
 8004d5a:	46bd      	mov	sp, r7
 8004d5c:	b002      	add	sp, #8
 8004d5e:	bd80      	pop	{r7, pc}

08004d60 <HAL_UARTEx_TxFifoEmptyCallback>:
 8004d60:	b580      	push	{r7, lr}
 8004d62:	b082      	sub	sp, #8
 8004d64:	af00      	add	r7, sp, #0
 8004d66:	6078      	str	r0, [r7, #4]
 8004d68:	46c0      	nop			@ (mov r8, r8)
 8004d6a:	46bd      	mov	sp, r7
 8004d6c:	b002      	add	sp, #8
 8004d6e:	bd80      	pop	{r7, pc}

08004d70 <HAL_UARTEx_DisableFifoMode>:
 8004d70:	b580      	push	{r7, lr}
 8004d72:	b084      	sub	sp, #16
 8004d74:	af00      	add	r7, sp, #0
 8004d76:	6078      	str	r0, [r7, #4]
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	2284      	movs	r2, #132	@ 0x84
 8004d7c:	5c9b      	ldrb	r3, [r3, r2]
 8004d7e:	2b01      	cmp	r3, #1
 8004d80:	d101      	bne.n	8004d86 <HAL_UARTEx_DisableFifoMode+0x16>
 8004d82:	2302      	movs	r3, #2
 8004d84:	e027      	b.n	8004dd6 <HAL_UARTEx_DisableFifoMode+0x66>
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	2284      	movs	r2, #132	@ 0x84
 8004d8a:	2101      	movs	r1, #1
 8004d8c:	5499      	strb	r1, [r3, r2]
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	2288      	movs	r2, #136	@ 0x88
 8004d92:	2124      	movs	r1, #36	@ 0x24
 8004d94:	5099      	str	r1, [r3, r2]
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	60fb      	str	r3, [r7, #12]
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	681a      	ldr	r2, [r3, #0]
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	2101      	movs	r1, #1
 8004daa:	438a      	bics	r2, r1
 8004dac:	601a      	str	r2, [r3, #0]
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	4a0b      	ldr	r2, [pc, #44]	@ (8004de0 <HAL_UARTEx_DisableFifoMode+0x70>)
 8004db2:	4013      	ands	r3, r2
 8004db4:	60fb      	str	r3, [r7, #12]
 8004db6:	687b      	ldr	r3, [r7, #4]
 8004db8:	2200      	movs	r2, #0
 8004dba:	665a      	str	r2, [r3, #100]	@ 0x64
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	68fa      	ldr	r2, [r7, #12]
 8004dc2:	601a      	str	r2, [r3, #0]
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	2288      	movs	r2, #136	@ 0x88
 8004dc8:	2120      	movs	r1, #32
 8004dca:	5099      	str	r1, [r3, r2]
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	2284      	movs	r2, #132	@ 0x84
 8004dd0:	2100      	movs	r1, #0
 8004dd2:	5499      	strb	r1, [r3, r2]
 8004dd4:	2300      	movs	r3, #0
 8004dd6:	0018      	movs	r0, r3
 8004dd8:	46bd      	mov	sp, r7
 8004dda:	b004      	add	sp, #16
 8004ddc:	bd80      	pop	{r7, pc}
 8004dde:	46c0      	nop			@ (mov r8, r8)
 8004de0:	dfffffff 	.word	0xdfffffff

08004de4 <HAL_UARTEx_SetTxFifoThreshold>:
 8004de4:	b580      	push	{r7, lr}
 8004de6:	b084      	sub	sp, #16
 8004de8:	af00      	add	r7, sp, #0
 8004dea:	6078      	str	r0, [r7, #4]
 8004dec:	6039      	str	r1, [r7, #0]
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	2284      	movs	r2, #132	@ 0x84
 8004df2:	5c9b      	ldrb	r3, [r3, r2]
 8004df4:	2b01      	cmp	r3, #1
 8004df6:	d101      	bne.n	8004dfc <HAL_UARTEx_SetTxFifoThreshold+0x18>
 8004df8:	2302      	movs	r3, #2
 8004dfa:	e02e      	b.n	8004e5a <HAL_UARTEx_SetTxFifoThreshold+0x76>
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	2284      	movs	r2, #132	@ 0x84
 8004e00:	2101      	movs	r1, #1
 8004e02:	5499      	strb	r1, [r3, r2]
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	2288      	movs	r2, #136	@ 0x88
 8004e08:	2124      	movs	r1, #36	@ 0x24
 8004e0a:	5099      	str	r1, [r3, r2]
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	681b      	ldr	r3, [r3, #0]
 8004e12:	60fb      	str	r3, [r7, #12]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	681a      	ldr	r2, [r3, #0]
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	2101      	movs	r1, #1
 8004e20:	438a      	bics	r2, r1
 8004e22:	601a      	str	r2, [r3, #0]
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	689b      	ldr	r3, [r3, #8]
 8004e2a:	00db      	lsls	r3, r3, #3
 8004e2c:	08d9      	lsrs	r1, r3, #3
 8004e2e:	687b      	ldr	r3, [r7, #4]
 8004e30:	681b      	ldr	r3, [r3, #0]
 8004e32:	683a      	ldr	r2, [r7, #0]
 8004e34:	430a      	orrs	r2, r1
 8004e36:	609a      	str	r2, [r3, #8]
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	0018      	movs	r0, r3
 8004e3c:	f000 f8bc 	bl	8004fb8 <UARTEx_SetNbDataToProcess>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	68fa      	ldr	r2, [r7, #12]
 8004e46:	601a      	str	r2, [r3, #0]
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	2288      	movs	r2, #136	@ 0x88
 8004e4c:	2120      	movs	r1, #32
 8004e4e:	5099      	str	r1, [r3, r2]
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	2284      	movs	r2, #132	@ 0x84
 8004e54:	2100      	movs	r1, #0
 8004e56:	5499      	strb	r1, [r3, r2]
 8004e58:	2300      	movs	r3, #0
 8004e5a:	0018      	movs	r0, r3
 8004e5c:	46bd      	mov	sp, r7
 8004e5e:	b004      	add	sp, #16
 8004e60:	bd80      	pop	{r7, pc}
	...

08004e64 <HAL_UARTEx_SetRxFifoThreshold>:
 8004e64:	b580      	push	{r7, lr}
 8004e66:	b084      	sub	sp, #16
 8004e68:	af00      	add	r7, sp, #0
 8004e6a:	6078      	str	r0, [r7, #4]
 8004e6c:	6039      	str	r1, [r7, #0]
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	2284      	movs	r2, #132	@ 0x84
 8004e72:	5c9b      	ldrb	r3, [r3, r2]
 8004e74:	2b01      	cmp	r3, #1
 8004e76:	d101      	bne.n	8004e7c <HAL_UARTEx_SetRxFifoThreshold+0x18>
 8004e78:	2302      	movs	r3, #2
 8004e7a:	e02f      	b.n	8004edc <HAL_UARTEx_SetRxFifoThreshold+0x78>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	2284      	movs	r2, #132	@ 0x84
 8004e80:	2101      	movs	r1, #1
 8004e82:	5499      	strb	r1, [r3, r2]
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	2288      	movs	r2, #136	@ 0x88
 8004e88:	2124      	movs	r1, #36	@ 0x24
 8004e8a:	5099      	str	r1, [r3, r2]
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	60fb      	str	r3, [r7, #12]
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	681a      	ldr	r2, [r3, #0]
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	2101      	movs	r1, #1
 8004ea0:	438a      	bics	r2, r1
 8004ea2:	601a      	str	r2, [r3, #0]
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	689b      	ldr	r3, [r3, #8]
 8004eaa:	4a0e      	ldr	r2, [pc, #56]	@ (8004ee4 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
 8004eac:	4013      	ands	r3, r2
 8004eae:	0019      	movs	r1, r3
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	683a      	ldr	r2, [r7, #0]
 8004eb6:	430a      	orrs	r2, r1
 8004eb8:	609a      	str	r2, [r3, #8]
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	0018      	movs	r0, r3
 8004ebe:	f000 f87b 	bl	8004fb8 <UARTEx_SetNbDataToProcess>
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	68fa      	ldr	r2, [r7, #12]
 8004ec8:	601a      	str	r2, [r3, #0]
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	2288      	movs	r2, #136	@ 0x88
 8004ece:	2120      	movs	r1, #32
 8004ed0:	5099      	str	r1, [r3, r2]
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	2284      	movs	r2, #132	@ 0x84
 8004ed6:	2100      	movs	r1, #0
 8004ed8:	5499      	strb	r1, [r3, r2]
 8004eda:	2300      	movs	r3, #0
 8004edc:	0018      	movs	r0, r3
 8004ede:	46bd      	mov	sp, r7
 8004ee0:	b004      	add	sp, #16
 8004ee2:	bd80      	pop	{r7, pc}
 8004ee4:	f1ffffff 	.word	0xf1ffffff

08004ee8 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8004ee8:	b5b0      	push	{r4, r5, r7, lr}
 8004eea:	b08a      	sub	sp, #40	@ 0x28
 8004eec:	af00      	add	r7, sp, #0
 8004eee:	60f8      	str	r0, [r7, #12]
 8004ef0:	60b9      	str	r1, [r7, #8]
 8004ef2:	1dbb      	adds	r3, r7, #6
 8004ef4:	801a      	strh	r2, [r3, #0]
 8004ef6:	68fb      	ldr	r3, [r7, #12]
 8004ef8:	228c      	movs	r2, #140	@ 0x8c
 8004efa:	589b      	ldr	r3, [r3, r2]
 8004efc:	2b20      	cmp	r3, #32
 8004efe:	d156      	bne.n	8004fae <HAL_UARTEx_ReceiveToIdle_DMA+0xc6>
 8004f00:	68bb      	ldr	r3, [r7, #8]
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d003      	beq.n	8004f0e <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8004f06:	1dbb      	adds	r3, r7, #6
 8004f08:	881b      	ldrh	r3, [r3, #0]
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d101      	bne.n	8004f12 <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
 8004f0e:	2301      	movs	r3, #1
 8004f10:	e04e      	b.n	8004fb0 <HAL_UARTEx_ReceiveToIdle_DMA+0xc8>
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	689a      	ldr	r2, [r3, #8]
 8004f16:	2380      	movs	r3, #128	@ 0x80
 8004f18:	015b      	lsls	r3, r3, #5
 8004f1a:	429a      	cmp	r2, r3
 8004f1c:	d109      	bne.n	8004f32 <HAL_UARTEx_ReceiveToIdle_DMA+0x4a>
 8004f1e:	68fb      	ldr	r3, [r7, #12]
 8004f20:	691b      	ldr	r3, [r3, #16]
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d105      	bne.n	8004f32 <HAL_UARTEx_ReceiveToIdle_DMA+0x4a>
 8004f26:	68bb      	ldr	r3, [r7, #8]
 8004f28:	2201      	movs	r2, #1
 8004f2a:	4013      	ands	r3, r2
 8004f2c:	d001      	beq.n	8004f32 <HAL_UARTEx_ReceiveToIdle_DMA+0x4a>
 8004f2e:	2301      	movs	r3, #1
 8004f30:	e03e      	b.n	8004fb0 <HAL_UARTEx_ReceiveToIdle_DMA+0xc8>
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	2201      	movs	r2, #1
 8004f36:	66da      	str	r2, [r3, #108]	@ 0x6c
 8004f38:	68fb      	ldr	r3, [r7, #12]
 8004f3a:	2200      	movs	r2, #0
 8004f3c:	671a      	str	r2, [r3, #112]	@ 0x70
 8004f3e:	2527      	movs	r5, #39	@ 0x27
 8004f40:	197c      	adds	r4, r7, r5
 8004f42:	1dbb      	adds	r3, r7, #6
 8004f44:	881a      	ldrh	r2, [r3, #0]
 8004f46:	68b9      	ldr	r1, [r7, #8]
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	0018      	movs	r0, r3
 8004f4c:	f7ff fb9e 	bl	800468c <UART_Start_Receive_DMA>
 8004f50:	0003      	movs	r3, r0
 8004f52:	7023      	strb	r3, [r4, #0]
 8004f54:	197b      	adds	r3, r7, r5
 8004f56:	781b      	ldrb	r3, [r3, #0]
 8004f58:	2b00      	cmp	r3, #0
 8004f5a:	d124      	bne.n	8004fa6 <HAL_UARTEx_ReceiveToIdle_DMA+0xbe>
 8004f5c:	68fb      	ldr	r3, [r7, #12]
 8004f5e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004f60:	2b01      	cmp	r3, #1
 8004f62:	d11c      	bne.n	8004f9e <HAL_UARTEx_ReceiveToIdle_DMA+0xb6>
 8004f64:	68fb      	ldr	r3, [r7, #12]
 8004f66:	681b      	ldr	r3, [r3, #0]
 8004f68:	2210      	movs	r2, #16
 8004f6a:	621a      	str	r2, [r3, #32]
 8004f6c:	f3ef 8310 	mrs	r3, PRIMASK
 8004f70:	617b      	str	r3, [r7, #20]
 8004f72:	697b      	ldr	r3, [r7, #20]
 8004f74:	623b      	str	r3, [r7, #32]
 8004f76:	2301      	movs	r3, #1
 8004f78:	61bb      	str	r3, [r7, #24]
 8004f7a:	69bb      	ldr	r3, [r7, #24]
 8004f7c:	f383 8810 	msr	PRIMASK, r3
 8004f80:	46c0      	nop			@ (mov r8, r8)
 8004f82:	68fb      	ldr	r3, [r7, #12]
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	681a      	ldr	r2, [r3, #0]
 8004f88:	68fb      	ldr	r3, [r7, #12]
 8004f8a:	681b      	ldr	r3, [r3, #0]
 8004f8c:	2110      	movs	r1, #16
 8004f8e:	430a      	orrs	r2, r1
 8004f90:	601a      	str	r2, [r3, #0]
 8004f92:	6a3b      	ldr	r3, [r7, #32]
 8004f94:	61fb      	str	r3, [r7, #28]
 8004f96:	69fb      	ldr	r3, [r7, #28]
 8004f98:	f383 8810 	msr	PRIMASK, r3
 8004f9c:	e003      	b.n	8004fa6 <HAL_UARTEx_ReceiveToIdle_DMA+0xbe>
 8004f9e:	2327      	movs	r3, #39	@ 0x27
 8004fa0:	18fb      	adds	r3, r7, r3
 8004fa2:	2201      	movs	r2, #1
 8004fa4:	701a      	strb	r2, [r3, #0]
 8004fa6:	2327      	movs	r3, #39	@ 0x27
 8004fa8:	18fb      	adds	r3, r7, r3
 8004faa:	781b      	ldrb	r3, [r3, #0]
 8004fac:	e000      	b.n	8004fb0 <HAL_UARTEx_ReceiveToIdle_DMA+0xc8>
 8004fae:	2302      	movs	r3, #2
 8004fb0:	0018      	movs	r0, r3
 8004fb2:	46bd      	mov	sp, r7
 8004fb4:	b00a      	add	sp, #40	@ 0x28
 8004fb6:	bdb0      	pop	{r4, r5, r7, pc}

08004fb8 <UARTEx_SetNbDataToProcess>:
 8004fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004fba:	b085      	sub	sp, #20
 8004fbc:	af00      	add	r7, sp, #0
 8004fbe:	6078      	str	r0, [r7, #4]
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8004fc4:	2b00      	cmp	r3, #0
 8004fc6:	d108      	bne.n	8004fda <UARTEx_SetNbDataToProcess+0x22>
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	226a      	movs	r2, #106	@ 0x6a
 8004fcc:	2101      	movs	r1, #1
 8004fce:	5299      	strh	r1, [r3, r2]
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	2268      	movs	r2, #104	@ 0x68
 8004fd4:	2101      	movs	r1, #1
 8004fd6:	5299      	strh	r1, [r3, r2]
 8004fd8:	e043      	b.n	8005062 <UARTEx_SetNbDataToProcess+0xaa>
 8004fda:	260f      	movs	r6, #15
 8004fdc:	19bb      	adds	r3, r7, r6
 8004fde:	2208      	movs	r2, #8
 8004fe0:	701a      	strb	r2, [r3, #0]
 8004fe2:	200e      	movs	r0, #14
 8004fe4:	183b      	adds	r3, r7, r0
 8004fe6:	2208      	movs	r2, #8
 8004fe8:	701a      	strb	r2, [r3, #0]
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	689b      	ldr	r3, [r3, #8]
 8004ff0:	0e5b      	lsrs	r3, r3, #25
 8004ff2:	b2da      	uxtb	r2, r3
 8004ff4:	240d      	movs	r4, #13
 8004ff6:	193b      	adds	r3, r7, r4
 8004ff8:	2107      	movs	r1, #7
 8004ffa:	400a      	ands	r2, r1
 8004ffc:	701a      	strb	r2, [r3, #0]
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	681b      	ldr	r3, [r3, #0]
 8005002:	689b      	ldr	r3, [r3, #8]
 8005004:	0f5b      	lsrs	r3, r3, #29
 8005006:	b2da      	uxtb	r2, r3
 8005008:	250c      	movs	r5, #12
 800500a:	197b      	adds	r3, r7, r5
 800500c:	2107      	movs	r1, #7
 800500e:	400a      	ands	r2, r1
 8005010:	701a      	strb	r2, [r3, #0]
 8005012:	183b      	adds	r3, r7, r0
 8005014:	781b      	ldrb	r3, [r3, #0]
 8005016:	197a      	adds	r2, r7, r5
 8005018:	7812      	ldrb	r2, [r2, #0]
 800501a:	4914      	ldr	r1, [pc, #80]	@ (800506c <UARTEx_SetNbDataToProcess+0xb4>)
 800501c:	5c8a      	ldrb	r2, [r1, r2]
 800501e:	435a      	muls	r2, r3
 8005020:	0010      	movs	r0, r2
 8005022:	197b      	adds	r3, r7, r5
 8005024:	781b      	ldrb	r3, [r3, #0]
 8005026:	4a12      	ldr	r2, [pc, #72]	@ (8005070 <UARTEx_SetNbDataToProcess+0xb8>)
 8005028:	5cd3      	ldrb	r3, [r2, r3]
 800502a:	0019      	movs	r1, r3
 800502c:	f7fb f8f6 	bl	800021c <__divsi3>
 8005030:	0003      	movs	r3, r0
 8005032:	b299      	uxth	r1, r3
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	226a      	movs	r2, #106	@ 0x6a
 8005038:	5299      	strh	r1, [r3, r2]
 800503a:	19bb      	adds	r3, r7, r6
 800503c:	781b      	ldrb	r3, [r3, #0]
 800503e:	193a      	adds	r2, r7, r4
 8005040:	7812      	ldrb	r2, [r2, #0]
 8005042:	490a      	ldr	r1, [pc, #40]	@ (800506c <UARTEx_SetNbDataToProcess+0xb4>)
 8005044:	5c8a      	ldrb	r2, [r1, r2]
 8005046:	435a      	muls	r2, r3
 8005048:	0010      	movs	r0, r2
 800504a:	193b      	adds	r3, r7, r4
 800504c:	781b      	ldrb	r3, [r3, #0]
 800504e:	4a08      	ldr	r2, [pc, #32]	@ (8005070 <UARTEx_SetNbDataToProcess+0xb8>)
 8005050:	5cd3      	ldrb	r3, [r2, r3]
 8005052:	0019      	movs	r1, r3
 8005054:	f7fb f8e2 	bl	800021c <__divsi3>
 8005058:	0003      	movs	r3, r0
 800505a:	b299      	uxth	r1, r3
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	2268      	movs	r2, #104	@ 0x68
 8005060:	5299      	strh	r1, [r3, r2]
 8005062:	46c0      	nop			@ (mov r8, r8)
 8005064:	46bd      	mov	sp, r7
 8005066:	b005      	add	sp, #20
 8005068:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800506a:	46c0      	nop			@ (mov r8, r8)
 800506c:	080053ac 	.word	0x080053ac
 8005070:	080053b4 	.word	0x080053b4

08005074 <memset>:
 8005074:	0003      	movs	r3, r0
 8005076:	1882      	adds	r2, r0, r2
 8005078:	4293      	cmp	r3, r2
 800507a:	d100      	bne.n	800507e <memset+0xa>
 800507c:	4770      	bx	lr
 800507e:	7019      	strb	r1, [r3, #0]
 8005080:	3301      	adds	r3, #1
 8005082:	e7f9      	b.n	8005078 <memset+0x4>

08005084 <__libc_init_array>:
 8005084:	b570      	push	{r4, r5, r6, lr}
 8005086:	2600      	movs	r6, #0
 8005088:	4c0c      	ldr	r4, [pc, #48]	@ (80050bc <__libc_init_array+0x38>)
 800508a:	4d0d      	ldr	r5, [pc, #52]	@ (80050c0 <__libc_init_array+0x3c>)
 800508c:	1b64      	subs	r4, r4, r5
 800508e:	10a4      	asrs	r4, r4, #2
 8005090:	42a6      	cmp	r6, r4
 8005092:	d109      	bne.n	80050a8 <__libc_init_array+0x24>
 8005094:	2600      	movs	r6, #0
 8005096:	f000 f823 	bl	80050e0 <_init>
 800509a:	4c0a      	ldr	r4, [pc, #40]	@ (80050c4 <__libc_init_array+0x40>)
 800509c:	4d0a      	ldr	r5, [pc, #40]	@ (80050c8 <__libc_init_array+0x44>)
 800509e:	1b64      	subs	r4, r4, r5
 80050a0:	10a4      	asrs	r4, r4, #2
 80050a2:	42a6      	cmp	r6, r4
 80050a4:	d105      	bne.n	80050b2 <__libc_init_array+0x2e>
 80050a6:	bd70      	pop	{r4, r5, r6, pc}
 80050a8:	00b3      	lsls	r3, r6, #2
 80050aa:	58eb      	ldr	r3, [r5, r3]
 80050ac:	4798      	blx	r3
 80050ae:	3601      	adds	r6, #1
 80050b0:	e7ee      	b.n	8005090 <__libc_init_array+0xc>
 80050b2:	00b3      	lsls	r3, r6, #2
 80050b4:	58eb      	ldr	r3, [r5, r3]
 80050b6:	4798      	blx	r3
 80050b8:	3601      	adds	r6, #1
 80050ba:	e7f2      	b.n	80050a2 <__libc_init_array+0x1e>
 80050bc:	080053bc 	.word	0x080053bc
 80050c0:	080053bc 	.word	0x080053bc
 80050c4:	080053c0 	.word	0x080053c0
 80050c8:	080053bc 	.word	0x080053bc

080050cc <memcpy>:
 80050cc:	2300      	movs	r3, #0
 80050ce:	b510      	push	{r4, lr}
 80050d0:	429a      	cmp	r2, r3
 80050d2:	d100      	bne.n	80050d6 <memcpy+0xa>
 80050d4:	bd10      	pop	{r4, pc}
 80050d6:	5ccc      	ldrb	r4, [r1, r3]
 80050d8:	54c4      	strb	r4, [r0, r3]
 80050da:	3301      	adds	r3, #1
 80050dc:	e7f8      	b.n	80050d0 <memcpy+0x4>
	...

080050e0 <_init>:
 80050e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050e2:	46c0      	nop			@ (mov r8, r8)
 80050e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050e6:	bc08      	pop	{r3}
 80050e8:	469e      	mov	lr, r3
 80050ea:	4770      	bx	lr

080050ec <_fini>:
 80050ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050ee:	46c0      	nop			@ (mov r8, r8)
 80050f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050f2:	bc08      	pop	{r3}
 80050f4:	469e      	mov	lr, r3
 80050f6:	4770      	bx	lr
